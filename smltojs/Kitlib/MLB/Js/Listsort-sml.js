if ((typeof(kitlib$Listsort$)) == "undefined") {kitlib$Listsort$ = {};
};
(function(){kitlib$Listsort$.sort$45 = function(ordr$48,xs$51){var fix$281 = {};
fix$281.$merge = function(v$55,v$58){if (v$55 == null) {return v$58;
} else {if (v$58 == null) {return v$55;
} else {var v$78 = v$55;
var v$79 = v$78[0];
var v$80 = v$78[1];
var v$81 = v$58;
var v$82 = v$81[0];
var v$83 = v$81[1];
var t$294;
var v$263 = ordr$48([v$79,v$82]);
var v$264 = 1;
t$294 = ((basis$General$.eq_order$247(v$263,v$264))?false:true);
return t$294?[v$79,fix$281.$merge(v$80,[v$82,v$83])]:[v$82,fix$281.$merge([v$79,v$80],v$83)];
};
};
};
var merge$52 = fix$281.$merge;
var fix$282 = {};
fix$282.$mergepairs = function(v$87,v$90,v$93){lab$mergepairs: while (true) {if (v$90 == null) {return [v$87,null];
} else {var v$113 = v$90;
var v$114 = v$113[0];
var v$115 = v$113[1];
if ((SmlPrims.mod_i32(v$93,2,CompilerInitial.exn$Div$40)) == 1) {return [v$87,v$90];
} else {var t$283 = merge$52(v$87,v$114);
var t$284 = v$115;
var t$285 = SmlPrims.div_i32(v$93,2,CompilerInitial.exn$Div$40);
var v$87 = t$283;
var v$90 = t$284;
var v$93 = t$285;
continue lab$mergepairs;
};
};
};
};
var mergepairs$84 = fix$282.$mergepairs;
var fix$286 = {};
fix$286.$nextrun = function(v$120,v$123){lab$nextrun: while (true) {if (v$123 == null) {return [v$120,null];
} else {var v$140 = v$123;
var v$141 = v$140[0];
var v$142 = v$140[1];
var t$287;
var v$270 = ordr$48([v$141,basis$List$.hd$55(v$120)]);
var v$271 = 0;
t$287 = (basis$General$.eq_order$247(v$270,v$271));
if (t$287) {return [v$120,v$123];
} else {var t$288 = [v$141,v$120];
var t$289 = v$142;
var v$120 = t$288;
var v$123 = t$289;
continue lab$nextrun;
};
};
};
};
var nextrun$117 = fix$286.$nextrun;
var fix$290 = {};
fix$290.$sorting = function(v$146,v$149,v$152){lab$sorting: while (true) {if (v$146 == null) {return basis$List$.hd$55(mergepairs$84(null,v$149,0));
} else {var v$172 = v$146;
var v$173 = v$172[0];
var v$174 = v$172[1];
var v$169 = nextrun$117([v$173,null],v$174);
var v$170 = v$169[0];
var v$171 = v$169[1];
var t$291 = v$171;
var t$292 = mergepairs$84(basis$List$.rev$248(v$170),v$149,SmlPrims.chk_ovf_i32(v$152 + 1));
var t$293 = SmlPrims.chk_ovf_i32(v$152 + 1);
var v$146 = t$291;
var v$149 = t$292;
var v$152 = t$293;
continue lab$sorting;
};
};
};
var sorting$143 = fix$290.$sorting;
return sorting$143(xs$51,null,0);
};
kitlib$Listsort$.sorted$177 = function(v$180,v$183){if (v$183 == null) {return true;
} else {var v$220 = v$183;
var v$221 = v$220[0];
var v$222 = v$220[1];
var fix$295 = {};
fix$295.$h = function(v$197,v$200){lab$h: while (true) {if (v$200 == null) {return true;
} else {var v$216 = v$200;
var v$217 = v$216[0];
var v$218 = v$216[1];
var t$296;
var v$279 = v$180([v$197,v$217]);
var v$280 = 1;
t$296 = ((basis$General$.eq_order$247(v$279,v$280))?false:true);
if (t$296) {var t$297 = v$217;
var t$298 = v$218;
var v$197 = t$297;
var v$200 = t$298;
continue lab$h;
} else {return false;
};
};
};
};
var h$194 = fix$295.$h;
return h$194(v$221,v$222);
};
};
return 0;
})();
