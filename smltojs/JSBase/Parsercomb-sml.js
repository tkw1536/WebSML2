if ((typeof(xmlrpc$Parsercomb$)) == "undefined") {xmlrpc$Parsercomb$ = {};
};
(function(){xmlrpc$Parsercomb$.stream$49 = function(get$52,src$55){var fix$991 = {};
fix$991.$next = function(src$59,n$62){var v$68 = get$52(src$59);
switch (v$68[0]) { case 0: {var v$70 = v$68[1];
var v$71 = v$70[0];
var v$72 = v$70[1];
return [0,[v$71,[0,[SmlPrims.chk_ovf_i32(n$62 + 1),function(v$921){return fix$991.$next(v$72,v$921);
}]]]];
 break; }default: {return [1];
} };
};
var next$56 = fix$991.$next;
return [0,[0,function(v$923){return next$56(src$55,v$923);
}]];
};
xmlrpc$Parsercomb$.getItem$73 = function(v$76){var v$81 = v$76[1];
var v$82 = v$81[0];
var v$83 = v$81[1];
return v$83(v$82);
};
xmlrpc$Parsercomb$.en$Parse$84 = new String("Parse");
xmlrpc$Parsercomb$.commitChar$85 = function(expected$88,par$91,strm$94){var v$117 = strm$94[1];
var v$118 = v$117[0];
var v$119 = v$117[1];
var v$106 = par$91(strm$94);
switch (v$106[0]) { case 1: {var t$1005;
var t$1004;
var t$1003;
var t$1002;
var t$1001 = "Expected <";
var t$1000;
var t$999;
var t$998 = expected$88;
var t$997;
var t$996;
var t$995 = "> but found <";
var t$994;
var t$993;
var t$992;
var v$111 = v$119(v$118);
switch (v$111[0]) { case 1: {t$992 = "eof>";
 break; }default: {t$992 = ((SmlPrims.implode([v$111[1][0],null])) + ">");
} };
t$993 = [t$992,[" at character number ",[basis$Int32$.toString$449(v$118),null]]];
t$994 = t$993;
t$996 = [t$995,t$994];
t$997 = t$996;
t$999 = [t$998,t$997];
t$1000 = t$999;
t$1002 = [t$1001,t$1000];
t$1003 = t$1002;
t$1004 = (SmlPrims.concat(t$1003));
t$1005 = [xmlrpc$Parsercomb$.en$Parse$84,t$1004];
throw t$1005;
 break; }default: {return v$106;
} };
};
xmlrpc$Parsercomb$.commitElem$120 = function(expected$123,show$126,par$129,strm$132){var v$157 = strm$132[1];
var v$158 = v$157[0];
var v$159 = v$157[1];
var v$145 = par$129(strm$132);
switch (v$145[0]) { case 1: {var t$1019;
var t$1018;
var t$1017;
var t$1016;
var t$1015 = "Expected <";
var t$1014;
var t$1013;
var t$1012 = expected$123;
var t$1011;
var t$1010;
var t$1009 = "> but found <";
var t$1008;
var t$1007;
var t$1006;
var v$150 = v$159(v$158);
switch (v$150[0]) { case 1: {t$1006 = "eof>";
 break; }default: {var v$151 = v$150[1];
var v$152 = v$151[0];
t$1006 = ((show$126(v$152)) + ">");
} };
t$1007 = [t$1006,[" at element number ",[basis$Int32$.toString$449(v$158),null]]];
t$1008 = t$1007;
t$1010 = [t$1009,t$1008];
t$1011 = t$1010;
t$1013 = [t$1012,t$1011];
t$1014 = t$1013;
t$1016 = [t$1015,t$1014];
t$1017 = t$1016;
t$1018 = (SmlPrims.concat(t$1017));
t$1019 = [xmlrpc$Parsercomb$.en$Parse$84,t$1018];
throw t$1019;
 break; }default: {return v$145;
} };
};
xmlrpc$Parsercomb$.scan$160 = function(scanner$163){return scanner$163(function(v$619){var v$620 = v$619[1];
var v$621 = v$620[0];
var v$622 = v$620[1];
return v$622(v$621);
});
};
xmlrpc$Parsercomb$.s$llk$164 = function(v$182,v$183){return function(strm$171){var v$177 = v$182(strm$171);
switch (v$177[0]) { case 0: {var v$179 = v$177[1];
var v$180 = v$179[0];
var v$181 = v$179[1];
return (v$183(v$180))(v$181);
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.success$184 = function(x$187,strm$190){return [0,[x$187,strm$190]];
};
xmlrpc$Parsercomb$.failure$191 = function(strm$194){return [1];
};
xmlrpc$Parsercomb$.eof$195 = function(r$198,strm$201){var t$1020;
var v$624 = strm$201[1];
var v$625 = v$624[0];
var v$626 = v$624[1];
t$1020 = (v$626(v$625));
switch (t$1020[0]) { case 1: {return [0,[r$198,strm$201]];
 break; }default: {return [1];
} };
};
xmlrpc$Parsercomb$.s$ll$209 = function(v$227,v$228){return function(strm$216){var v$222 = v$227(strm$216);
switch (v$222[0]) { case 0: {var v$224 = v$222[1];
var v$225 = v$224[0];
var v$226 = v$224[1];
return [0,[v$228(v$225),v$226]];
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.s$llt$229 = function(v$254,v$255){return function(strm$236){var v$242 = v$254(strm$236);
switch (v$242[0]) { case 0: {var v$251 = v$242[1];
var v$252 = v$251[0];
var v$253 = v$251[1];
var v$248 = v$255(v$252);
switch (v$248[0]) { case 0: {return [0,[v$248[1],v$253]];
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.s$sl$256 = function(v$263,v$264){return function(strm$630){var v$631 = v$263(strm$630);
switch (v$631[0]) { case 0: {return [0,[v$264,v$631[1][1]]];
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.s$gg$265 = function(v$293,v$294){return function(strm$272){var v$278 = v$293(strm$272);
switch (v$278[0]) { case 0: {var v$290 = v$278[1];
var v$291 = v$290[0];
var v$292 = v$290[1];
var v$285 = v$294(v$292);
switch (v$285[0]) { case 0: {var v$287 = v$285[1];
return [0,[[v$291,v$287[0]],v$287[1]]];
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.s$egg$295 = function(v$311,v$312){return function(strm$302){var v$307 = v$311(strm$302);
switch (v$307[0]) { case 0: {var v$309 = v$307[1];
var v$310 = v$309[1];
return v$312(v$310);
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.s$gge$313 = function(v$322,v$323){return function(strm$638){var v$639;
var v$882 = v$322(strm$638);
switch (v$882[0]) { case 0: {var v$883 = v$882[1];
var v$884 = v$883[0];
var v$885 = v$883[1];
var v$886 = v$323(v$885);
switch (v$886[0]) { case 0: {var v$887 = v$886[1];
v$639 = [0,[[v$884,v$887[0]],v$887[1]]];
 break; }default: {v$639 = [1];
} };
 break; }default: {v$639 = [1];
} };
switch (v$639[0]) { case 0: {var v$640 = v$639[1];
return [0,[v$640[0][0],v$640[1]]];
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.s$ss$324 = function(v$337,v$338){return function(strm$331){var v$336 = v$337(strm$331);
switch (v$336[0]) { case 1: {return v$338(strm$331);
 break; }default: {return v$336;
} };
};
};
xmlrpc$Parsercomb$.skipWS$339 = function(par$342,strm$345){return par$342(basis$StringCvt$.skipWS$267(function(v$653){var v$654 = v$653[1];
var v$655 = v$654[0];
var v$656 = v$654[1];
return v$656(v$655);
},strm$345));
};
xmlrpc$Parsercomb$.optional$346 = function(par$349,strm0$352){var v$358 = par$349(strm0$352);
switch (v$358[0]) { case 0: {var v$360 = v$358[1];
return [0,[[0,v$360[0]],v$360[1]]];
 break; }default: {return [0,[[1],strm0$352]];
} };
};
xmlrpc$Parsercomb$.unless$363 = function(v$375,v$376){return function(strm$370){switch ((v$376(strm$370))[0]) { case 1: {return v$375(strm$370);
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.repeat0$377 = function(par$380,strm$383){var fix$1021 = {};
fix$1021.$loop = function(strm0$387,res$390){lab$loop: while (true) {var v$396 = par$380(strm0$387);
switch (v$396[0]) { case 0: {var v$398 = v$396[1];
var v$399 = v$398[0];
var v$400 = v$398[1];
var t$1022 = v$400;
var t$1023 = [v$399,res$390];
var strm0$387 = t$1022;
var res$390 = t$1023;
continue lab$loop;
 break; }default: {return [0,[basis$List$.rev$248(res$390),strm0$387]];
} };
};
};
var loop$384 = fix$1021.$loop;
return loop$384(strm$383,null);
};
xmlrpc$Parsercomb$.repeat1$401 = function(par$404,strm$660){var v$661 = par$404(strm$660);
switch (v$661[0]) { case 0: {var v$662 = v$661[1];
var v$663 = v$662[0];
var v$664 = v$662[1];
var v$665;
var fix$1024 = {};
fix$1024.$loop = function(strm0$899,res$900){lab$loop: while (true) {var v$901 = par$404(strm0$899);
switch (v$901[0]) { case 0: {var v$902 = v$901[1];
var v$903 = v$902[0];
var v$904 = v$902[1];
var t$1025 = v$904;
var t$1026 = [v$903,res$900];
var strm0$899 = t$1025;
var res$900 = t$1026;
continue lab$loop;
 break; }default: {return [0,[basis$List$.rev$248(res$900),strm0$899]];
} };
};
};
var loop$898 = fix$1024.$loop;
v$665 = (loop$898(v$664,null));
switch (v$665[0]) { case 0: {var v$666 = v$665[1];
return [0,[[v$663,v$666[0]],v$666[1]]];
 break; }default: {return [1];
} };
 break; }default: {return [1];
} };
};
xmlrpc$Parsercomb$.s$d$405 = function(s$408,strm0$411){var len$412 = s$408.length;
var fix$1027 = {};
fix$1027.$loop = function(n$417,strm$420){lab$loop: while (true) {if (n$417 == len$412) {return [0,[s$408,strm$420]];
} else {var v$430;
var v$678 = strm$420[1];
var v$679 = v$678[0];
var v$680 = v$678[1];
v$430 = (v$680(v$679));
switch (v$430[0]) { case 0: {var v$436 = v$430[1];
var v$437 = v$436[0];
var v$438 = v$436[1];
if (v$437 == (basis$String$.sub$92(s$408,n$417))) {var t$1028 = SmlPrims.chk_ovf_i32(n$417 + 1);
var t$1029 = v$438;
var n$417 = t$1028;
var strm$420 = t$1029;
continue lab$loop;
} else {return [1];
};
 break; }default: {return [1];
} };
};
};
};
var loop$414 = fix$1027.$loop;
return loop$414(0,strm0$411);
};
xmlrpc$Parsercomb$.s$dgg$439 = function(v$448,v$449){return function(strm$684){var v$685;
var v$942 = xmlrpc$Parsercomb$.s$d$405(v$448,strm$684);
switch (v$942[0]) { case 0: {var v$944 = v$942[1];
var v$945 = v$944[0];
var v$946 = v$944[1];
var v$947 = v$449(v$946);
switch (v$947[0]) { case 0: {var v$948 = v$947[1];
v$685 = [0,[[v$945,v$948[0]],v$948[1]]];
 break; }default: {v$685 = [1];
} };
 break; }default: {v$685 = [1];
} };
switch (v$685[0]) { case 0: {var v$686 = v$685[1];
return [0,[v$686[0][1],v$686[1]]];
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.s$ggd$450 = function(v$459,v$460){return function(strm$702){var v$703;
var v$951 = v$459(strm$702);
switch (v$951[0]) { case 0: {var v$952 = v$951[1];
var v$953 = v$952[0];
var v$954 = v$952[1];
var v$955 = xmlrpc$Parsercomb$.s$d$405(v$460,v$954);
switch (v$955[0]) { case 0: {var v$957 = v$955[1];
v$703 = [0,[[v$953,v$957[0]],v$957[1]]];
 break; }default: {v$703 = [1];
} };
 break; }default: {v$703 = [1];
} };
switch (v$703[0]) { case 0: {var v$704 = v$703[1];
return [0,[v$704[0][0],v$704[1]]];
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.getChar$461 = function(pred$464,strm$467){var v$474;
var v$718 = strm$467[1];
var v$719 = v$718[0];
var v$720 = v$718[1];
v$474 = (v$720(v$719));
switch (v$474[0]) { case 0: {var v$480 = v$474[1];
var v$481 = v$480[0];
return (pred$464(v$481))?v$474:[1];
 break; }default: {return [1];
} };
};
xmlrpc$Parsercomb$.s$de$483 = function(v$612,elm$486,strm$489){var v$496;
var v$722 = strm$489[1];
var v$723 = v$722[0];
var v$724 = v$722[1];
v$496 = (v$724(v$723));
switch (v$496[0]) { case 0: {var v$502 = v$496[1];
var v$503 = v$502[0];
return (v$612([v$503,elm$486]))?v$496:[1];
 break; }default: {return [1];
} };
};
xmlrpc$Parsercomb$.getLit$505 = function(v$613,elm$730,strm$731){var v$732;
var v$734 = strm$731[1];
var v$735 = v$734[0];
var v$736 = v$734[1];
v$732 = (v$736(v$735));
switch (v$732[0]) { case 0: {var v$737 = v$732[1];
var v$738 = v$737[0];
return (v$613([v$738,elm$730]))?v$732:[1];
 break; }default: {return [1];
} };
};
xmlrpc$Parsercomb$.getChars0$506 = function(pred$509,strm$512){return [0,basis$StringCvt$.splitl$197(pred$509,function(v$743){var v$744 = v$743[1];
var v$745 = v$744[0];
var v$746 = v$744[1];
return v$746(v$745);
},strm$512)];
};
xmlrpc$Parsercomb$.getChars1$526 = function(pred$529){return function(strm$750){var v$751;
var v$974 = xmlrpc$Parsercomb$.repeat1$401(function(strm$976){var v$977;
var v$978 = strm$976[1];
var v$979 = v$978[0];
var v$980 = v$978[1];
v$977 = (v$980(v$979));
switch (v$977[0]) { case 0: {var v$981 = v$977[1];
var v$982 = v$981[0];
return (pred$529(v$982))?v$977:[1];
 break; }default: {return [1];
} };
},strm$750);
switch (v$974[0]) { case 0: {var v$983 = v$974[1];
v$751 = [0,[v$983[0],v$983[1]]];
 break; }default: {v$751 = [1];
} };
switch (v$751[0]) { case 0: {var v$752 = v$751[1];
return [0,[SmlPrims.implode(v$752[0]),v$752[1]]];
 break; }default: {return [1];
} };
};
};
xmlrpc$Parsercomb$.getElem$531 = function(pred$773,strm$774){var v$775;
var v$777 = strm$774[1];
var v$778 = v$777[0];
var v$779 = v$777[1];
v$775 = (v$779(v$778));
switch (v$775[0]) { case 0: {var v$780 = v$775[1];
var v$781 = v$780[0];
return (pred$773(v$781))?v$775:[1];
 break; }default: {return [1];
} };
};
xmlrpc$Parsercomb$.getElems0$532 = function(pred$535,strm$783){var fix$1030 = {};
fix$1030.$loop = function(strm0$785,res$786){lab$loop: while (true) {var v$787;
var v$914;
var v$915 = strm0$785[1];
var v$916 = v$915[0];
var v$917 = v$915[1];
v$914 = (v$917(v$916));
switch (v$914[0]) { case 0: {var v$918 = v$914[1];
var v$919 = v$918[0];
v$787 = ((pred$535(v$919))?v$914:[1]);
 break; }default: {v$787 = [1];
} };
switch (v$787[0]) { case 0: {var v$788 = v$787[1];
var v$789 = v$788[0];
var v$790 = v$788[1];
var t$1031 = v$790;
var t$1032 = [v$789,res$786];
var strm0$785 = t$1031;
var res$786 = t$1032;
continue lab$loop;
 break; }default: {return [0,[basis$List$.rev$248(res$786),strm0$785]];
} };
};
};
var loop$784 = fix$1030.$loop;
return loop$784(strm$783,null);
};
xmlrpc$Parsercomb$.getElems1$536 = function(pred$539){return function(v$931){return xmlrpc$Parsercomb$.repeat1$401(function(strm$984){var v$985;
var v$986 = strm$984[1];
var v$987 = v$986[0];
var v$988 = v$986[1];
v$985 = (v$988(v$987));
switch (v$985[0]) { case 0: {var v$989 = v$985[1];
var v$990 = v$989[0];
return (pred$539(v$990))?v$985:[1];
 break; }default: {return [1];
} };
},v$931);
};
};
xmlrpc$Parsercomb$.parse$551 = function(par$554,strm$557){var v$562 = par$554(strm$557);
switch (v$562[0]) { case 1: {return [1];
 break; }default: {var v$563 = v$562[1];
var v$564 = v$563[0];
return [0,v$564];
} };
};
xmlrpc$Parsercomb$.scanSubstr$565 = function(par$568,sus$571){var strm$808;
var fix$1033 = {};
fix$1033.$next = function(src$815,n$816){var v$817 = basis$Substring$.getc$172(src$815[0],src$815[1],src$815[2]);
switch (v$817[0]) { case 0: {var v$818 = v$817[1];
var v$819 = v$818[0];
var v$820 = v$818[1];
return [0,[v$819,[0,[SmlPrims.chk_ovf_i32(n$816 + 1),function(v$933){return fix$1033.$next(v$820,v$933);
}]]]];
 break; }default: {return [1];
} };
};
var next$814 = fix$1033.$next;
strm$808 = [0,[0,function(v$935){return next$814(sus$571,v$935);
}]];
var v$809 = par$568(strm$808);
switch (v$809[0]) { case 1: {return [1];
 break; }default: {var v$810 = v$809[1];
var v$811 = v$810[0];
return [0,v$811];
} };
};
xmlrpc$Parsercomb$.scanString$572 = function(par$575,s$578){return xmlrpc$Parsercomb$.scanSubstr$565(par$575,[s$578,0,s$578.length]);
};
xmlrpc$Parsercomb$.scanList$579 = function(par$582,cs$585){var strm$823;
var fix$1034 = {};
fix$1034.$next = function(src$830,n$831){var v$832 = basis$List$.getItem$575(src$830);
switch (v$832[0]) { case 0: {var v$833 = v$832[1];
var v$834 = v$833[0];
var v$835 = v$833[1];
return [0,[v$834,[0,[SmlPrims.chk_ovf_i32(n$831 + 1),function(v$937){return fix$1034.$next(v$835,v$937);
}]]]];
 break; }default: {return [1];
} };
};
var next$829 = fix$1034.$next;
strm$823 = [0,[0,function(v$939){return next$829(cs$585,v$939);
}]];
var v$824 = par$582(strm$823);
switch (v$824[0]) { case 1: {return [1];
 break; }default: {var v$825 = v$824[1];
var v$826 = v$825[0];
return [0,v$826];
} };
};
return 0;
})();
