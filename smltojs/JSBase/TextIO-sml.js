if ((typeof(basis$TextIO$)) == "undefined") {basis$TextIO$ = {};
};
(function(){basis$TextIO$.eq_file0$219 = function(v$221,v$222){switch (v$221[0]) { case 0: {switch (v$222[0]) { case 0: {return v$221[1] == v$222[1];
 break; }default: {return false;
} };
 break; }case 1: {switch (v$222[0]) { case 1: {return v$221[1] == v$222[1];
 break; }default: {return false;
} };
 break; } };
};
basis$TextIO$.eq_outstream$229 = function(v$231,v$232){switch (v$231[0]) { case 0: {switch (v$232[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$232[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$232[0]) { case 2: {return v$231[1] == v$232[1];
 break; }default: {return false;
} };
 break; } };
};
var fs$62 = [null];
var openOut0$63 = function(append$66,s$69){var v$74 = basis$List$.find$361(function(v$97){return s$69 == v$97[0];
},fs$62[0]);
switch (v$74[0]) { case 0: {var v$90 = v$74[1];
var v$91 = v$90[1];
var v$80 = v$91[0];
switch (v$80[0]) { case 1: {var v$89 = v$80[1];
var f$82 = append$66?[v$89,null]:null;
(v$91[0] = [0,[f$82]],0);
return [2,v$91];
 break; }default: {throw [basis$Initial$.en$Fail$45,"File already open: " + s$69];
} };
 break; }default: {var f$92 = [[0,[null]]];
(fs$62[0] = [[s$69,f$92],fs$62[0]],0);
return [2,f$92];
} };
};
basis$TextIO$.openOut$99 = function(v$367){return openOut0$63(false,v$367);
};
basis$TextIO$.openAppend$100 = function(v$369){return openOut0$63(true,v$369);
};
basis$TextIO$.output$101 = function(v$118,v$119){switch (v$118[0]) { case 0: {return basis$General$.print$156(v$119);
 break; }case 1: {return basis$General$.print$156(v$119);
 break; }default: {var v$115 = v$118[1];
switch (v$115[0][0]) { case 0: {var v$117 = v$115[0][1];
return (v$117[0] = [v$119,v$117[0]],0);
 break; }default: {throw [basis$Initial$.en$Fail$45,"output: outstream closed"];
} };
} };
};
basis$TextIO$.closeOut$120 = function(os$123){switch (os$123[0]) { case 2: {var v$137 = os$123[1];
var v$134 = v$137[0];
switch (v$134[0]) { case 0: {var v$136 = v$134[1];
return (v$137[0] = [1,SmlPrims.concat(basis$List$.rev$641(v$136[0]))],0);
 break; }default: {return 0;
} };
 break; }default: {return 0;
} };
};
basis$TextIO$.output1$138 = function(v$143,v$144){var v$316 = basis$Char$.toString$268(v$144);
switch (v$143[0]) { case 0: {return basis$General$.print$156(v$316);
 break; }case 1: {return basis$General$.print$156(v$316);
 break; }default: {var v$256 = v$143[1];
switch (v$256[0][0]) { case 0: {var v$257 = v$256[0][1];
return (v$257[0] = [v$316,v$257[0]],0);
 break; }default: {throw [basis$Initial$.en$Fail$45,"output: outstream closed"];
} };
} };
};
basis$TextIO$.outputSubstr$145 = function(v$150,v$151){var v$320 = basis$Substring$.string$108(v$151[0],v$151[1],v$151[2]);
switch (v$150[0]) { case 0: {return basis$General$.print$156(v$320);
 break; }case 1: {return basis$General$.print$156(v$320);
 break; }default: {var v$262 = v$150[1];
switch (v$262[0][0]) { case 0: {var v$263 = v$262[0][1];
return (v$263[0] = [v$320,v$263[0]],0);
 break; }default: {throw [basis$Initial$.en$Fail$45,"output: outstream closed"];
} };
} };
};
basis$TextIO$.flushOut$152 = function(v$154){return 0;
};
basis$TextIO$.print$155 = function(v$370){return basis$General$.print$156(v$370);
};
basis$TextIO$.openIn$160 = function(v$162){throw [basis$Initial$.en$Fail$45,"TextIO.openIn: unimplemented"];
};
basis$TextIO$.closeIn$163 = function(v$165){throw [basis$Initial$.en$Fail$45,"TextIO.closeIn: unimplemented"];
};
basis$TextIO$.input$166 = function(v$168){throw [basis$Initial$.en$Fail$45,"TextIO.input: unimplemented"];
};
basis$TextIO$.inputAll$169 = function(v$171){throw [basis$Initial$.en$Fail$45,"TextIO.inputAll: unimplemented"];
};
basis$TextIO$.input1$172 = function(v$174){throw [basis$Initial$.en$Fail$45,"TextIO.input1: unimplemented"];
};
basis$TextIO$.inputN$175 = function(v$177){throw [basis$Initial$.en$Fail$45,"TextIO.inputN: unimplemented"];
};
basis$TextIO$.inputLine$178 = function(v$180){throw [basis$Initial$.en$Fail$45,"TextIO.inputLine: unimplemented"];
};
basis$TextIO$.endOfStream$181 = function(v$183){throw [basis$Initial$.en$Fail$45,"TextIO.endOfStream: unimplemented"];
};
basis$TextIO$.lookahead$184 = function(v$186){throw [basis$Initial$.en$Fail$45,"TextIO.lookahead: unimplemented"];
};
basis$TextIO$.scanStream$187 = function(v$189,v$191){throw [basis$Initial$.en$Fail$45,"TextIO.scanStream: unimplemented"];
};
basis$TextIO$.stdIn$192 = 0;
return 0;
})();
