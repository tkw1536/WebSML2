if ((typeof(basis$ByteTable$$22)) == "undefined") {basis$ByteTable$$22 = {};
};
(function(){basis$ByteTable$$22.sub_array_unsafe$3514 = function(v$4417,v$4418){return v$4417[v$4418];
};
basis$ByteTable$$22.update_array_unsafe$3521 = function(v$4419,v$4420,v$4421){return (v$4419[v$4420] = v$4421,0);
};
basis$ByteTable$$22.alloc_array_unsafe$3530 = function(i$3533){return Array(i$3533);
};
basis$ByteTable$$22.length_array$3534 = function(a$3537){return a$3537.length;
};
basis$ByteTable$$22.sub_vector_unsafe$3538 = function(v$4422,v$4423){return v$4422.charCodeAt(v$4423);
};
basis$ByteTable$$22.fromList$3545 = function(es$4196){return SmlPrims.charsToCharArray(es$4196);
};
basis$ByteTable$$22.concat$3546 = function(vs$4197){return SmlPrims.charArraysConcat(vs$4197);
};
basis$ByteTable$$22.length$3547 = function(t$4198){return t$4198.length;
};
basis$ByteTable$$22.length_vector$3548 = function(v$3551){return v$3551.length;
};
basis$ByteTable$$22.explode$3552 = function(t$3555){var fix$4426 = {};
fix$4426.$h = function(v$3565,v$3566){lab$h: while (true) {if (v$3565 < 0) {return v$3566;
} else {var t$4427 = SmlPrims.chk_ovf_i32(v$3565 - 1);
var t$4428 = [t$3555[v$3565],v$3566];
var v$3565 = t$4427;
var v$3566 = t$4428;
continue lab$h;
};
};
};
var h$3556 = fix$4426.$h;
return h$3556(SmlPrims.chk_ovf_i32(t$3555.length - 1),null);
};
basis$ByteTable$$22.maxLen$3567 = 16777211;
basis$ByteTable$$22.sub$3568 = function(v$3581,v$3582){if ((v$3582 < 0)?true:(v$3582 >= v$3581.length)) {throw basis$General$.exn$Subscript$51;
} else {return v$3581[v$3582];
};
};
basis$ByteTable$$22.tabulate$3583 = function(v$3609,v$3610){if ((v$3609 < 0)?true:(v$3609 > 16777211)) {throw basis$General$.exn$Size$53;
} else {var t$3592 = Array(v$3609);
var fix$4429 = {};
fix$4429.$loop = function(j$3596){lab$loop: while (true) {if (j$3596 < v$3609) {(t$3592[j$3596] = (v$3610(j$3596)),0);
var t$4430 = SmlPrims.chk_ovf_i32(j$3596 + 1);
var j$3596 = t$4430;
continue lab$loop;
} else {return 0;
};
};
};
var loop$3593 = fix$4429.$loop;
loop$3593(0);
return t$3592;
};
};
basis$ByteTable$$22.array$3611 = function(v$3633,v$3634){if (v$3633 > 16777211) {throw basis$General$.exn$Size$53;
} else {var t$3620 = Array(v$3633);
var fix$4431 = {};
fix$4431.$loop = function(j$3624){lab$loop: while (true) {if (j$3624 < v$3633) {(t$3620[j$3624] = v$3634,0);
var t$4432 = SmlPrims.chk_ovf_i32(j$3624 + 1);
var j$3624 = t$4432;
continue lab$loop;
} else {return 0;
};
};
};
var loop$3621 = fix$4431.$loop;
loop$3621(0);
return t$3620;
};
};
basis$ByteTable$$22.update$3635 = function(v$3649,v$3650,v$3651){if ((v$3650 < 0)?true:(v$3650 >= v$3649.length)) {throw basis$General$.exn$Subscript$51;
} else {return (v$3649[v$3650] = v$3651,0);
};
};
basis$ByteTable$$22.updatev$3652 = function(v$3673,v$3674,v$3675){if ((v$3674 < 0)?true:(v$3674 >= v$3673.length)) {throw basis$General$.exn$Subscript$51;
} else {var v$4405 = v$3673.length;
if ((v$4405 < 0)?true:(v$4405 > 16777211)) {throw basis$General$.exn$Size$53;
} else {var t$4390 = Array(v$4405);
var fix$4433 = {};
fix$4433.$loop = function(j$4392){lab$loop: while (true) {if (j$4392 < v$4405) {(t$4390[j$4392] = ((v$3674 == j$4392)?v$3675:v$3673[j$4392]),0);
var t$4434 = SmlPrims.chk_ovf_i32(j$4392 + 1);
var j$4392 = t$4434;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4391 = fix$4433.$loop;
loop$4391(0);
return t$4390;
};
};
};
basis$ByteTable$$22.foldl$3676 = function(f$3679,e$3682,a$3685){var stop$3686 = a$3685.length;
var fix$4435 = {};
fix$4435.$lr = function(v$3696,v$3697){lab$lr: while (true) {if (v$3696 < stop$3686) {var t$4436 = SmlPrims.chk_ovf_i32(v$3696 + 1);
var t$4437 = f$3679([a$3685[v$3696],v$3697]);
var v$3696 = t$4436;
var v$3697 = t$4437;
continue lab$lr;
} else {return v$3697;
};
};
};
var lr$3687 = fix$4435.$lr;
return lr$3687(0,e$3682);
};
basis$ByteTable$$22.foldr$3698 = function(f$3701,e$3704,a$3707){var fix$4438 = {};
fix$4438.$rl = function(v$3717,v$3718){lab$rl: while (true) {if (v$3717 >= 0) {var t$4439 = SmlPrims.chk_ovf_i32(v$3717 - 1);
var t$4440 = f$3701([a$3707[v$3717],v$3718]);
var v$3717 = t$4439;
var v$3718 = t$4440;
continue lab$rl;
} else {return v$3718;
};
};
};
var rl$3708 = fix$4438.$rl;
return rl$3708(SmlPrims.chk_ovf_i32(a$3707.length - 1),e$3704);
};
basis$ByteTable$$22.app$3719 = function(f$3722,a$3725){var stop$3726 = a$3725.length;
var fix$4441 = {};
fix$4441.$lr = function(j$3730){lab$lr: while (true) {if (j$3730 < stop$3726) {f$3722(a$3725[j$3730]);
var t$4442 = SmlPrims.chk_ovf_i32(j$3730 + 1);
var j$3730 = t$4442;
continue lab$lr;
} else {return 0;
};
};
};
var lr$3727 = fix$4441.$lr;
return lr$3727(0);
};
basis$ByteTable$$22.map$3737 = function(f$3740,a$3743){var v$4407 = a$3743.length;
if ((v$4407 < 0)?true:(v$4407 > 16777211)) {throw basis$General$.exn$Size$53;
} else {var t$4396 = Array(v$4407);
var fix$4443 = {};
fix$4443.$loop = function(j$4398){lab$loop: while (true) {if (j$4398 < v$4407) {(t$4396[j$4398] = (f$3740(a$3743[j$4398])),0);
var t$4444 = SmlPrims.chk_ovf_i32(j$4398 + 1);
var j$4398 = t$4444;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4397 = fix$4443.$loop;
loop$4397(0);
return t$4396;
};
};
basis$ByteTable$$22.sliceend$3747 = function(v$4424,v$4425,v$3760){switch (v$3760[0]) { case 1: {if ((v$4425 < 0)?true:(v$4425 > v$4424.length)) {throw basis$General$.exn$Subscript$51;
} else {return v$4424.length;
};
 break; }default: {var v$3785 = v$3760[1];
if ((v$4425 < 0)?true:((v$3785 < 0)?true:((SmlPrims.chk_ovf_i32(v$4425 + v$3785)) > v$4424.length))) {throw basis$General$.exn$Subscript$51;
} else {return SmlPrims.chk_ovf_i32(v$4425 + v$3785);
};
} };
};
basis$ByteTable$$22.foldli$3786 = function(f$3789,e$3792,a$3795){var stop$4225 = a$3795.length;
var fix$4445 = {};
fix$4445.$lr = function(v$4228,v$4229){lab$lr: while (true) {if (v$4228 < stop$4225) {var t$4446 = SmlPrims.chk_ovf_i32(v$4228 + 1);
var t$4447 = f$3789([v$4228,a$3795[v$4228],v$4229]);
var v$4228 = t$4446;
var v$4229 = t$4447;
continue lab$lr;
} else {return v$4229;
};
};
};
var lr$4226 = fix$4445.$lr;
return lr$4226(0,e$3792);
};
basis$ByteTable$$22.foldri$3812 = function(f$3815,e$3818,a$3821){var start$4233 = SmlPrims.chk_ovf_i32(a$3821.length - 1);
var fix$4448 = {};
fix$4448.$rl = function(v$4236,v$4237){lab$rl: while (true) {if (v$4236 >= 0) {var t$4449 = SmlPrims.chk_ovf_i32(v$4236 - 1);
var t$4450 = f$3815([v$4236,a$3821[v$4236],v$4237]);
var v$4236 = t$4449;
var v$4237 = t$4450;
continue lab$rl;
} else {return v$4237;
};
};
};
var rl$4234 = fix$4448.$rl;
return rl$4234(start$4233,e$3818);
};
basis$ByteTable$$22.modifyi$3838 = function(f$3841,a$3844){var stop$3845 = a$3844.length;
var fix$4451 = {};
fix$4451.$lr = function(j$3849){lab$lr: while (true) {if (j$3849 < stop$3845) {(a$3844[j$3849] = (f$3841([j$3849,a$3844[j$3849]])),0);
var t$4452 = SmlPrims.chk_ovf_i32(j$3849 + 1);
var j$3849 = t$4452;
continue lab$lr;
} else {return 0;
};
};
};
var lr$3846 = fix$4451.$lr;
return lr$3846(0);
};
basis$ByteTable$$22.modify$3856 = function(f$3859,a$3862){var n$3863 = a$3862.length;
var fix$4453 = {};
fix$4453.$lr = function(j$3867){lab$lr: while (true) {if (j$3867 < n$3863) {(a$3862[j$3867] = (f$3859(a$3862[j$3867])),0);
var t$4454 = SmlPrims.chk_ovf_i32(j$3867 + 1);
var j$3867 = t$4454;
continue lab$lr;
} else {return 0;
};
};
};
var lr$3864 = fix$4453.$lr;
return lr$3864(0);
};
basis$ByteTable$$22.vector$3874 = function(a$3877){return SmlPrims.charArrayToString(a$3877);
};
basis$ByteTable$$22.copy$3944 = function(v$3957,v$3956,v$3955){var v$4344 = [1];
var n_dst$4259 = v$3956.length;
var n_src$4260 = v$3955.length;
var n$4261;
switch (v$4344[0]) { case 1: {n$4261 = (SmlPrims.chk_ovf_i32(v$3955.length - 0));
 break; }default: {n$4261 = v$4344[1];
} };
if ((n$4261 < 0)?true:(((SmlPrims.chk_ovf_i32(0 + n$4261)) > n_src$4260)?true:((v$3957 < 0)?true:((SmlPrims.chk_ovf_i32(v$3957 + n$4261)) > n_dst$4259)))) {throw basis$General$.exn$Subscript$51;
} else {if (0 < v$3957) {var fix$4455 = {};
fix$4455.$hdilo = function(j$4263){lab$hdilo: while (true) {if (j$4263 >= 0) {(v$3956[SmlPrims.chk_ovf_i32(v$3957 + j$4263)] = v$3955[SmlPrims.chk_ovf_i32(0 + j$4263)],0);
var t$4456 = SmlPrims.chk_ovf_i32(j$4263 - 1);
var j$4263 = t$4456;
continue lab$hdilo;
} else {return 0;
};
};
};
var hdilo$4262 = fix$4455.$hdilo;
return hdilo$4262(SmlPrims.chk_ovf_i32(n$4261 - 1));
} else {var fix$4457 = {};
fix$4457.$lo2hi = function(j$4267){lab$lo2hi: while (true) {if (j$4267 < n$4261) {(v$3956[SmlPrims.chk_ovf_i32(v$3957 + j$4267)] = v$3955[SmlPrims.chk_ovf_i32(0 + j$4267)],0);
var t$4458 = SmlPrims.chk_ovf_i32(j$4267 + 1);
var j$4267 = t$4458;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$4266 = fix$4457.$lo2hi;
return lo2hi$4266(0);
};
};
};
basis$ByteTable$$22.copyVec$4010 = function(v$4023,v$4022,v$4021){var v$4359 = [1];
var n_dst$4280 = v$4022.length;
var n_src$4281 = v$4021.length;
var n$4282;
switch (v$4359[0]) { case 1: {n$4282 = (SmlPrims.chk_ovf_i32(n_src$4281 - 0));
 break; }default: {n$4282 = v$4359[1];
} };
if ((n$4282 < 0)?true:(((SmlPrims.chk_ovf_i32(0 + n$4282)) > n_src$4281)?true:((v$4023 < 0)?true:((SmlPrims.chk_ovf_i32(v$4023 + n$4282)) > n_dst$4280)))) {throw basis$General$.exn$Subscript$51;
} else {var fix$4459 = {};
fix$4459.$lo2hi = function(j$4284){lab$lo2hi: while (true) {if (j$4284 < n$4282) {(v$4022[SmlPrims.chk_ovf_i32(v$4023 + j$4284)] = (v$4021.charCodeAt(SmlPrims.chk_ovf_i32(0 + j$4284))),0);
var t$4460 = SmlPrims.chk_ovf_i32(j$4284 + 1);
var j$4284 = t$4460;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$4283 = fix$4459.$lo2hi;
return lo2hi$4283(0);
};
};
basis$ByteTable$$22.appi$4024 = function(f$4027,a$4030){var stop$4031 = a$4030.length;
var fix$4461 = {};
fix$4461.$lr = function(j$4035){lab$lr: while (true) {if (j$4035 < stop$4031) {f$4027([j$4035,a$4030[j$4035]]);
var t$4462 = SmlPrims.chk_ovf_i32(j$4035 + 1);
var j$4035 = t$4462;
continue lab$lr;
} else {return 0;
};
};
};
var lr$4032 = fix$4461.$lr;
return lr$4032(0);
};
basis$ByteTable$$22.mapi$4042 = function(f$4045,a$4048){var v$4409 = a$4048.length;
if ((v$4409 < 0)?true:(v$4409 > 16777211)) {throw basis$General$.exn$Size$53;
} else {var t$4402 = Array(v$4409);
var fix$4463 = {};
fix$4463.$loop = function(j$4404){lab$loop: while (true) {if (j$4404 < v$4409) {(t$4402[j$4404] = (f$4045([j$4404,a$4048[j$4404]])),0);
var t$4464 = SmlPrims.chk_ovf_i32(j$4404 + 1);
var j$4404 = t$4464;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4403 = fix$4463.$loop;
loop$4403(0);
return t$4402;
};
};
basis$ByteTable$$22.find$4052 = function(p$4055,a$4058){var stop$4059 = a$4058.length;
var fix$4465 = {};
fix$4465.$lr = function(j$4063){lab$lr: while (true) {if (j$4063 < stop$4059) {if (p$4055(a$4058[j$4063])) {return [0,a$4058[j$4063]];
} else {var t$4466 = SmlPrims.chk_ovf_i32(j$4063 + 1);
var j$4063 = t$4466;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$4060 = fix$4465.$lr;
return lr$4060(0);
};
basis$ByteTable$$22.exists$4072 = function(p$4075,a$4078){var stop$4079 = a$4078.length;
var fix$4467 = {};
fix$4467.$lr = function(j$4083){lab$lr: while (true) {if (j$4083 < stop$4079) {if (p$4075(a$4078[j$4083])) {return true;
} else {var t$4468 = SmlPrims.chk_ovf_i32(j$4083 + 1);
var j$4083 = t$4468;
continue lab$lr;
};
} else {return false;
};
};
};
var lr$4080 = fix$4467.$lr;
return lr$4080(0);
};
basis$ByteTable$$22.all$4092 = function(p$4095,a$4098){var stop$4099 = a$4098.length;
var fix$4469 = {};
fix$4469.$lr = function(j$4103){lab$lr: while (true) {if (j$4103 >= stop$4099) {return true;
} else {if (p$4095(a$4098[j$4103])) {var t$4470 = SmlPrims.chk_ovf_i32(j$4103 + 1);
var j$4103 = t$4470;
continue lab$lr;
} else {return false;
};
};
};
};
var lr$4100 = fix$4469.$lr;
return lr$4100(0);
};
basis$ByteTable$$22.findi$4112 = function(p$4115,a$4118){var stop$4119 = a$4118.length;
var fix$4471 = {};
fix$4471.$lr = function(j$4123){lab$lr: while (true) {if (j$4123 < stop$4119) {if (p$4115([j$4123,a$4118[j$4123]])) {return [0,[j$4123,a$4118[j$4123]]];
} else {var t$4472 = SmlPrims.chk_ovf_i32(j$4123 + 1);
var j$4123 = t$4472;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$4120 = fix$4471.$lr;
return lr$4120(0);
};
basis$ByteTable$$22.collate$4132 = function(cmp$4135,v$4139){var v$4168 = v$4139[0];
var v$4169 = v$4139[1];
var n1$4140 = v$4168.length;
var n2$4141 = v$4169.length;
var stop$4142 = (n1$4140 < n2$4141)?n1$4140:n2$4141;
var fix$4473 = {};
fix$4473.$h = function(j$4150){lab$h: while (true) {if (j$4150 == stop$4142) {return (n1$4140 < n2$4141)?0:((n1$4140 > n2$4141)?1:2);
} else {var v$4167 = cmp$4135([v$4168[j$4150],v$4169[j$4150]]);
switch (v$4167) { case 2: {var t$4474 = SmlPrims.chk_ovf_i32(j$4150 + 1);
var j$4150 = t$4474;
continue lab$h;
 break; }default: {return v$4167;
} };
};
};
};
var h$4147 = fix$4473.$h;
return h$4147(0);
};
return 0;
})();
