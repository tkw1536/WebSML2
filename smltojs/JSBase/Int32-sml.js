if ((typeof(basis$Int32$)) == "undefined") {basis$Int32$ = {};
};
(function(){basis$Int32$.quot$48 = function(v$57,v$58){if (v$58 == 0) {throw CompilerInitial.exn$Div$40;
} else {return SmlPrims.chk_ovf_i32(SmlPrims.quot(v$57,v$58));
};
};
basis$Int32$.rem$59 = function(v$68,v$69){if (v$69 == 0) {throw CompilerInitial.exn$Div$40;
} else {return v$68 % v$69;
};
};
basis$Int32$.toLarge$78 = function(x$81){return basis$IntInfRep$.fromInt32$1038(x$81);
};
basis$Int32$.fromLarge$82 = function(x$85){return basis$IntInfRep$.toInt32$1026(x$85);
};
basis$Int32$.toInt$86 = function(x$89){return x$89;
};
basis$Int32$.fromInt$90 = function(x$93){return x$93;
};
basis$Int32$.precision$94 = [0,32];
basis$Int32$.maxInt$95 = [0,2147483647];
basis$Int32$.minInt$96 = [0,-2147483648];
basis$Int32$.s$p$97 = function(v$98){return SmlPrims.chk_ovf_i32(-(v$98));
};
basis$Int32$.s$t$99 = function(v$628,v$629){return SmlPrims.chk_ovf_i32(v$628 * v$629);
};
basis$Int32$.div$101 = function(v$630,v$631){return SmlPrims.div_i32(v$630,v$631,CompilerInitial.exn$Div$40);
};
basis$Int32$.mod$103 = function(v$632,v$633){return SmlPrims.mod_i32(v$632,v$633,CompilerInitial.exn$Div$40);
};
basis$Int32$.s$f$105 = function(v$634,v$635){return SmlPrims.chk_ovf_i32(v$634 + v$635);
};
basis$Int32$.s$g$107 = function(v$636,v$637){return SmlPrims.chk_ovf_i32(v$636 - v$637);
};
basis$Int32$.compare$109 = function(v$122,v$123){return (v$122 < v$123)?0:((v$122 > v$123)?1:2);
};
basis$Int32$.abs$124 = function(v$125){return SmlPrims.chk_ovf_i32(Math.abs(v$125));
};
basis$Int32$.min$126 = function(v$135,v$136){return (v$135 < v$136)?v$135:v$136;
};
basis$Int32$.max$137 = function(v$146,v$147){return (v$146 < v$147)?v$147:v$146;
};
basis$Int32$.sign$148 = function(i$151){return (i$151 > 0)?1:((i$151 < 0)?(-1):0);
};
basis$Int32$.sameSign$160 = function(v$165,v$166){return ((v$165 > 0)?1:((v$165 < 0)?(-1):0)) == ((v$166 > 0)?1:((v$166 < 0)?(-1):0));
};
var conv$202 = function(radix$205,i$208){var t$669;
var v$572 = [0,i$208];
var v$660 = [v$572,basis$Int32$.minInt$96];
t$669 = (basis$General$.eq_option$251(function(v$661){return v$661[0] == v$661[1];
},v$660));
if (t$669) {switch (radix$205) { case 2: {return "~10000000000000000000000000000000";
 break; }case 8: {return "~20000000000";
 break; }case 10: {return "~2147483648";
 break; }case 16: {return "~80000000";
 break; }default: {throw [basis$Initial$.en$Fail$45,"conv"];
} };
} else {var fix$662 = {};
fix$662.$h = function(v$226,v$229){lab$h: while (true) {switch (v$226) { case 0: {return v$229;
 break; }default: {var t$666 = SmlPrims.div_i32(v$226,radix$205,CompilerInitial.exn$Div$40);
var t$665;
var t$664;
var t$663;
var i$512 = SmlPrims.mod_i32(v$226,radix$205,CompilerInitial.exn$Div$40);
if (i$512 < 10) {var i$513 = SmlPrims.chk_ovf_i32(i$512 + 48);
t$663 = (basis$Char$.chr$64(i$513));
} else {var i$515 = SmlPrims.chk_ovf_i32(i$512 + 55);
t$663 = (basis$Char$.chr$64(i$515));
};
t$664 = [t$663,v$229];
t$665 = t$664;
var t$667 = t$666;
var t$668 = t$665;
var v$226 = t$667;
var v$229 = t$668;
continue lab$h;
} };
};
};
var h$223 = fix$662.$h;
var t$683;
if (i$208 < 0) {var t$677;
var t$676 = 126;
var t$670;
var n$620 = SmlPrims.chk_ovf_i32(-(i$208));
var t$675 = h$223;
var t$674 = SmlPrims.div_i32(n$620,radix$205,CompilerInitial.exn$Div$40);
var t$673;
var t$672;
var t$671;
var i$621 = SmlPrims.mod_i32(n$620,radix$205,CompilerInitial.exn$Div$40);
if (i$621 < 10) {var i$622 = SmlPrims.chk_ovf_i32(i$621 + 48);
t$671 = (basis$Char$.chr$64(i$622));
} else {var i$623 = SmlPrims.chk_ovf_i32(i$621 + 55);
t$671 = (basis$Char$.chr$64(i$623));
};
t$672 = [t$671,null];
t$673 = t$672;
t$670 = (t$675(t$674,t$673));
t$677 = [t$676,t$670];
t$683 = t$677;
} else {var t$682 = h$223;
var t$681 = SmlPrims.div_i32(i$208,radix$205,CompilerInitial.exn$Div$40);
var t$680;
var t$679;
var t$678;
var i$625 = SmlPrims.mod_i32(i$208,radix$205,CompilerInitial.exn$Div$40);
if (i$625 < 10) {var i$626 = SmlPrims.chk_ovf_i32(i$625 + 48);
t$678 = (basis$Char$.chr$64(i$626));
} else {var i$627 = SmlPrims.chk_ovf_i32(i$625 + 55);
t$678 = (basis$Char$.chr$64(i$627));
};
t$679 = [t$678,null];
t$680 = t$679;
t$683 = (t$682(t$681,t$680));
};
return SmlPrims.implode(t$683);
};
};
basis$Int32$.scan$248 = function(radix$251,getc$254,source$257){var v$412;
switch (radix$251) { case 3: {v$412 = [function(c$432){return (48 <= c$432)?(c$432 <= 49):false;
},2];
 break; }case 0: {v$412 = [function(c$425){return (48 <= c$425)?(c$425 <= 55):false;
},8];
 break; }case 2: {v$412 = [function(c$527){return (48 <= c$527)?(c$527 <= 57):false;
},10];
 break; }default: {v$412 = [function(c$528){return ((48 <= c$528)?(c$528 <= 57):false)?true:(((97 <= c$528)?(c$528 <= 102):false)?true:((65 <= c$528)?(c$528 <= 70):false));
},16];
} };
var v$413 = v$412[0];
var v$414 = v$412[1];
var dig1$261 = function(v$264,v$267){switch (v$267[0]) { case 1: {return [1];
 break; }default: {var v$327 = v$267[1];
var v$328 = v$327[0];
var v$329 = v$327[1];
var fix$684 = {};
fix$684.$digr = function(res$281,next_val$284,src$287){lab$digr: while (true) {var v$293 = getc$254(src$287);
switch (v$293[0]) { case 1: {return [0,[res$281,src$287]];
 break; }default: {var v$298 = v$293[1];
var v$299 = v$298[0];
var v$300 = v$298[1];
if (v$413(v$299)) {var t$685 = next_val$284([v$414,res$281,((48 <= v$299)?(v$299 <= 57):false)?(SmlPrims.chk_ovf_i32(v$299 - 48)):(SmlPrims.mod_i32(SmlPrims.chk_ovf_i32(v$299 - 55),32,CompilerInitial.exn$Div$40))]);
var t$686 = next_val$284;
var t$687 = v$300;
var res$281 = t$685;
var next_val$284 = t$686;
var src$287 = t$687;
continue lab$digr;
} else {return [0,[res$281,src$287]];
};
} };
};
};
var digr$278 = fix$684.$digr;
var next_val$301 = (v$264 == 1)?(function(v$310){var v$311 = v$310[0];
var v$312 = v$310[1];
var v$313 = v$310[2];
return SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$311 * v$312)) + v$313);
}):(function(v$318){var v$319 = v$318[0];
var v$320 = v$318[1];
var v$321 = v$318[2];
return SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$319 * v$320)) - v$321);
});
if (v$413(v$328)) {return digr$278(SmlPrims.chk_ovf_i32(v$264 * (((48 <= v$328)?(v$328 <= 57):false)?(SmlPrims.chk_ovf_i32(v$328 - 48)):(SmlPrims.mod_i32(SmlPrims.chk_ovf_i32(v$328 - 55),32,CompilerInitial.exn$Div$40)))),next_val$301,v$329);
} else {return [1];
};
} };
};
var hexopt$345 = function(v$348,v$351){switch (v$351[0]) { case 1: {return [1];
 break; }default: {var v$365 = v$351[1];
switch (v$365[0]) { case 48: {var v$387 = v$365[1];
var t$689;
var t$688;
var v$619 = 1;
t$688 = (basis$StringCvt$.eq_radix$297(radix$251,v$619));
t$689 = (t$688?false:true);
if (t$689) {var inp$549 = getc$254(v$387);
var v$550 = dig1$261(v$348,inp$549);
switch (v$550[0]) { case 1: {return [0,[0,v$387]];
 break; }default: {return v$550;
} };
} else {var v$381 = getc$254(v$387);
switch (v$381[0]) { case 1: {return [0,[0,v$387]];
 break; }default: {var v$382 = v$381[1];
switch (v$382[0]) { case 120: {var v$385 = v$382[1];
var inp$553 = getc$254(v$385);
var v$554 = dig1$261(v$348,inp$553);
switch (v$554[0]) { case 1: {return [0,[0,v$387]];
 break; }default: {return v$554;
} };
 break; }case 88: {var v$384 = v$382[1];
var inp$557 = getc$254(v$384);
var v$558 = dig1$261(v$348,inp$557);
switch (v$558[0]) { case 1: {return [0,[0,v$387]];
 break; }default: {return v$558;
} };
 break; }default: {var v$562 = dig1$261(v$348,v$381);
switch (v$562[0]) { case 1: {return [0,[0,v$387]];
 break; }default: {return v$562;
} };
} };
} };
};
 break; }default: {return dig1$261(v$348,v$351);
} };
} };
};
var v$563 = getc$254(basis$StringCvt$.dropl$241(function(c$570){return (c$570 == 32)?true:((9 <= c$570)?(c$570 <= 13):false);
},getc$254,source$257));
switch (v$563[0]) { case 1: {return [1];
 break; }default: {var v$564 = v$563[1];
switch (v$564[0]) { case 126: {var v$565 = v$564[1];
return hexopt$345(-1,getc$254(v$565));
 break; }case 45: {var v$566 = v$564[1];
return hexopt$345(-1,getc$254(v$566));
 break; }case 43: {var v$567 = v$564[1];
return hexopt$345(1,getc$254(v$567));
 break; }default: {return hexopt$345(1,v$563);
} };
} };
};
basis$Int32$.fmt$437 = function(v$440){switch (v$440) { case 3: {return function(v$649){return conv$202(2,v$649);
};
 break; }case 0: {return function(v$651){return conv$202(8,v$651);
};
 break; }case 2: {return function(v$653){return conv$202(10,v$653);
};
 break; }default: {return function(v$655){return conv$202(16,v$655);
};
} };
};
basis$Int32$.toString$449 = function(i$452){return conv$202(10,i$452);
};
basis$Int32$.fromString$453 = function(s$456){var t$691 = basis$StringCvt$.scanString$154;
var t$690;
var v$656 = 2;
t$690 = (function(v$657){return function(v$658){return basis$Int32$.scan$248(v$656,v$657,v$658);
};
});
return t$691(t$690,s$456);
};
basis$Int32$.s$l$457 = function(v$638,v$639){return v$638 > v$639;
};
basis$Int32$.s$lk$459 = function(v$640,v$641){return v$640 >= v$641;
};
basis$Int32$.s$j$461 = function(v$642,v$643){return v$642 < v$643;
};
basis$Int32$.s$jk$463 = function(v$644,v$645){return v$644 <= v$645;
};
return 0;
})();
