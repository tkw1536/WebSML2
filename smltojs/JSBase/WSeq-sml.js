if ((typeof(xmlrpc$WSeq$)) == "undefined") {xmlrpc$WSeq$ = {};
};
(function(){var fix$257 = {};
fix$257.$eq_wseq = function(v$216,v$217){switch (v$216[0]) { case 0: {switch (v$217[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$217[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$217[0]) { case 2: {var v$218 = v$216[1];
var v$219 = v$217[1];
if (fix$257.$eq_wseq(v$218[0],v$219[0])) {return fix$257.$eq_wseq(v$218[1],v$219[1]);
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 3: {switch (v$217[0]) { case 3: {var v$221 = v$216[1];
var v$222 = v$217[1];
var fix$263 = {};
fix$263.$eq_list = function(v$231,v$232){lab$eq_list: while (true) {if (v$231 == null) {return (v$232 == null)?true:false;
} else {if (v$232 == null) {return false;
} else {var v$233 = v$231;
var v$234 = v$232;
if (v$233[0] == v$234[0]) {var t$264 = v$233[1];
var t$265 = v$234[1];
var v$231 = t$264;
var v$232 = t$265;
continue lab$eq_list;
} else {return false;
};
};
};
};
};
var eq_list$229 = fix$263.$eq_list;
return eq_list$229(v$221,v$222);
 break; }default: {return false;
} };
 break; }case 4: {switch (v$217[0]) { case 4: {return v$216[1] == v$217[1];
 break; }default: {return false;
} };
 break; } };
};
xmlrpc$WSeq$.eq_wseq$214 = fix$257.$eq_wseq;
xmlrpc$WSeq$.prmap$54 = function(v$57,v$60){if (v$60 == null) {return [1];
} else {var v$93 = v$60;
var v$94 = v$93[0];
var v$95 = v$93[1];
var fix$258 = {};
fix$258.$loop = function(v$74,v$77){lab$loop: while (true) {if (v$77 == null) {return v$57(v$74);
} else {var v$89 = v$77;
var v$90 = v$89[0];
var v$91 = v$89[1];
return [2,[v$57(v$74),fix$258.$loop(v$90,v$91)]];
};
};
};
var loop$71 = fix$258.$loop;
return loop$71(v$94,v$95);
};
};
xmlrpc$WSeq$.prsep$96 = function(v$99,v$102,v$105){if (v$105 == null) {return [1];
} else {var v$142 = v$105;
var v$143 = v$142[0];
var v$144 = v$142[1];
var fix$259 = {};
fix$259.$loop = function(v$122,v$125){lab$loop: while (true) {if (v$125 == null) {return v$102(v$122);
} else {var v$137 = v$125;
var v$138 = v$137[0];
var v$139 = v$137[1];
return [2,[[2,[v$102(v$122),v$99]],fix$259.$loop(v$138,v$139)]];
};
};
};
var loop$119 = fix$259.$loop;
return loop$119(v$143,v$144);
};
};
var fix$260 = {};
fix$260.$flatten = function(v$148,v$151){lab$flatten: while (true) {switch (v$148[0]) { case 1: {return v$151;
 break; }case 0: {return ["\n",v$151];
 break; }case 4: {return [v$148[1],v$151];
 break; }case 3: {var v$173 = v$148[1];
return basis$List$.s$n$259(v$173,v$151);
 break; }default: {var v$180 = v$148[1];
var v$181 = v$180[0];
var v$182 = v$180[1];
var t$261 = v$181;
var t$262 = fix$260.$flatten(v$182,v$151);
var v$148 = t$261;
var v$151 = t$262;
continue lab$flatten;
} };
};
};
var flatten$145 = fix$260.$flatten;
xmlrpc$WSeq$.flatten$184 = function(seq$187){return SmlPrims.concat(flatten$145(seq$187,null));
};
return 0;
})();
