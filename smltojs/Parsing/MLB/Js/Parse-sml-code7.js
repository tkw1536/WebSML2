if ((typeof(basics$Parse$$7)) == "undefined") {basics$Parse$$7 = {};
};
(function(){basics$Parse$$7.eq_token$1575 = function(v$1579,v$1580,v$1576){var v$1577 = v$1576[0];
var v$1578 = v$1576[1];
switch (v$1578[0]) { case 0: {var v$1581 = v$1577[1];
var v$1582 = v$1578[1];
if (basics$Parse$$4.eq_term$411(v$1581[0],v$1582[0])) {var v$2071 = v$1581[1];
var v$2072 = v$1582[1];
if (v$1579([v$2071[0],v$2072[0]])) {if (v$1580([v$2071[1],v$2072[1]])) {return v$1580([v$2071[2],v$2072[2]]);
} else {return false;
};
} else {return false;
};
} else {return false;
};
 break; }default: {return false;
} };
};
basics$Parse$$7.eq_oper$1585 = function(v$1587,v$1588){switch (v$1587) { case 0: {switch (v$1588) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$1588) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$1588) { case 2: {return true;
 break; }default: {return false;
} };
 break; } };
};
basics$Parse$$7.eq_change$1589 = function(v$1593,v$1594,v$1590){var v$1591 = v$1590[0];
var v$1592 = v$1590[1];
switch (v$1592[0]) { case 0: {var v$1595 = v$1591[1];
var v$1596 = v$1592[1];
if (v$1595[0] == v$1596[0]) {if (basics$Parse$$7.eq_token$1575(v$1593,v$1594,[v$1595[1],v$1596[1]])) {var t$2296;
var v$2077 = v$1595[2];
var v$2078 = v$1596[2];
switch (v$2077) { case 0: {switch (v$2078) { case 0: {t$2296 = true;
 break; }default: {t$2296 = false;
} };
 break; }case 1: {switch (v$2078) { case 1: {t$2296 = true;
 break; }default: {t$2296 = false;
} };
 break; }case 2: {switch (v$2078) { case 2: {t$2296 = true;
 break; }default: {t$2296 = false;
} };
 break; } };
return t$2296?((basics$Parse$$7.eq_token$1575(v$1593,v$1594,[v$1595[3],v$1596[3]]))?(v$1595[4] == v$1596[4]):false):false;
} else {return false;
};
} else {return false;
};
 break; }default: {return false;
} };
};
basics$Parse$$7.sameToken$635 = function(v$640,v$2272){var v$641 = v$640[1];
var v$642 = v$641[0];
var v$644 = v$2272[1];
var v$645 = v$644[0];
return basics$Parse$$4.eq_term$411(v$642,v$645);
};
basics$Parse$$7.DEBUG1$646 = false;
basics$Parse$$7.DEBUG2$647 = false;
basics$Parse$$7.en$ParseError$648 = new String("ParseError");
basics$Parse$$7.exn$ParseError$648 = [basics$Parse$$7.en$ParseError$648];
basics$Parse$$7.en$ParseImpossible$649 = new String("ParseImpossible");
basics$Parse$$7.println$650 = function(s$653){return basis$TextIO$.output$101([0],s$653 + "\n");
};
basics$Parse$$7.empty$654 = function(v$2294){return [null,null];
};
basics$Parse$$7.en$Empty$655 = new String("Empty");
basics$Parse$$7.exn$Empty$655 = [basics$Parse$$7.en$Empty$655];
var fix$2297 = {};
fix$2297.$get = function(v$670,v$2273){lab$get: while (true) {if (v$670 == null) {if (v$2273 == null) {throw basics$Parse$$7.exn$Empty$655;
} else {var t$2298 = basis$List$.rev$641(v$2273);
var t$2299 = null;
var v$670 = t$2298;
var v$2273 = t$2299;
continue lab$get;
};
} else {var v$672 = v$670;
return [v$672[0],[v$672[1],v$2273]];
};
};
};
basics$Parse$$7.get$656 = fix$2297.$get;
basics$Parse$$7.put$677 = function(v$683,v$684){return [v$684[0],[v$683,v$684[1]]];
};
var fix$2300 = {};
fix$2300.$printStack = function(v$712,v$713){lab$printStack: while (true) {if (v$712 == null) {return 0;
} else {var v$708 = v$712;
var v$709 = v$708[0];
var v$710 = v$709[0];
var v$711 = v$708[1];
basis$TextIO$.output$101([0],("\t" + (basis$Int32$.toString$449(v$713))) + ": ");
var s$1611;
var v$1614 = v$710[1];
s$1611 = ("STATE " + (basis$Int32$.toString$449(v$1614)));
basis$TextIO$.output$101([0],s$1611 + "\n");
var t$2301 = v$711;
var t$2302 = SmlPrims.chk_ovf_i32(v$713 + 1);
var v$712 = t$2301;
var v$713 = t$2302;
continue lab$printStack;
};
};
};
basics$Parse$$7.printStack$692 = fix$2300.$printStack;
basics$Parse$$7.prAction$714 = function(v$717,v$720){var v$733 = v$720[0];
if (v$733 == null) {return 0;
} else {var v$756 = v$733;
var v$757 = v$756[0];
var v$758 = v$757[0];
var v$759 = v$720[1];
var v$760 = v$759[0];
var v$761 = v$760[1];
var v$762 = v$761[0];
var v$763 = v$720[2];
basis$TextIO$.output$101([0],"Parse: state stack:\n");
basics$Parse$$7.printStack$692(v$733,0);
var t$2310 = basis$TextIO$.output$101;
var t$2309 = [0];
var t$2308;
var t$2307;
var t$2306;
var t$2305;
var t$2304 = "       state=";
var t$2303;
var v$1623 = v$758[1];
t$2303 = ("STATE " + (basis$Int32$.toString$449(v$1623)));
t$2305 = (t$2304 + t$2303);
t$2306 = (t$2305 + " next=");
t$2307 = (t$2306 + (v$717(v$762)));
t$2308 = (t$2307 + " action=");
t$2310(t$2309,t$2308);
switch (v$763[0]) { case 0: {var v$754 = v$763[1];
var s$1625;
var t$2312 = "SHIFT ";
var t$2311;
var v$1629 = v$754[1];
t$2311 = ("STATE " + (basis$Int32$.toString$449(v$1629)));
s$1625 = (t$2312 + t$2311);
return basis$TextIO$.output$101([0],s$1625 + "\n");
 break; }case 1: {var v$752 = v$763[1];
var s$1631 = "REDUCE " + (basis$Int32$.toString$449(v$752));
return basis$TextIO$.output$101([0],s$1631 + "\n");
 break; }case 2: {return basis$TextIO$.output$101([0],"ERROR\n");
 break; }default: {return basis$TextIO$.output$101([0],"ACCEPT\n");
} };
};
};
basics$Parse$$7.ssParse$765 = function(v$862,v$863,v$864,v$865,v$866){var action$774 = basics$Parse$$4.action$315(v$862[0],v$862[1],v$862[2],v$862[3],v$862[4]);
var goto$775 = basics$Parse$$4.goto$333(v$862[0],v$862[1],v$862[2],v$862[3],v$862[4]);
var fix$2313 = {};
fix$2313.$parseStep = function(v$779){lab$parseStep: while (true) {var v$793 = v$779[1];
if (v$793 == null) {throw [basics$Parse$$7.en$ParseImpossible$649,204];
} else {var v$851 = v$779[0];
var v$852 = v$851[0];
var v$853 = v$852[1];
var v$854 = v$853[0];
var v$855 = v$853[1];
var v$856 = v$855[1];
var v$857 = v$851[1];
var v$858 = v$793;
var v$859 = v$858[0];
var v$860 = v$859[0];
var v$861 = v$779[2];
var nextAction$795 = action$774([v$860,v$854]);
switch (nextAction$795[0]) { case 0: {var v$834 = nextAction$795[1];
var newStack$828 = [[v$834,v$855],v$793];
var newLexPair$829 = basics$Parse$$2.get$95(v$857);
var v$832 = basics$Parse$$7.get$656(v$861[0],[[newStack$828,newLexPair$829],v$861[1]]);
var v$833 = v$832[1];
var t$2316 = [newLexPair$829,[[v$834,v$855],v$793],v$833];
var v$779 = t$2316;
continue lab$parseStep;
 break; }case 1: {var v$826 = nextAction$795[1];
var v$818 = v$864([v$826,v$856,v$793,v$866]);
var v$819 = v$818[2];
if (v$819 == null) {throw [basics$Parse$$7.en$ParseImpossible$649,197];
} else {var v$821 = v$818[0];
var v$822 = v$818[1];
var v$823 = v$819;
var v$824 = v$823[0];
var v$825 = v$824[0];
var t$2315 = [v$851,[[goto$775([v$825,v$821]),v$822],v$819],v$861];
var v$779 = t$2315;
continue lab$parseStep;
};
 break; }case 2: {var t$2314 = v$865(v$779);
var v$779 = t$2314;
continue lab$parseStep;
 break; }default: {if (v$793 == null) {throw [basics$Parse$$7.en$ParseImpossible$649,202];
} else {var v$847 = v$793;
var v$848 = v$847[0];
var v$849 = v$848[1];
var v$850 = v$849[0];
var v$845 = v$851[0];
var v$846 = v$851[1];
return [v$850,basics$Parse$$2.cons$116(v$845,v$846)];
};
} };
};
};
};
var parseStep$776 = fix$2313.$parseStep;
return function(v$2295){return parseStep$776(v$2295);
};
};
basics$Parse$$7.distanceParse$867 = function(v$952,v$953,v$954,v$955){var action$875 = basics$Parse$$4.action$315(v$952[0],v$952[1],v$952[2],v$952[3],v$952[4]);
var goto$876 = basics$Parse$$4.goto$333(v$952[0],v$952[1],v$952[2],v$952[3],v$952[4]);
var fix$2317 = {};
fix$2317.$parseStep = function(v$2274,v$2275,v$2276,v$899){lab$parseStep: while (true) {switch (v$899) { case 0: {return [v$2274,v$2275,v$2276,0,[1]];
 break; }default: {if (v$2275 == null) {throw [basics$Parse$$7.en$ParseImpossible$649,242];
} else {var v$942 = v$2274[0];
var v$943 = v$942[1];
var v$944 = v$943[0];
var v$945 = v$943[1];
var v$946 = v$945[1];
var v$947 = v$2274[1];
var v$948 = v$2275;
var v$949 = v$948[0];
var v$950 = v$949[0];
var nextAction$905 = action$875([v$950,v$944]);
switch (nextAction$905[0]) { case 0: {var v$940 = nextAction$905[1];
var newStack$938 = [[v$940,v$945],v$2275];
var newLexPair$939 = basics$Parse$$2.get$95(v$947);
var t$2322 = newLexPair$939;
var t$2323 = [[v$940,v$945],v$2275];
var t$2324 = [v$2276[0],[[newStack$938,newLexPair$939],v$2276[1]]];
var t$2325 = SmlPrims.chk_ovf_i32(v$899 - 1);
var v$2274 = t$2322;
var v$2275 = t$2323;
var v$2276 = t$2324;
var v$899 = t$2325;
continue lab$parseStep;
 break; }case 1: {var v$936 = nextAction$905[1];
var v$928 = v$954([v$936,v$946,v$2275,v$955]);
var v$929 = v$928[2];
if (v$929 == null) {throw [basics$Parse$$7.en$ParseImpossible$649,240];
} else {var v$931 = v$928[0];
var v$932 = v$928[1];
var v$933 = v$929;
var v$934 = v$933[0];
var v$935 = v$934[0];
var t$2318 = v$2274;
var t$2319 = [[goto$876([v$935,v$931]),v$932],v$929];
var t$2320 = v$2276;
var t$2321 = v$899;
var v$2274 = t$2318;
var v$2275 = t$2319;
var v$2276 = t$2320;
var v$899 = t$2321;
continue lab$parseStep;
};
 break; }case 2: {return [v$2274,v$2275,v$2276,v$899,[0,nextAction$905]];
 break; }default: {return [v$2274,v$2275,v$2276,v$899,[0,nextAction$905]];
} };
};
} };
};
};
var parseStep$877 = fix$2317.$parseStep;
return function(v$2277){return parseStep$877(v$2277[0],v$2277[1],v$2277[2],v$2277[3]);
};
};
basics$Parse$$7.mkFixError$956 = function(v$1453,v$2278,v$2279,v$2280){var v$1454 = v$1453[2];
var v$1455 = v$1453[5];
var v$1456 = v$1453[7];
var v$1457 = v$1453[1];
var v$1458 = v$1453[4];
var v$1459 = v$1453[3];
var v$1460 = v$1453[6];
var v$1461 = v$1453[0];
return function(v$973){var v$1445 = v$973[0];
var v$1446 = v$1445[0];
var v$1447 = v$1446[1];
var v$1448 = v$1447[0];
var v$1449 = v$1447[1];
var v$1450 = v$1449[1];
var v$1452 = v$973[2];
var lexVList$982;
var fix$2326 = {};
fix$2326.$map = function(v$1647){if (v$1647 == null) {return null;
} else {var v$1648 = v$1647;
var v$1649 = v$1648[0];
var v$1650 = v$1648[1];
return [[0,[v$1649,[v$1457(v$1649),v$1450,v$1450]]],fix$2326.$map(v$1650)];
};
};
var map$1646 = fix$2326.$map;
lexVList$982 = (map$1646(v$1456));
var stateList$991;
var fix$2327 = {};
fix$2327.$f = function(q$995){try {var v$999 = basics$Parse$$7.get$656(q$995[0],q$995[1]);
var v$1000 = v$999[0];
var v$1001 = v$999[1];
return [v$1000,fix$2327.$f(v$1001)];
} catch(v$2328) {return (function(MyFifo$Empty$1004){var t$2329 = MyFifo$Empty$1004;
if (t$2329[0] == basics$Parse$$7.en$Empty$655) {return null;
} else {throw MyFifo$Empty$1004;
};
})(v$2328);
};
};
var f$992 = fix$2327.$f;
stateList$991 = (f$992(v$1452));
var v$1434;
var b$1653 = [0,null];
var fix$2330 = {};
fix$2330.$foldr = function(v$1656){if (v$1656 == null) {return b$1653;
} else {var v$1657 = v$1656;
var v$1658 = v$1657[0];
var v$1659 = v$1657[1];
var v$2263 = fix$2330.$foldr(v$1659);
var v$2180 = v$2263[0];
var v$2181 = v$2263[1];
return [SmlPrims.chk_ovf_i32(v$2180 + 1),[[v$1658,v$2180],v$2181]];
};
};
var foldr$1655 = fix$2330.$foldr;
v$1434 = (foldr$1655(stateList$991));
var v$1435 = v$1434[1];
var changes$1192;
var t$2343 = basis$List$.s$n$645;
var t$2342;
var t$2339;
var start$1758 = null;
var fix$2340 = {};
fix$2340.$foldr = function(v$1763){if (v$1763 == null) {return start$1758;
} else {var v$1764 = v$1763;
var v$1765 = v$1764[0];
var v$1766 = v$1764[1];
var v$2265 = fix$2340.$foldr(v$1766);
var v$2184 = v$1765[0];
var v$2185 = v$2184[0];
var v$2186 = v$2184[1];
var v$2187 = v$2186[0];
var v$2188 = v$1765[1];
var lexer$2190 = basics$Parse$$2.cons$116(v$2186[0],v$2186[1]);
var fix$2341 = {};
fix$2341.$foldr = function(v$2192){if (v$2192 == null) {return v$2265;
} else {var v$2193 = v$2192;
var v$2194 = v$2193[0];
var v$2195 = v$2193[1];
var v$2196 = fix$2341.$foldr(v$2195);
var distance$2197;
var v$2198 = [v$2194,lexer$2190];
var v$2199 = SmlPrims.chk_ovf_i32(v$2188 + 1);
distance$2197 = (SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2280 - (v$2278([v$2198,v$2185,basics$Parse$$7.empty$654(0),SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2199 + v$2280)) + 1)]))[3])) - 1));
return (distance$2197 >= v$2279)?[[0,[distance$2197,v$2194,1,v$2187,v$2188]],v$2196]:v$2196;
};
};
var foldr$2191 = fix$2341.$foldr;
return foldr$2191(lexVList$982);
};
};
var foldr$1762 = fix$2340.$foldr;
t$2339 = (foldr$1762(v$1435));
var t$2338;
var t$2337 = basis$List$.s$n$645;
var t$2336;
var t$2333;
var start$1800 = null;
var fix$2334 = {};
fix$2334.$foldr = function(v$1805){if (v$1805 == null) {return start$1800;
} else {var v$1806 = v$1805;
var v$1807 = v$1806[0];
var v$1808 = v$1806[1];
var v$2267 = fix$2334.$foldr(v$1808);
var v$2202 = v$1807[0];
var v$2203 = v$2202[0];
var v$2204 = v$2202[1];
var v$2205 = v$2204[0];
var v$2206 = v$2205[1];
var v$2207 = v$2206[0];
var v$2208 = v$2204[1];
var v$2209 = v$1807[1];
if (v$1459(v$2207)) {return v$2267;
} else {var fix$2335 = {};
fix$2335.$foldr = function(v$2212){if (v$2212 == null) {return v$2267;
} else {var v$2213 = v$2212;
var v$2214 = v$2213[0];
var v$2215 = v$2213[1];
var v$2216 = fix$2335.$foldr(v$2215);
var distance$2217;
var v$2218 = [v$2214,v$2208];
distance$2217 = (SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2280 - (v$2278([v$2218,v$2203,basics$Parse$$7.empty$654(0),SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2209 + v$2280)) + 1)]))[3])) - 1));
return (distance$2217 >= v$2279)?[[0,[distance$2217,v$2214,0,v$2205,v$2209]],v$2216]:v$2216;
};
};
var foldr$2211 = fix$2335.$foldr;
return foldr$2211(lexVList$982);
};
};
};
var foldr$1804 = fix$2334.$foldr;
t$2333 = (foldr$1804(v$1435));
var t$2331;
var start$1844 = null;
var fix$2332 = {};
fix$2332.$foldr = function(v$1849){if (v$1849 == null) {return start$1844;
} else {var v$1850 = v$1849;
var v$1851 = v$1850[0];
var v$1852 = v$1850[1];
var v$2269 = fix$2332.$foldr(v$1852);
var v$2221 = v$1851[0];
var v$2222 = v$2221[0];
var v$2223 = v$2221[1];
var v$2224 = v$2223[0];
var v$2225 = v$2224[1];
var v$2226 = v$2225[0];
var v$2227 = v$2223[1];
var v$2228 = v$1851[1];
if (v$1459(v$2226)) {return v$2269;
} else {var newLexPair$2230 = basics$Parse$$2.get$95(v$2227);
var v$2231 = newLexPair$2230[0];
var distance$2232;
var v$2233 = SmlPrims.chk_ovf_i32(v$2228 - 1);
distance$2232 = (SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2280 - (v$2278([newLexPair$2230,v$2222,basics$Parse$$7.empty$654(0),SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2233 + v$2280)) + 1)]))[3])) - 1));
return (distance$2232 >= v$2279)?[[0,[distance$2232,v$2231,2,v$2224,v$2228]],v$2269]:v$2269;
};
};
};
var foldr$1848 = fix$2332.$foldr;
t$2331 = (foldr$1848(v$1435));
t$2336 = [t$2333,t$2331];
t$2338 = (t$2337(t$2336));
t$2342 = [t$2339,t$2338];
changes$1192 = (t$2343(t$2342));
var maxDist$1205;
var fix$2344 = {};
fix$2344.$foldr = function(v$1895){if (v$1895 == null) {return 0;
} else {var v$1896 = v$1895;
var v$1897 = v$1896[0];
var v$1898 = v$1896[1];
var v$2139 = fix$2344.$foldr(v$1898);
var v$1901 = v$1897[1];
var v$1902 = v$1901[0];
return (v$1902 < v$2139)?v$2139:v$1902;
};
};
var foldr$1894 = fix$2344.$foldr;
maxDist$1205 = (foldr$1894(changes$1192));
var changes$1223;
var c$1922 = null;
var fix$2345 = {};
fix$2345.$foldr = function(v$1924){if (v$1924 == null) {return changes$1192;
} else {var v$1925 = v$1924;
var v$1926 = v$1925[0];
var v$1927 = v$1925[1];
var v$2143 = fix$2345.$foldr(v$1927);
return (v$1926[1][0] == maxDist$1205)?[v$1926,v$2143]:v$2143;
};
};
var foldr$1923 = fix$2345.$foldr;
changes$1223 = (foldr$1923(c$1922));
var preferredInsertChanges$1229;
var c$1938 = null;
var fix$2346 = {};
fix$2346.$foldr = function(v$1940){if (v$1940 == null) {return changes$1223;
} else {var v$1941 = v$1940;
var v$1942 = v$1941[0];
var v$1943 = v$1941[1];
var v$2145 = fix$2346.$foldr(v$1943);
var t$2347;
var v$2236 = v$1942[1];
switch (v$2236[2]) { case 1: {var v$2237 = v$2236[1];
var v$2238 = v$2237[1];
var v$2239 = v$2238[0];
t$2347 = (v$1458(v$2239));
 break; }default: {t$2347 = false;
} };
return t$2347?[v$1942,v$2145]:v$2145;
};
};
var foldr$1939 = fix$2346.$foldr;
preferredInsertChanges$1229 = (foldr$1939(c$1938));
var preferredSubstChanges$1240;
var c$1954 = null;
var fix$2348 = {};
fix$2348.$foldr = function(v$1956){if (v$1956 == null) {return changes$1223;
} else {var v$1957 = v$1956;
var v$1958 = v$1957[0];
var v$1959 = v$1957[1];
var v$2149 = fix$2348.$foldr(v$1959);
var t$2349;
var v$2241 = v$1958[1];
switch (v$2241[2]) { case 0: {var v$2242 = v$2241[1];
var v$2243 = v$2242[1];
var v$2244 = v$2243[0];
var v$2245 = v$2241[3];
var v$2246 = v$2245[1];
var v$2247 = v$2246[0];
var fix$2350 = {};
fix$2350.$exists = function(v$2249){lab$exists: while (true) {if (v$2249 == null) {return false;
} else {var v$2250 = v$2249;
var v$2251 = v$2250[0];
var v$2252 = v$2250[1];
if (basics$Parse$$4.eq_term$411(v$2251,v$2244)) {return true;
} else {var t$2351 = v$2252;
var v$2249 = t$2351;
continue lab$exists;
};
};
};
};
var exists$2248 = fix$2350.$exists;
t$2349 = (exists$2248(v$1455(v$2247)));
 break; }default: {t$2349 = false;
} };
return t$2349?[v$1958,v$2149]:v$2149;
};
};
var foldr$1955 = fix$2348.$foldr;
preferredSubstChanges$1240 = (foldr$1955(c$1954));
var changes$1268;
var c$1991 = null;
var fix$2352 = {};
fix$2352.$foldr = function(v$1993){if (v$1993 == null) {return changes$1223;
} else {var v$1994 = v$1993;
var v$1995 = v$1994[0];
var v$1996 = v$1994[1];
var v$2151 = fix$2352.$foldr(v$1996);
var t$2353;
var v$2254 = v$1995[1];
var v$2255 = v$2254[1];
var v$2256 = v$2255[1];
var v$2257 = v$2256[0];
var v$2258 = v$2254[0];
t$2353 = (((v$1454(v$2257))?false:true)?true:(v$2258 >= (SmlPrims.chk_ovf_i32(v$2279 + 3))));
return t$2353?[v$1995,v$2151]:v$2151;
};
};
var foldr$1992 = fix$2352.$foldr;
changes$1268 = (foldr$1992(c$1991));
var changes$1282 = basis$List$.s$n$645([preferredInsertChanges$1229,basis$List$.s$n$645([preferredSubstChanges$1240,changes$1268])]);
if (changes$1282 == null) {v$1461(["syntax error found at " + (v$1460(v$1448)),v$1450,v$1450]);
throw basics$Parse$$7.exn$ParseError$648;
} else {var print_msg$1289 = function(v$1292){var v$1307 = v$1292[1];
var v$1308 = v$1307[1];
var v$1309 = v$1308[1];
var v$1310 = v$1309[0];
var v$1311 = v$1307[2];
var v$1312 = v$1307[3];
var v$1313 = v$1312[1];
var v$1314 = v$1313[0];
var v$1315 = v$1313[1];
var v$1316 = v$1315[1];
var v$1317 = v$1315[2];
var s$1300;
switch (v$1311) { case 2: {s$1300 = ("deleting " + (v$1460(v$1314)));
 break; }case 1: {s$1300 = ("inserting " + (v$1460(v$1310)));
 break; }default: {s$1300 = ((("replacing " + (v$1460(v$1314))) + " with ") + (v$1460(v$1310)));
} };
return v$1461(["syntax error: " + s$1300,v$1316,v$1317]);
};
var en$Hd$1318 = new String("Hd");
var exn$Hd$1318 = [en$Hd$1318];
var a$1331;
var t$2359;
var t$2358;
var t$2357;
var fix$2354 = {};
fix$2354.$acc = function(v$2009,v$2010){lab$acc: while (true) {if (v$2009 == null) {return v$2010;
} else {var v$2011 = v$2009;
var v$2012 = v$2011[1];
var t$2355 = v$2012;
var t$2356 = SmlPrims.chk_ovf_i32(v$2010 + 1);
var v$2009 = t$2355;
var v$2010 = t$2356;
continue lab$acc;
};
};
};
var acc$2008 = fix$2354.$acc;
t$2357 = (acc$2008(changes$1282,0));
t$2358 = (t$2357 > 1);
t$2359 = (t$2358?false:false);
if (t$2359) {basis$TextIO$.output$101([0],"multiple fixes possible; could fix it by:\n");
var fix$2360 = {};
fix$2360.$map = function(v$2018){if (v$2018 == null) {return null;
} else {var v$2019 = v$2018;
var v$2020 = v$2019[0];
var v$2021 = v$2019[1];
return [print_msg$1289(v$2020),fix$2360.$map(v$2021)];
};
};
var map$2017 = fix$2360.$map;
map$2017(changes$1282);
basis$TextIO$.output$101([0],"chosen correction:\n");
} else {0;
};
var t$2362 = print_msg$1289;
var t$2361;
if (changes$1282 == null) {throw exn$Hd$1318;
} else {t$2361 = changes$1282[0];
};
t$2362(t$2361);
if (changes$1282 == null) {throw exn$Hd$1318;
} else {a$1331 = changes$1282[0];
};
var v$1424 = a$1331[1];
var v$1425 = v$1424[4];
var v$1426 = v$1424[2];
var v$1427 = v$1424[1];
var v$1428 = v$1427[1];
var v$1429 = v$1428[0];
var v$1430 = v$1428[1];
var v$1431 = v$1430[0];
var v$1420;
var fix$2363 = {};
fix$2363.$f = function(v$2029,v$2281){lab$f: while (true) {if (v$2029 == null) {var en$FindNth$1376 = new String("FindNth");
var exn$FindNth$1376 = [en$FindNth$1376];
throw exn$FindNth$1376;
} else {switch (v$2281) { case 0: {var v$2031 = v$2029;
var v$2032 = v$2031[0];
var v$2033 = v$2031[1];
return [v$2032,basis$List$.rev$641(v$2033)];
 break; }default: {var v$2034 = v$2029;
var v$2035 = v$2034[1];
var t$2364 = v$2035;
var t$2365 = SmlPrims.chk_ovf_i32(v$2281 - 1);
var v$2029 = t$2364;
var v$2281 = t$2365;
continue lab$f;
} };
};
};
};
var f$2027 = fix$2363.$f;
v$1420 = (f$2027(basis$List$.rev$641(stateList$991),v$1425));
var v$1421 = v$1420[0];
var v$1422 = v$1420[1];
var v$1416 = v$1421[0];
var v$1417 = v$1421[1];
var v$1418 = v$1417[0];
var v$1419 = v$1417[1];
var v$1411 = v$1418[1];
var v$1412 = v$1411[1];
var v$1413 = v$1412[1];
var v$1414 = v$1412[2];
var newLexV$1393 = [0,[v$1429,[v$1431,v$1413,v$1414]]];
var newLexPair$1394;
switch (v$1426) { case 2: {newLexPair$1394 = (basics$Parse$$2.get$95(v$1419));
 break; }case 0: {newLexPair$1394 = [newLexV$1393,v$1419];
 break; }default: {newLexPair$1394 = [newLexV$1393,basics$Parse$$2.cons$116(v$1417[0],v$1417[1])];
} };
var restQueue$1401;
var v$2168 = [v$1416,newLexPair$1394];
var v$2169;
var fix$2366 = {};
fix$2366.$foldl = function(v$2043,v$2044){lab$foldl: while (true) {if (v$2044 == null) {return v$2043;
} else {var v$2045 = v$2044;
var v$2046 = v$2045[0];
var v$2047 = v$2045[1];
var t$2367 = [v$2043[0],[v$2046,v$2043[1]]];
var t$2368 = v$2047;
var v$2043 = t$2367;
var v$2044 = t$2368;
continue lab$foldl;
};
};
};
var foldl$2042 = fix$2366.$foldl;
v$2169 = (foldl$2042(basics$Parse$$7.empty$654(0),v$1422));
restQueue$1401 = [v$2169[0],[v$2168,v$2169[1]]];
var v$1406 = v$2278([newLexPair$1394,v$1416,restQueue$1401,v$1425]);
return [v$1406[0],v$1406[1],v$1406[2]];
};
};
};
basics$Parse$$7.parse$1465 = function(v$1541,v$1547,v$1543,v$1546,v$1544,v$1542,v$1545){var v$1548 = v$1547[6];
var maxAdvance$1478 = (v$1546 < 0)?0:v$1546;
var lexPair$1479 = basics$Parse$$2.get$95(v$1543);
var v$1537 = lexPair$1479[0];
var v$1538 = v$1537[1];
var v$1539 = v$1538[1];
var v$1540 = v$1539[1];
var startStack$1482 = [[v$1542[2],[v$1545,v$1540,v$1540]],null];
var startQueue$1483 = [(basics$Parse$$7.empty$654(0))[0],[[startStack$1482,lexPair$1479],(basics$Parse$$7.empty$654(0))[1]]];
var distanceParse$1484 = basics$Parse$$7.distanceParse$867(v$1542,v$1548,v$1544,v$1541);
var fixError$1485 = basics$Parse$$7.mkFixError$956(v$1547,distanceParse$1484,1,maxAdvance$1478);
var ssParse$1486 = basics$Parse$$7.ssParse$765(v$1542,v$1548,v$1544,fixError$1485,v$1541);
var fix$2369 = {};
fix$2369.$loop = function(v$2282,v$2283,v$2284,v$2285,v$1511){lab$loop: while (true) {switch (v$1511[0]) { case 0: {var v$1513 = v$1511[1];
switch (v$1513[0]) { case 3: {return ssParse$1486([v$2282,v$2283,v$2284]);
 break; }default: {switch (v$2285) { case 0: {return ssParse$1486([v$2282,v$2283,v$2284]);
 break; }default: {switch (v$1513[0]) { case 2: {var v$1526 = fixError$1485([v$2282,v$2283,v$2284]);
var v$1527 = v$1526[0];
var v$1528 = v$1526[1];
var v$1529 = v$1526[2];
var v$2286 = distanceParse$1484([v$1527,v$1528,v$1529,v$2285]);
var t$2370 = v$2286[0];
var t$2371 = v$2286[1];
var t$2372 = v$2286[2];
var t$2373 = v$2286[3];
var t$2374 = v$2286[4];
var v$2282 = t$2370;
var v$2283 = t$2371;
var v$2284 = t$2372;
var v$2285 = t$2373;
var v$1511 = t$2374;
continue lab$loop;
 break; }default: {var en$ParseInternal$1533 = new String("ParseInternal");
var exn$ParseInternal$1533 = [en$ParseInternal$1533];
throw exn$ParseInternal$1533;
} };
} };
} };
 break; }default: {switch (v$2285) { case 0: {return ssParse$1486([v$2282,v$2283,v$2284]);
 break; }default: {var en$ParseInternal$1533 = new String("ParseInternal");
var exn$ParseInternal$1533 = [en$ParseInternal$1533];
throw exn$ParseInternal$1533;
} };
} };
};
};
var loop$1487 = fix$2369.$loop;
var v$2287 = distanceParse$1484([lexPair$1479,startStack$1482,startQueue$1483,15]);
return loop$1487(v$2287[0],v$2287[1],v$2287[2],v$2287[3],v$2287[4]);
};
return 0;
})();
