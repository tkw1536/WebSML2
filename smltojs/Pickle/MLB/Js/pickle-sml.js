if ((typeof(pickle$pickle$)) == "undefined") {pickle$pickle$ = {};
};
(function(){pickle$pickle$.eq_cache$2724 = function(v$2728,v$2725){var v$2726 = v$2725[0];
var v$2727 = v$2725[1];
switch (v$2726[0]) { case 0: {switch (v$2727[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$2727[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$2727[0]) { case 2: {var v$2729 = v$2726[1];
var v$2730 = v$2727[1];
return v$2728([v$2729,v$2730]);
 break; }default: {return false;
} };
 break; } };
};
var fix$5103 = {};
fix$5103.$eq_typ = function(v$2733,v$2734){lab$eq_typ: while (true) {switch (v$2733[0]) { case 0: {switch (v$2734[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$2734[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$2734[0]) { case 2: {return true;
 break; }default: {return false;
} };
 break; }case 3: {switch (v$2734[0]) { case 3: {return true;
 break; }default: {return false;
} };
 break; }case 4: {switch (v$2734[0]) { case 4: {return true;
 break; }default: {return false;
} };
 break; }case 5: {switch (v$2734[0]) { case 5: {return true;
 break; }default: {return false;
} };
 break; }case 6: {switch (v$2734[0]) { case 6: {return true;
 break; }default: {return false;
} };
 break; }case 7: {switch (v$2734[0]) { case 7: {var v$2735 = v$2733[1];
var v$2736 = v$2734[1];
var t$5122 = v$2735;
var t$5123 = v$2736;
var v$2733 = t$5122;
var v$2734 = t$5123;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 8: {switch (v$2734[0]) { case 8: {var v$2737 = v$2733[1];
var v$2738 = v$2734[1];
var t$5120 = v$2737;
var t$5121 = v$2738;
var v$2733 = t$5120;
var v$2734 = t$5121;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 9: {switch (v$2734[0]) { case 9: {var v$2739 = v$2733[1];
var v$2740 = v$2734[1];
var t$5118 = v$2739;
var t$5119 = v$2740;
var v$2733 = t$5118;
var v$2734 = t$5119;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 10: {switch (v$2734[0]) { case 10: {var v$2741 = v$2733[1];
var v$2742 = v$2734[1];
var t$5116 = v$2741;
var t$5117 = v$2742;
var v$2733 = t$5116;
var v$2734 = t$5117;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 11: {switch (v$2734[0]) { case 11: {var v$2743 = v$2733[1];
var v$2744 = v$2734[1];
var t$5114 = v$2743;
var t$5115 = v$2744;
var v$2733 = t$5114;
var v$2734 = t$5115;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 12: {switch (v$2734[0]) { case 12: {return true;
 break; }default: {return false;
} };
 break; }case 13: {switch (v$2734[0]) { case 13: {var v$2745 = v$2733[1];
var v$2746 = v$2734[1];
if (fix$5103.$eq_typ(v$2745[0],v$2746[0])) {var t$5112 = v$2745[1];
var t$5113 = v$2746[1];
var v$2733 = t$5112;
var v$2734 = t$5113;
continue lab$eq_typ;
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 14: {switch (v$2734[0]) { case 14: {var v$2748 = v$2733[1];
var v$2749 = v$2734[1];
var t$5110 = v$2748;
var t$5111 = v$2749;
var v$2733 = t$5110;
var v$2734 = t$5111;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 15: {switch (v$2734[0]) { case 15: {var v$2750 = v$2733[1];
var v$2751 = v$2734[1];
var t$5108 = v$2750;
var t$5109 = v$2751;
var v$2733 = t$5108;
var v$2734 = t$5109;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 16: {switch (v$2734[0]) { case 16: {return true;
 break; }default: {return false;
} };
 break; }case 17: {switch (v$2734[0]) { case 17: {return true;
 break; }default: {return false;
} };
 break; }case 18: {switch (v$2734[0]) { case 18: {return true;
 break; }default: {return false;
} };
 break; }case 19: {switch (v$2734[0]) { case 19: {return v$2733[1] == v$2734[1];
 break; }default: {return false;
} };
 break; }case 20: {switch (v$2734[0]) { case 20: {var v$2755 = v$2733[1];
var v$2756 = v$2734[1];
if (v$2755[0] == v$2756[0]) {var t$5106 = v$2755[1];
var t$5107 = v$2756[1];
var v$2733 = t$5106;
var v$2734 = t$5107;
continue lab$eq_typ;
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 21: {switch (v$2734[0]) { case 21: {return v$2733[1] == v$2734[1];
 break; }default: {return false;
} };
 break; }case 22: {switch (v$2734[0]) { case 22: {var v$2762 = v$2733[1];
var v$2763 = v$2734[1];
var t$5104 = v$2762;
var t$5105 = v$2763;
var v$2733 = t$5104;
var v$2734 = t$5105;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 23: {switch (v$2734[0]) { case 23: {return true;
 break; }default: {return false;
} };
 break; }case 24: {switch (v$2734[0]) { case 24: {return true;
 break; }default: {return false;
} };
 break; }case 25: {switch (v$2734[0]) { case 25: {return true;
 break; }default: {return false;
} };
 break; } };
};
};
pickle$pickle$.eq_typ$2731 = fix$5103.$eq_typ;
var en$PickleExn$84 = new String("PickleExn");
var exn$PickleExn$84 = [en$PickleExn$84];
var reset_fun$85 = [function(x$2788){return x$2788;
}];
var hashCount$228 = [100];
pickle$pickle$.empty_hce$437 = function(v$2842){return (pickle$Polyhash$.mkTable$66(function(x$2847){return SmlPrims.w32_to_i32_X(pickle$eqhashdyn2$.hash$121(12,x$2847));
},function(v$5018){return pickle$eqhashdyn2$.eq$110(v$5018[0],v$5018[1]);
}))([10,exn$PickleExn$84]);
};
[0];
pickle$pickle$.debug$522 = function(str$525,pu$528){return pu$528;
};
var word32Gen$562 = function(v$2766,s$565,v$569){var v$599 = v$569[0];
var v$600 = v$569[1];
return [0,[function(v$2909){var v$2910 = v$2909[0];
var v$2911 = v$2909[1];
return v$2766([v$2910,v$2911]);
},function(a$2912){return function(p$2923){var v$2924 = p$2923[1];
return (v$2924 <= 0)?p$2923:[((v$599(a$2912)) + ((p$2923[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$2923[1] - 1)];
};
},function(w$2932){return function(s$2933){return pickle$bitstream$.outcw32$451(v$599(w$2932),s$2933);
};
},[1],function(v$2934){var v$2935 = v$2934[0];
var v$2936 = v$2934[1];
var v$2937 = pickle$bitstream$.getcw32$463(v$2935);
var v$2938 = v$2937[0];
var v$2939 = v$2937[1];
return [v$600(v$2938),[v$2939,v$2936]];
}]];
};
pickle$pickle$.word$718 = [0,[function(v$3025){return v$3025[0] == v$3025[1];
},function(a$3028){return function(p$3029){var v$3030 = p$3029[1];
return (v$3030 <= 0)?p$3029:[(a$3028 + ((p$3029[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3029[1] - 1)];
};
},function(w$3032){return function(s$3033){return pickle$bitstream$.outcw$389(w$3032,s$3033);
};
},[4],function(v$3034){var v$3035 = v$3034[0];
var v$3036 = v$3034[1];
var v$3037 = pickle$bitstream$.getcw$401(v$3035);
return [v$3037[0],[v$3037[1],v$3036]];
}]];
pickle$pickle$.word32$719 = word32Gen$562(function(v$2771){return v$2771[0] == v$2771[1];
},"word32",[function(x$3042){return x$3042;
},function(x$3043){return x$3043;
}]);
pickle$pickle$.int$720 = word32Gen$562(function(v$2772){return v$2772[0] == v$2772[1];
},"int",[function(i$3044){return SmlPrims.i32_to_w32(i$3044);
},function(x$3048){return basis$Int32$.fromLarge$82(basis$Word32$.toLargeIntX$85(x$3048));
}]);
pickle$pickle$.int32$721 = word32Gen$562(function(v$2773){return v$2773[0] == v$2773[1];
},"int32",[function(x$3052){return basis$Word32$.fromLargeInt$89(basis$Int32$.toLarge$78(x$3052));
},function(x$3056){return basis$Int32$.fromLarge$82(basis$Word32$.toLargeIntX$85(x$3056));
}]);
pickle$pickle$.char$722 = [0,[function(v$3063){return v$3063[0] == v$3063[1];
},function(a$3066){return function(p$3067){var v$3068 = p$3067[1];
return (v$3068 <= 0)?p$3067:[((SmlPrims.i32_to_w32(a$3066)) + ((p$3067[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3067[1] - 1)];
};
},function(v$3070){return function(s$3071){return pickle$bitstream$.outc$233(v$3070,s$3071);
};
},[25],function(v$3072){var v$3073 = v$3072[0];
var v$3074 = v$3072[1];
var v$3075 = pickle$bitstream$.getc$234(v$3073);
return [v$3075[0],[v$3075[1],v$3074]];
}]];
pickle$pickle$.bool$723 = [0,[function(v$3086){return v$3086[0] == v$3086[1];
},function(a$3089){return function(p$3090){var v$3091 = p$3090[1];
return (v$3091 <= 0)?p$3090:[((SmlPrims.i32_to_w32(a$3089?1:0)) + ((p$3090[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3090[1] - 1)];
};
},function(v$3093){return function(s$3094){return pickle$bitstream$.outw1$217([v$3093?1:0,s$3094]);
};
},[3],function(v$3095){var v$3096 = v$3095[0];
var v$3097 = v$3095[1];
var v$3098 = pickle$bitstream$.getw1$218(v$3096);
var v$3099 = v$3098[0];
var t$5124;
switch (v$3099) { case 0: {t$5124 = false;
 break; }default: {t$5124 = true;
} };
return [t$5124,[v$3098[1],v$3097]];
}]];
var mkTables$734 = function(hash$737,eq$740){var clearRef$741 = [false];
var t$5126 = reset_fun$85;
var t$5125;
var v$4583 = reset_fun$85[0];
t$5125 = (function(x$3106){v$4583(x$3106);
return (clearRef$741[0] = true,0);
});
(t$5126[0] = t$5125,0);
var count$744 = [0];
var t$5128 = reset_fun$85;
var t$5127;
var v$4589 = reset_fun$85[0];
t$5127 = (function(x$3114){v$4589(x$3114);
return (count$744[0] = 0,0);
});
(t$5128[0] = t$5127,0);
var T_to$751 = (pickle$Polyhash$.mkTable$66(function(w$3122){return SmlPrims.w32_to_i32_X(w$3122);
},function(v$3125){return v$3125[0] == v$3125[1];
}))([10,exn$PickleExn$84]);
var T_from$752 = (pickle$Polyhash$.mkTable$66(function(x$3136){return SmlPrims.w32_to_i32_X(hash$737(x$3136));
},eq$740))([10,exn$PickleExn$84]);
return [T_from$752,T_to$751,function(v$3143){if (clearRef$741[0]) {pickle$Polyhash$.clear$104(T_to$751[0],T_to$751[1],T_to$751[2],T_to$751[3],T_to$751[4]);
pickle$Polyhash$.clear$104(T_from$752[0],T_from$752[1],T_from$752[2],T_from$752[3],T_from$752[4]);
return (clearRef$741[0] = false,0);
} else {return 0;
};
},function(v$3147){return [count$744[0],(count$744[0] = ((count$744[0] + 1) & 4294967295),0)][0];
}];
};
var shareGen0$770 = function(pp$773,pu$776){var v$864 = mkTables$734(function(v$3151){return ((pu$776[1][1](v$3151))([0,12]))[0];
},pu$776[1][0]);
var v$865 = v$864[3];
var v$866 = v$864[1];
var v$867 = v$864[0];
var v$868 = v$864[2];
return [0,[pu$776[1][0],pu$776[1][1],function(v$3177){return function(s$3178){v$868(0);
var v$3179 = (pickle$Polyhash$.peek$325(v$867[0],v$867[1],v$867[2],v$867[3],v$867[4]))(v$3177);
switch (v$3179[0]) { case 0: {var v$3181 = v$3179[1];
var s$3182 = pickle$bitstream$.outw1$217([0,s$3178]);
return pickle$bitstream$.outcw$389(v$3181,s$3182);
 break; }default: {var s$3183 = pickle$bitstream$.outw1$217([1,s$3178]);
var loc$3184 = v$865(0);
var res$3185 = (pu$776[1][2](v$3177))(s$3183);
switch (((pickle$Polyhash$.peek$325(v$867[0],v$867[1],v$867[2],v$867[3],v$867[4]))(v$3177))[0]) { case 0: {return res$3185;
 break; }default: {(pickle$Polyhash$.insert$163(v$867))([v$3177,loc$3184]);
return res$3185;
} };
} };
};
},[7,pu$776[1][3]],function(v$3190){var v$3191 = v$3190[0];
var v$3192 = v$3190[1];
v$868(0);
var v$3193 = pickle$bitstream$.getw1$218(v$3191);
var v$3194 = v$3193[0];
var v$3195 = v$3193[1];
if (v$3194 == 0) {var v$3196 = pickle$bitstream$.getcw$401(v$3195);
var v$3197 = v$3196[0];
var v$3198 = v$3196[1];
var v$3199 = (pickle$Polyhash$.peek$325(v$866[0],v$866[1],v$866[2],v$866[3],v$866[4]))(v$3197);
switch (v$3199[0]) { case 0: {return [v$3199[1],[v$3198,v$3192]];
 break; }default: {var s$3201 = "shareGen0.impossible, loc=" + (basis$Word32$.toString$430(v$3197));
var s$3203 = "Pickle." + s$3201;
basis$General$.print$156(s$3203 + "\n");
throw [basis$Initial$.en$Fail$45,s$3203];
} };
} else {if (v$3194 == 1) {var loc$3206 = v$865(0);
var v$3207 = pu$776[1][4]([v$3195,v$3192]);
var v$3208 = v$3207[0];
var v$3209 = v$3207[1];
var v$3210 = v$3209[0];
var v$3211 = v$3209[1];
switch (((pickle$Polyhash$.peek$325(v$866[0],v$866[1],v$866[2],v$866[3],v$866[4]))(loc$3206))[0]) { case 1: {(pickle$Polyhash$.insert$163(v$866))([loc$3206,v$3208]);
 break; }default: {0;
} };
return [v$3208,[v$3210,v$3211]];
} else {basis$General$.print$156("Pickle.shareGen0.impossible2\n");
throw [basis$Initial$.en$Fail$45,"Pickle.shareGen0.impossible2"];
};
};
}]];
};
pickle$pickle$.shareGen$869 = function(a$872){var t_a$873 = a$872[1][3];
var warn$874 = function(v$876){var t$5134 = basis$General$.print$156;
var t$5133;
var t$5132;
var t$5131 = "Pickle warning: shareGen applied to ";
var t$5130;
var fix$5129 = {};
fix$5129.$arg = function(s$3246,t$3247,acc$3248){return [s$3246,["(",fix$5129.$pp(t$3247,[")",acc$3248])]];
};
fix$5129.$pp = function(v$3227,v$3228){switch (v$3227[0]) { case 7: {var v$3229 = v$3227[1];
return fix$5129.$arg("Share",v$3229,v$3228);
 break; }case 18: {return ["i",v$3228];
 break; }case 17: {return ["i31",v$3228];
 break; }case 16: {return ["i32",v$3228];
 break; }case 12: {return ["r",v$3228];
 break; }case 4: {return ["w",v$3228];
 break; }case 3: {return ["w1",v$3228];
 break; }case 0: {return ["w8",v$3228];
 break; }case 2: {return ["w31",v$3228];
 break; }case 1: {return ["w32",v$3228];
 break; }case 25: {return ["c",v$3228];
 break; }case 24: {return ["C0",v$3228];
 break; }case 23: {return ["C1",v$3228];
 break; }case 5: {return ["1",v$3228];
 break; }case 6: {return ["s",v$3228];
 break; }case 13: {var v$3230 = v$3227[1];
var v$3231 = v$3230[0];
var v$3232 = v$3230[1];
return ["(",fix$5129.$pp(v$3231,[",",fix$5129.$pp(v$3232,[")",v$3228])])];
 break; }case 11: {var v$3233 = v$3227[1];
return fix$5129.$arg("ref",v$3233,v$3228);
 break; }case 10: {var v$3234 = v$3227[1];
return fix$5129.$arg("ref0",v$3234,v$3228);
 break; }case 9: {var v$3235 = v$3227[1];
return fix$5129.$arg("ref1",v$3235,v$3228);
 break; }case 22: {var v$3236 = v$3227[1];
return fix$5129.$arg("conv",v$3236,v$3228);
 break; }case 14: {var v$3237 = v$3227[1];
return fix$5129.$arg("option",v$3237,v$3228);
 break; }case 15: {var v$3238 = v$3227[1];
return fix$5129.$arg("list",v$3238,v$3228);
 break; }case 20: {var v$3239 = v$3227[1];
var v$3240 = v$3239[0];
var v$3241 = v$3239[1];
return fix$5129.$arg("deco_" + v$3240,v$3241,v$3228);
 break; }case 8: {var v$3243 = v$3227[1];
return fix$5129.$arg("registerEq",v$3243,v$3228);
 break; }case 21: {var v$3244 = v$3227[1];
return ["data(",[basis$Int32$.toString$449(v$3244),[")",v$3228]]];
 break; }default: {var v$3245 = v$3227[1];
return ["enum(",[basis$Int32$.toString$449(v$3245),[")",v$3228]]];
} };
};
var arg$3225 = fix$5129.$arg;
var pp$3224 = fix$5129.$pp;
t$5130 = (SmlPrims.concat(pp$3224(t_a$873,null)));
t$5132 = (t$5131 + t$5130);
t$5133 = (t$5132 + "\n");
return t$5134(t$5133);
};
switch (t_a$873[0]) { case 7: {warn$874(0);
 break; }case 11: {warn$874(0);
 break; }case 10: {warn$874(0);
 break; }case 9: {warn$874(0);
 break; }case 21: {warn$874(0);
 break; }default: {var t$5135;
switch (t_a$873[0]) { case 18: {t$5135 = true;
 break; }case 17: {t$5135 = true;
 break; }case 4: {t$5135 = true;
 break; }case 3: {t$5135 = true;
 break; }case 0: {t$5135 = true;
 break; }case 2: {t$5135 = true;
 break; }case 25: {t$5135 = true;
 break; }case 5: {t$5135 = true;
 break; }default: {t$5135 = false;
} };
t$5135?(warn$874(0)):0;
} };
return shareGen0$770(function(v$899){return "no pp";
},a$872);
};
pickle$pickle$.string$900;
var x$3253 = [function(v$3289){return v$3289[0] == v$3289[1];
},function(s$3293){return function(p$3306){var v$3307 = p$3306[1];
if (v$3307 <= 0) {return p$3306;
} else {var v$3309 = p$3306[0];
var v$3310 = p$3306[1];
var t$5145;
var sz$3311 = s$3293.length;
var sz$3312 = (sz$3311 > 500)?500:sz$3311;
var fix$5146 = {};
fix$5146.$loop = function(v$3315,v$3316){lab$loop: while (true) {if (v$3315 >= sz$3312) {return v$3316;
} else {var t$5147 = SmlPrims.chk_ovf_i32(v$3315 + 1);
var t$5148 = ((SmlPrims.i32_to_w32(basis$String$.sub$92(s$3293,v$3315))) + ((v$3316 * 19) & 4294967295)) & 4294967295;
var v$3315 = t$5147;
var v$3316 = t$5148;
continue lab$loop;
};
};
};
var loop$3313 = fix$5146.$loop;
t$5145 = (loop$3313(0,v$3309));
return [t$5145,SmlPrims.chk_ovf_i32(v$3310 - 1)];
};
};
},function(st$3317){return function(s$3318){var sz$3319 = st$3317.length;
var s$3320 = pickle$bitstream$.outcw$389(SmlPrims.i32_to_w32(sz$3319),s$3318);
var stop$3327 = st$3317.length;
var fix$5140 = {};
fix$5140.$lr = function(v$3330,v$3331){lab$lr: while (true) {if (v$3330 < stop$3327) {var t$5142 = SmlPrims.chk_ovf_i32(v$3330 + 1);
var t$5141;
var v$4622 = st$3317.charCodeAt(v$3330);
t$5141 = (pickle$bitstream$.outc$233(v$4622,v$3331));
var t$5143 = t$5142;
var t$5144 = t$5141;
var v$3330 = t$5143;
var v$3331 = t$5144;
continue lab$lr;
} else {return v$3331;
};
};
};
var lr$3328 = fix$5140.$lr;
return lr$3328(0,s$3320);
};
},[6],function(v$3335){var v$3336 = v$3335[0];
var v$3337 = v$3335[1];
var v$3338 = pickle$bitstream$.getcw$401(v$3336);
var v$3339 = v$3338[0];
var v$3340 = v$3338[1];
var sz$3341 = SmlPrims.chk_ovf_i32(v$3339);
var fix$5136 = {};
fix$5136.$read = function(v$3344,v$5019,v$5020){lab$read: while (true) {switch (v$3344) { case 0: {return [SmlPrims.implode(basis$List$.rev$641(v$5020)),v$5019];
 break; }default: {var v$3349 = pickle$bitstream$.getc$234(v$5019);
var v$3350 = v$3349[0];
var v$3351 = v$3349[1];
var t$5137 = SmlPrims.chk_ovf_i32(v$3344 - 1);
var t$5138 = v$3351;
var t$5139 = [v$3350,v$5020];
var v$3344 = t$5137;
var v$5019 = t$5138;
var v$5020 = t$5139;
continue lab$read;
} };
};
};
var read$3342 = fix$5136.$read;
var v$3352 = read$3342(sz$3341,v$3340,null);
return [v$3352[0],[v$3352[1],v$3337]];
}];
var x$4882 = [0,x$3253];
pickle$pickle$.string$900 = (pickle$pickle$.shareGen$869(x$4882));
pickle$pickle$.pairGen0$974 = function(v$1042,v$1043){var hash_pair$979 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
return [0,[function(v$3372){var v$3373 = v$3372[0];
var v$3374 = v$3373[0];
var v$3375 = v$3373[1];
var v$3376 = v$3372[1];
var v$3377 = v$3376[0];
var v$3378 = v$3376[1];
return (v$1042[1][0]([v$3374,v$3377]))?(v$1043[1][0]([v$3375,v$3378])):false;
},function(v$3379){var v$3380 = v$3379[0];
var v$3381 = v$3379[1];
return function(p$3390){var v$3391 = p$3390[1];
if (v$3391 <= 0) {return p$3390;
} else {var p$3393;
var v$3394 = (v$1042[1][1](v$3380))(p$3390);
p$3393 = [(hash_pair$979 + ((v$3394[0] * 19) & 4294967295)) & 4294967295,v$3394[1]];
var f$3395 = v$1043[1][1](v$3381);
var v$3396 = p$3393[1];
if (v$3396 <= 0) {return p$3393;
} else {return f$3395(p$3393);
};
};
};
},function(v$3397){var v$3398 = v$3397[0];
var v$3399 = v$3397[1];
return function(os$3400){var os$3401 = (v$1042[1][2](v$3398))(os$3400);
return (v$1043[1][2](v$3399))(os$3401);
};
},[13,[v$1042[1][3],v$1043[1][3]]],function(is$3404){var v$3405 = v$1042[1][4](is$3404);
var v$3406 = v$3405[0];
var v$3407 = v$3405[1];
var v$3408 = v$1043[1][4](v$3407);
return [[v$3406,v$3408[0]],v$3408[1]];
}]];
};
pickle$pickle$.pairGen$1044 = function(pu$1047){return pickle$pickle$.shareGen$869(pickle$pickle$.pairGen0$974(pu$1047[0],pu$1047[1]));
};
pickle$pickle$.refEqGen$1048 = function(eq$1051,v_dummy$1054,pu$1057){var v$1142 = mkTables$734(function(x$3412){var v$4890 = x$3412[0];
return ((pu$1057[1][1](v$4890))([0,12]))[0];
},eq$1051);
var v$1143 = v$1142[3];
var v$1144 = v$1142[1];
var v$1145 = v$1142[0];
var v$1146 = v$1142[2];
var hash_ref$1063 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
return [0,[eq$1051,function(v$3450){var a$3451 = v$3450[0];
return function(p$3452){var v$3453 = p$3452[1];
if (v$3453 <= 0) {return p$3452;
} else {var v$3455 = (pu$1057[1][1](a$3451))(p$3452);
return [(hash_ref$1063 + ((v$3455[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3455[1] - 1)];
};
};
},function(r$3456){var v$3457 = r$3456[0];
return function(s$3458){v$1146(0);
var v$3459 = (pickle$Polyhash$.peek$325(v$1145[0],v$1145[1],v$1145[2],v$1145[3],v$1145[4]))(r$3456);
switch (v$3459[0]) { case 0: {var v$3461 = v$3459[1];
var s$3462 = pickle$bitstream$.outw1$217([0,s$3458]);
return pickle$bitstream$.outcw2$415(v$3461,s$3462);
 break; }default: {var s$3463 = pickle$bitstream$.outw1$217([1,s$3458]);
var loc$3464 = v$1143(0);
(pickle$Polyhash$.insert$163(v$1145))([r$3456,loc$3464]);
return (pu$1057[1][2](v$3457))(s$3463);
} };
};
},[11,pu$1057[1][3]],function(v$3468){var v$3469 = v$3468[0];
var v$3470 = v$3468[1];
v$1146(0);
var v$3471 = pickle$bitstream$.getw1$218(v$3469);
var v$3472 = v$3471[0];
var v$3473 = v$3471[1];
if (v$3472 == 0) {var v$3474 = pickle$bitstream$.getcw2$429(v$3473);
var v$3475 = v$3474[0];
var v$3476 = v$3474[1];
var v$3477 = (pickle$Polyhash$.peek$325(v$1144[0],v$1144[1],v$1144[2],v$1144[3],v$1144[4]))(v$3475);
switch (v$3477[0]) { case 0: {return [v$3477[1],[v$3476,v$3470]];
 break; }default: {basis$General$.print$156("Pickle.ref.impossible\n");
throw [basis$Initial$.en$Fail$45,"Pickle.ref.impossible"];
} };
} else {var loc$3483 = v$1143(0);
var r$3484 = [v_dummy$1054];
(pickle$Polyhash$.insert$163(v$1144))([loc$3483,r$3484]);
var v$3488 = pu$1057[1][4]([v$3473,v$3470]);
var v$3489 = v$3488[0];
var v$3490 = v$3488[1];
var v$3491 = v$3490[0];
var v$3492 = v$3490[1];
(r$3484[0] = v$3489,0);
return [r$3484,[v$3491,v$3492]];
};
}]];
};
pickle$pickle$.refGen$1147 = function(v_dummy$1150,pu$1153){return pickle$pickle$.refEqGen$1048(function(v$3495){return v$3495[0] == v$3495[1];
},v_dummy$1150,pu$1153);
};
pickle$pickle$.ref0EqGen$1154 = function(eq$1157,pu$1160){var hash_ref$1166 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var typ$1177 = [10,pu$1160[1][3]];
var v$1250 = mkTables$734(function(x$3514){var v$4897 = x$3514[0];
return ((pu$1160[1][1](v$4897))([0,12]))[0];
},eq$1157);
var v$1251 = v$1250[3];
var v$1252 = v$1250[1];
var v$1253 = v$1250[0];
var v$1254 = v$1250[2];
return [0,[eq$1157,function(v$3542){var a$3543 = v$3542[0];
return function(p$3544){var v$3545 = p$3544[1];
if (v$3545 <= 0) {return p$3544;
} else {var v$3547 = (pu$1160[1][1](a$3543))(p$3544);
return [(hash_ref$1166 + ((v$3547[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3547[1] - 1)];
};
};
},function(r$3548){var v$3549 = r$3548[0];
return function(s$3550){v$1254(0);
var v$3551 = (pickle$Polyhash$.peek$325(v$1253[0],v$1253[1],v$1253[2],v$1253[3],v$1253[4]))(r$3548);
switch (v$3551[0]) { case 0: {var v$3553 = v$3551[1];
var s$3554 = pickle$bitstream$.outw1$217([0,s$3550]);
return pickle$bitstream$.outcw2$415(v$3553,s$3554);
 break; }default: {var s$3555 = pickle$bitstream$.outw1$217([1,s$3550]);
var loc$3556 = v$1251(0);
(pickle$Polyhash$.insert$163(v$1253))([r$3548,loc$3556]);
return (pu$1160[1][2](v$3549))(s$3555);
} };
};
},typ$1177,function(v$3560){var v$3561 = v$3560[0];
var v$3562 = v$3560[1];
v$1254(0);
var v$3563 = pickle$bitstream$.getw1$218(v$3561);
var v$3564 = v$3563[0];
var v$3565 = v$3563[1];
if (v$3564 == 0) {var v$3566 = pickle$bitstream$.getcw2$429(v$3565);
var v$3567 = v$3566[0];
var v$3568 = v$3566[1];
var v$3569 = (pickle$Polyhash$.peek$325(v$1252[0],v$1252[1],v$1252[2],v$1252[3],v$1252[4]))(v$3567);
switch (v$3569[0]) { case 0: {return [v$3569[1],[v$3568,v$3562]];
 break; }default: {basis$General$.print$156("Pickle.ref.impossible\n");
throw [basis$Initial$.en$Fail$45,"Pickle.ref.impossible"];
} };
} else {var loc$3575 = v$1251(0);
var v$3576 = pu$1160[1][4]([v$3565,v$3562]);
var v$3577 = v$3576[0];
var v$3578 = v$3576[1];
var v$3579 = v$3578[0];
var v$3580 = v$3578[1];
var r$3581 = [v$3577];
(pickle$Polyhash$.insert$163(v$1252))([loc$3575,r$3581]);
return [r$3581,[v$3579,v$3580]];
};
}]];
};
pickle$pickle$.ref0Gen$1255 = function(pu$1258){return pickle$pickle$.ref0EqGen$1154(function(v$3586){return v$3586[0] == v$3586[1];
},pu$1258);
};
pickle$pickle$.ref0ShGen$1259 = function(pu$1262){return pickle$pickle$.ref0EqGen$1154(function(v$1270){var v$1271 = v$1270[0];
var v$1272 = v$1270[1];
var b$1267 = v$1272[0];
var a$1268 = v$1271[0];
return pu$1262[1][0]([a$1268,b$1267]);
},pu$1262);
};
pickle$pickle$.refOneGen$1273 = function(pu$1276){var hash_ref$1281 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
return [0,[function(v$3632){return v$3632[0] == v$3632[1];
},function(v$3636){var a$3637 = v$3636[0];
return function(p$3638){var v$3639 = p$3638[1];
if (v$3639 <= 0) {return p$3638;
} else {var v$3641 = (pu$1276[1][1](a$3637))(p$3638);
return [(hash_ref$1281 + ((v$3641[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3641[1] - 1)];
};
};
},function(r$3642){var v$3643 = r$3642[0];
return pu$1276[1][2](v$3643);
},[9,pu$1276[1][3]],function(is$3645){var v$3646 = pu$1276[1][4](is$3645);
var v$3647 = v$3646[0];
var v$3648 = v$3646[1];
return [[v$3647],v$3648];
}]];
};
var dataGen0$1319 = function(typ$1322,v$1327){var v$1476 = v$1327[0];
var v$1477 = v$1327[1];
var v$1478 = v$1327[2];
var typ$1328;
switch (typ$1322[0]) { case 0: {typ$1328 = typ$1322[1];
 break; }default: {var t$5152;
var fix$5149 = {};
fix$5149.$acc = function(v$3660,v$3661){lab$acc: while (true) {if (v$3660 == null) {return v$3661;
} else {var v$3662 = v$3660;
var v$3663 = v$3662[1];
var t$5150 = v$3663;
var t$5151 = SmlPrims.chk_ovf_i32(v$3661 + 1);
var v$3660 = t$5150;
var v$3661 = t$5151;
continue lab$acc;
};
};
};
var acc$3659 = fix$5149.$acc;
t$5152 = (acc$3659(v$1478,0));
typ$1328 = [21,t$5152];
} };
var hash_data$1336 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var res$1337 = [[1]];
var ps$1338 = [[0]];
var fs_sz$1339;
var fix$5153 = {};
fix$5153.$acc = function(v$3668,v$3669){lab$acc: while (true) {if (v$3668 == null) {return v$3669;
} else {var v$3670 = v$3668;
var v$3671 = v$3670[1];
var t$5154 = v$3671;
var t$5155 = SmlPrims.chk_ovf_i32(v$3669 + 1);
var v$3668 = t$5154;
var v$3669 = t$5155;
continue lab$acc;
};
};
};
var acc$3667 = fix$5153.$acc;
fs_sz$1339 = (acc$3667(v$1478,0));
var fix$5156 = {};
fix$5156.$eq = function(v$1427,v$1428){var n$1422 = v$1477(v$1427);
return (n$1422 == (v$1477(v$1428)))?((fix$5156.$getPUPI(n$1422))[1][0]([v$1427,v$1428])):false;
};
fix$5156.$p = function(v$1347){if (fs_sz$1339 == 1) {return function(x$1354){return (fix$5156.$getPUPI(0))[1][2](x$1354);
};
} else {if (fs_sz$1339 <= 256) {var bits$1359;
var w$3720 = SmlPrims.i32_to_w32(fs_sz$1339);
var w$3721 = (w$3720 - 1) & 4294967295;
var fix$5161 = {};
fix$5161.$f = function(v$3724,v$3725){lab$f: while (true) {if (v$3724 == 0) {return v$3725;
} else {var t$5162 = v$3724 >>> 1;
var t$5163 = (v$3725 + 1) & 4294967295;
var v$3724 = t$5162;
var v$3725 = t$5163;
continue lab$f;
};
};
};
var f$3722 = fix$5161.$f;
bits$1359 = (f$3722(w$3721,0));
return function(v$1362){return function(s$1365){var i$1366 = v$1477(v$1362);
var s$1367 = pickle$bitstream$.outwN$143(bits$1359,[255 & i$1366,s$1365]);
return ((fix$5156.$getPUPI(i$1366))[1][2](v$1362))(s$1367);
};
};
} else {return function(v$1370){return function(s$1373){var i$1374 = v$1477(v$1370);
var s$1375 = pickle$bitstream$.outcw2$415(SmlPrims.i32_to_w32(i$1374),s$1373);
return ((fix$5156.$getPUPI(i$1374))[1][2](v$1370))(s$1375);
};
};
};
};
};
fix$5156.$up = function(v$1377){if (fs_sz$1339 == 1) {return function(x$1384){return (fix$5156.$getPUPI(0))[1][4](x$1384);
};
} else {if (fs_sz$1339 <= 256) {var bits$1389;
var w$3705 = SmlPrims.i32_to_w32(fs_sz$1339);
var w$3706 = (w$3705 - 1) & 4294967295;
var fix$5158 = {};
fix$5158.$f = function(v$3709,v$3710){lab$f: while (true) {if (v$3709 == 0) {return v$3710;
} else {var t$5159 = v$3709 >>> 1;
var t$5160 = (v$3710 + 1) & 4294967295;
var v$3709 = t$5159;
var v$3710 = t$5160;
continue lab$f;
};
};
};
var f$3707 = fix$5158.$f;
bits$1389 = (f$3707(w$3706,0));
return function(v$1393){var v$1400 = v$1393[0];
var v$1401 = v$1393[1];
var v$1397 = pickle$bitstream$.getwN$181(bits$1389,v$1400);
var v$1398 = v$1397[0];
var v$1399 = v$1397[1];
return (fix$5156.$getPUPI(v$1398))[1][4]([v$1399,v$1401]);
};
} else {return function(v$1405){var v$1412 = v$1405[0];
var v$1413 = v$1405[1];
var v$1409 = pickle$bitstream$.getcw2$429(v$1412);
var v$1410 = v$1409[0];
var v$1411 = v$1409[1];
return (fix$5156.$getPUPI(SmlPrims.chk_ovf_i32(v$1410)))[1][4]([v$1411,v$1413]);
};
};
};
};
fix$5156.$getPUP = function(v$1430){var v$1435 = res$1337[0];
switch (v$1435[0]) { case 1: {var pup$1440 = shareGen0$770(function(v$3698){return "Con" + (basis$Int32$.toString$449(v$1477(v$3698)));
},[0,[function(v$5021){return fix$5156.$eq(v$5021[0],v$5021[1]);
},function(v$5038){return function(v$5039){return fix$5156.$h(v$5038,v$5039);
};
},fix$5156.$p(0),typ$1328,fix$5156.$up(0)]]);
(res$1337[0] = [0,pup$1440],0);
return pup$1440;
 break; }default: {return v$1435[1];
} };
};
fix$5156.$getPUPI = function(i$1451){var v$1458 = ps$1338[0];
switch (v$1458[0]) { case 0: {(ps$1338[0] = [1],0);
var ps0$1461;
var fix$5157 = {};
fix$5157.$map = function(v$3686){if (v$3686 == null) {return null;
} else {var v$3687 = v$3686;
var v$3688 = v$3687[0];
var v$3689 = v$3687[1];
return [v$3688(fix$5156.$getPUP(0)),fix$5157.$map(v$3689)];
};
};
var map$3685 = fix$5157.$map;
ps0$1461 = (map$3685(v$1478));
var psv$1465 = basis$Vector$$3.fromList$221(ps0$1461);
(ps$1338[0] = [2,psv$1465],0);
return basis$Vector$$3.sub$180(psv$1465,i$1451);
 break; }case 2: {var v$1460 = v$1458[1];
return basis$Vector$$3.sub$180(v$1460,i$1451);
 break; }default: {var s$3691 = "dataGen.Caching: " + v$1476;
var s$3692 = "Pickle." + s$3691;
basis$General$.print$156(s$3692 + "\n");
throw [basis$Initial$.en$Fail$45,s$3692];
} };
};
fix$5156.$h = function(v$1470,p$3673){var v$3674 = p$3673[1];
if (v$3674 <= 0) {return p$3673;
} else {var i$4905 = v$1477(v$1470);
var h_arg$4906 = (fix$5156.$getPUPI(i$4905))[1][1];
var w$4907 = SmlPrims.i32_to_w32(i$4905);
var v$4908;
var v$4909 = (h_arg$4906(v$1470))(p$3673);
v$4908 = [(hash_data$1336 + ((v$4909[0] * 19) & 4294967295)) & 4294967295,v$4909[1]];
return [(w$4907 + ((v$4908[0] * 19) & 4294967295)) & 4294967295,v$4908[1]];
};
};
var eq$1343 = fix$5156.$eq;
var p$1345 = fix$5156.$p;
var up$1344 = fix$5156.$up;
var getPUP$1342 = fix$5156.$getPUP;
var getPUPI$1341 = fix$5156.$getPUPI;
var h$1340 = fix$5156.$h;
return getPUP$1342(0);
};
pickle$pickle$.dataGen$1479 = function(a$1482){return dataGen0$1319([1],a$1482);
};
pickle$pickle$.data2Gen$1483 = function(v$1676,v$1677,v$1678,v$1679,v$1680,v$1681){var aHashData$1492 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var bHashData$1493 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var aRes$1494 = [[1]];
var bRes$1495 = [[1]];
var aPs$1496 = [[0]];
var bPs$1497 = [[0]];
var fix$5164 = {};
fix$5164.$aEq = function(v$1543,v$1544){var n$1538 = v$1677(v$1543);
return (n$1538 == (v$1677(v$1544)))?((fix$5164.$aGetPUPI(n$1538))[1][0]([v$1543,v$1544])):false;
};
fix$5164.$aH = function(v$1662,p$3807){var v$3808 = p$3807[1];
if (v$3808 <= 0) {return p$3807;
} else {var i$4920 = v$1677(v$1662);
var h_arg$4921 = (fix$5164.$aGetPUPI(i$4920))[1][1];
var w$4922 = SmlPrims.i32_to_w32(i$4920);
var v$4923;
var v$4924 = (h_arg$4921(v$1662))(p$3807);
v$4923 = [(aHashData$1492 + ((v$4924[0] * 19) & 4294967295)) & 4294967295,v$4924[1]];
return [(w$4922 + ((v$4923[0] * 19) & 4294967295)) & 4294967295,v$4923[1]];
};
};
fix$5164.$aP = function(v$1512,s$1515){var i$1516 = v$1677(v$1512);
var s$1517 = pickle$bitstream$.outcw$389(SmlPrims.i32_to_w32(i$1516),s$1515);
return ((fix$5164.$aGetPUPI(i$1516))[1][2](v$1512))(s$1517);
};
fix$5164.$aGetPUPI = function(i$1568){var v$1575 = aPs$1496[0];
switch (v$1575[0]) { case 0: {(aPs$1496[0] = [1],0);
var ps0$1578;
var fix$5174 = {};
fix$5174.$map = function(v$3796){if (v$3796 == null) {return null;
} else {var v$3797 = v$3796;
var v$3798 = v$3797[0];
var v$3799 = v$3797[1];
return [v$3798([fix$5164.$aGetPUP(0),fix$5164.$bGetPUP(0)]),fix$5174.$map(v$3799)];
};
};
var map$3795 = fix$5174.$map;
ps0$1578 = (map$3795(v$1678));
var psv$1582 = basis$Vector$$3.fromList$221(ps0$1578);
(aPs$1496[0] = [2,psv$1582],0);
return basis$Vector$$3.sub$180(psv$1582,i$1568);
 break; }case 2: {var v$1577 = v$1575[1];
return basis$Vector$$3.sub$180(v$1577,i$1568);
 break; }default: {var s$3801 = "dataGen2.Caching.a: " + v$1676;
var s$3802 = "Pickle." + s$3801;
basis$General$.print$156(s$3802 + "\n");
throw [basis$Initial$.en$Fail$45,s$3802];
} };
};
fix$5164.$aUp = function(v$1528,v$1529){var v$1525 = pickle$bitstream$.getcw$401(v$1528);
var v$1526 = v$1525[0];
var v$1527 = v$1525[1];
return (fix$5164.$aGetPUPI(SmlPrims.chk_ovf_i32(v$1526)))[1][4]([v$1527,v$1529]);
};
fix$5164.$aGetPUP = function(v$1546){var v$1551 = aRes$1494[0];
switch (v$1551[0]) { case 1: {var typ$1552;
var t$5173;
var fix$5170 = {};
fix$5170.$acc = function(v$3781,v$3782){lab$acc: while (true) {if (v$3781 == null) {return v$3782;
} else {var v$3783 = v$3781;
var v$3784 = v$3783[1];
var t$5171 = v$3784;
var t$5172 = SmlPrims.chk_ovf_i32(v$3782 + 1);
var v$3781 = t$5171;
var v$3782 = t$5172;
continue lab$acc;
};
};
};
var acc$3780 = fix$5170.$acc;
t$5173 = (acc$3780(v$1678,0));
typ$1552 = [21,t$5173];
var pup$1557 = shareGen0$770(function(v$3786){return "Con" + (basis$Int32$.toString$449(v$1677(v$3786)));
},[0,[function(v$5024){return fix$5164.$aEq(v$5024[0],v$5024[1]);
},function(v$5044){return function(v$5045){return fix$5164.$aH(v$5044,v$5045);
};
},function(v$5046){return function(v$5047){return fix$5164.$aP(v$5046,v$5047);
};
},typ$1552,function(v$5025){return fix$5164.$aUp(v$5025[0],v$5025[1]);
}]]);
(aRes$1494[0] = [0,pup$1557],0);
return pup$1557;
 break; }default: {return v$1551[1];
} };
};
fix$5164.$bEq = function(v$1618,v$1619){var n$1613 = v$1680(v$1618);
return (n$1613 == (v$1680(v$1619)))?((fix$5164.$bGetPUPI(n$1613))[1][0]([v$1618,v$1619])):false;
};
fix$5164.$bP = function(v$1587,s$1590){var i$1591 = v$1680(v$1587);
var s$1592 = pickle$bitstream$.outcw$389(SmlPrims.i32_to_w32(i$1591),s$1590);
return ((fix$5164.$bGetPUPI(i$1591))[1][2](v$1587))(s$1592);
};
fix$5164.$bUp = function(v$1603,v$1604){var v$1600 = pickle$bitstream$.getcw$401(v$1603);
var v$1601 = v$1600[0];
var v$1602 = v$1600[1];
return (fix$5164.$bGetPUPI(SmlPrims.chk_ovf_i32(v$1601)))[1][4]([v$1602,v$1604]);
};
fix$5164.$bGetPUP = function(v$1621){var v$1626 = bRes$1495[0];
switch (v$1626[0]) { case 1: {var typ$1627;
var t$5169;
var fix$5166 = {};
fix$5166.$acc = function(v$3764,v$3765){lab$acc: while (true) {if (v$3764 == null) {return v$3765;
} else {var v$3766 = v$3764;
var v$3767 = v$3766[1];
var t$5167 = v$3767;
var t$5168 = SmlPrims.chk_ovf_i32(v$3765 + 1);
var v$3764 = t$5167;
var v$3765 = t$5168;
continue lab$acc;
};
};
};
var acc$3763 = fix$5166.$acc;
t$5169 = (acc$3763(v$1681,0));
typ$1627 = [21,t$5169];
var pup$1632 = shareGen0$770(function(v$3769){return "Con" + (basis$Int32$.toString$449(v$1680(v$3769)));
},[0,[function(v$5022){return fix$5164.$bEq(v$5022[0],v$5022[1]);
},function(v$5040){return function(v$5041){return fix$5164.$bH(v$5040,v$5041);
};
},function(v$5042){return function(v$5043){return fix$5164.$bP(v$5042,v$5043);
};
},typ$1627,function(v$5023){return fix$5164.$bUp(v$5023[0],v$5023[1]);
}]]);
(bRes$1495[0] = [0,pup$1632],0);
return pup$1632;
 break; }default: {return v$1626[1];
} };
};
fix$5164.$bGetPUPI = function(i$1643){var v$1650 = bPs$1497[0];
switch (v$1650[0]) { case 0: {(bPs$1497[0] = [1],0);
var ps0$1653;
var fix$5165 = {};
fix$5165.$map = function(v$3751){if (v$3751 == null) {return null;
} else {var v$3752 = v$3751;
var v$3753 = v$3752[0];
var v$3754 = v$3752[1];
return [v$3753([fix$5164.$aGetPUP(0),fix$5164.$bGetPUP(0)]),fix$5165.$map(v$3754)];
};
};
var map$3750 = fix$5165.$map;
ps0$1653 = (map$3750(v$1681));
var psv$1657 = basis$Vector$$3.fromList$221(ps0$1653);
(bPs$1497[0] = [2,psv$1657],0);
return basis$Vector$$3.sub$180(psv$1657,i$1643);
 break; }case 2: {var v$1652 = v$1650[1];
return basis$Vector$$3.sub$180(v$1652,i$1643);
 break; }default: {var s$3756 = "dataGen2.Caching.b: " + v$1679;
var s$3757 = "Pickle." + s$3756;
basis$General$.print$156(s$3757 + "\n");
throw [basis$Initial$.en$Fail$45,s$3757];
} };
};
fix$5164.$bH = function(v$1670,p$3738){var v$3739 = p$3738[1];
if (v$3739 <= 0) {return p$3738;
} else {var i$4912 = v$1680(v$1670);
var h_arg$4913 = (fix$5164.$bGetPUPI(i$4912))[1][1];
var w$4914 = SmlPrims.i32_to_w32(i$4912);
var v$4915;
var v$4916 = (h_arg$4913(v$1670))(p$3738);
v$4915 = [(bHashData$1493 + ((v$4916[0] * 19) & 4294967295)) & 4294967295,v$4916[1]];
return [(w$4914 + ((v$4915[0] * 19) & 4294967295)) & 4294967295,v$4915[1]];
};
};
var aEq$1507 = fix$5164.$aEq;
var aH$1499 = fix$5164.$aH;
var aP$1509 = fix$5164.$aP;
var aGetPUPI$1505 = fix$5164.$aGetPUPI;
var aUp$1508 = fix$5164.$aUp;
var aGetPUP$1506 = fix$5164.$aGetPUP;
var bEq$1502 = fix$5164.$bEq;
var bP$1504 = fix$5164.$bP;
var bUp$1503 = fix$5164.$bUp;
var bGetPUP$1501 = fix$5164.$bGetPUP;
var bGetPUPI$1500 = fix$5164.$bGetPUPI;
var bH$1498 = fix$5164.$bH;
return [aGetPUP$1506(0),bGetPUP$1501(0)];
};
pickle$pickle$.data3Gen$1682 = function(v$1970,v$1971,v$1972,v$1973,v$1974,v$1975,v$1976,v$1977,v$1978){var aHashData$1694 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var bHashData$1695 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var cHashData$1696 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var aRes$1697 = [[1]];
var bRes$1698 = [[1]];
var cRes$1699 = [[1]];
var aPs$1700 = [[0]];
var bPs$1701 = [[0]];
var cPs$1702 = [[0]];
var fix$5175 = {};
fix$5175.$bEq = function(v$1829,v$1830){var n$1824 = v$1974(v$1829);
return (n$1824 == (v$1974(v$1830)))?((fix$5175.$bGetPUPI(n$1824))[1][0]([v$1829,v$1830])):false;
};
fix$5175.$bH = function(v$1956,p$3936){var v$3937 = p$3936[1];
if (v$3937 <= 0) {return p$3936;
} else {var i$4945 = v$1974(v$1956);
var h_arg$4946 = (fix$5175.$bGetPUPI(i$4945))[1][1];
var w$4947 = SmlPrims.i32_to_w32(i$4945);
var v$4948;
var v$4949 = (h_arg$4946(v$1956))(p$3936);
v$4948 = [(bHashData$1695 + ((v$4949[0] * 19) & 4294967295)) & 4294967295,v$4949[1]];
return [(w$4947 + ((v$4948[0] * 19) & 4294967295)) & 4294967295,v$4948[1]];
};
};
fix$5175.$bP = function(v$1798,s$1801){var i$1802 = v$1974(v$1798);
var s$1803 = pickle$bitstream$.outcw$389(SmlPrims.i32_to_w32(i$1802),s$1801);
return ((fix$5175.$bGetPUPI(i$1802))[1][2](v$1798))(s$1803);
};
fix$5175.$aEq = function(v$1754,v$1755){var n$1749 = v$1971(v$1754);
return (n$1749 == (v$1971(v$1755)))?((fix$5175.$aGetPUPI(n$1749))[1][0]([v$1754,v$1755])):false;
};
fix$5175.$aH = function(v$1948,p$3923){var v$3924 = p$3923[1];
if (v$3924 <= 0) {return p$3923;
} else {var i$4939 = v$1971(v$1948);
var h_arg$4940 = (fix$5175.$aGetPUPI(i$4939))[1][1];
var w$4941 = SmlPrims.i32_to_w32(i$4939);
var v$4942;
var v$4943 = (h_arg$4940(v$1948))(p$3923);
v$4942 = [(aHashData$1694 + ((v$4943[0] * 19) & 4294967295)) & 4294967295,v$4943[1]];
return [(w$4941 + ((v$4942[0] * 19) & 4294967295)) & 4294967295,v$4942[1]];
};
};
fix$5175.$aP = function(v$1723,s$1726){var i$1727 = v$1971(v$1723);
var s$1728 = pickle$bitstream$.outcw$389(SmlPrims.i32_to_w32(i$1727),s$1726);
return ((fix$5175.$aGetPUPI(i$1727))[1][2](v$1723))(s$1728);
};
fix$5175.$aGetPUPI = function(i$1779){var v$1786 = aPs$1700[0];
switch (v$1786[0]) { case 0: {(aPs$1700[0] = [1],0);
var ps0$1789;
var fix$5190 = {};
fix$5190.$map = function(v$3912){if (v$3912 == null) {return null;
} else {var v$3913 = v$3912;
var v$3914 = v$3913[0];
var v$3915 = v$3913[1];
return [v$3914([fix$5175.$aGetPUP(0),fix$5175.$bGetPUP(0),fix$5175.$cGetPUP(0)]),fix$5190.$map(v$3915)];
};
};
var map$3911 = fix$5190.$map;
ps0$1789 = (map$3911(v$1972));
var psv$1793 = basis$Vector$$3.fromList$221(ps0$1789);
(aPs$1700[0] = [2,psv$1793],0);
return basis$Vector$$3.sub$180(psv$1793,i$1779);
 break; }case 2: {var v$1788 = v$1786[1];
return basis$Vector$$3.sub$180(v$1788,i$1779);
 break; }default: {var s$3917 = "dataGen3.Caching.a: " + v$1970;
var s$3918 = "Pickle." + s$3917;
basis$General$.print$156(s$3918 + "\n");
throw [basis$Initial$.en$Fail$45,s$3918];
} };
};
fix$5175.$aUp = function(v$1739,v$1740){var v$1736 = pickle$bitstream$.getcw$401(v$1739);
var v$1737 = v$1736[0];
var v$1738 = v$1736[1];
return (fix$5175.$aGetPUPI(SmlPrims.chk_ovf_i32(v$1737)))[1][4]([v$1738,v$1740]);
};
fix$5175.$aGetPUP = function(v$1757){var v$1762 = aRes$1697[0];
switch (v$1762[0]) { case 1: {var typ$1763;
var t$5189;
var fix$5186 = {};
fix$5186.$acc = function(v$3897,v$3898){lab$acc: while (true) {if (v$3897 == null) {return v$3898;
} else {var v$3899 = v$3897;
var v$3900 = v$3899[1];
var t$5187 = v$3900;
var t$5188 = SmlPrims.chk_ovf_i32(v$3898 + 1);
var v$3897 = t$5187;
var v$3898 = t$5188;
continue lab$acc;
};
};
};
var acc$3896 = fix$5186.$acc;
t$5189 = (acc$3896(v$1972,0));
typ$1763 = [21,t$5189];
var pup$1768 = shareGen0$770(function(v$3902){return "Con" + (basis$Int32$.toString$449(v$1971(v$3902)));
},[0,[function(v$5030){return fix$5175.$aEq(v$5030[0],v$5030[1]);
},function(v$5056){return function(v$5057){return fix$5175.$aH(v$5056,v$5057);
};
},function(v$5058){return function(v$5059){return fix$5175.$aP(v$5058,v$5059);
};
},typ$1763,function(v$5031){return fix$5175.$aUp(v$5031[0],v$5031[1]);
}]]);
(aRes$1697[0] = [0,pup$1768],0);
return pup$1768;
 break; }default: {return v$1762[1];
} };
};
fix$5175.$bGetPUPI = function(i$1854){var v$1861 = bPs$1701[0];
switch (v$1861[0]) { case 0: {(bPs$1701[0] = [1],0);
var ps0$1864;
var fix$5185 = {};
fix$5185.$map = function(v$3884){if (v$3884 == null) {return null;
} else {var v$3885 = v$3884;
var v$3886 = v$3885[0];
var v$3887 = v$3885[1];
return [v$3886([fix$5175.$aGetPUP(0),fix$5175.$bGetPUP(0),fix$5175.$cGetPUP(0)]),fix$5185.$map(v$3887)];
};
};
var map$3883 = fix$5185.$map;
ps0$1864 = (map$3883(v$1975));
var psv$1868 = basis$Vector$$3.fromList$221(ps0$1864);
(bPs$1701[0] = [2,psv$1868],0);
return basis$Vector$$3.sub$180(psv$1868,i$1854);
 break; }case 2: {var v$1863 = v$1861[1];
return basis$Vector$$3.sub$180(v$1863,i$1854);
 break; }default: {var s$3889 = "dataGen3.Caching.b: " + v$1973;
var s$3890 = "Pickle." + s$3889;
basis$General$.print$156(s$3890 + "\n");
throw [basis$Initial$.en$Fail$45,s$3890];
} };
};
fix$5175.$bUp = function(v$1814,v$1815){var v$1811 = pickle$bitstream$.getcw$401(v$1814);
var v$1812 = v$1811[0];
var v$1813 = v$1811[1];
return (fix$5175.$bGetPUPI(SmlPrims.chk_ovf_i32(v$1812)))[1][4]([v$1813,v$1815]);
};
fix$5175.$bGetPUP = function(v$1832){var v$1837 = bRes$1698[0];
switch (v$1837[0]) { case 1: {var typ$1838;
var t$5184;
var fix$5181 = {};
fix$5181.$acc = function(v$3869,v$3870){lab$acc: while (true) {if (v$3869 == null) {return v$3870;
} else {var v$3871 = v$3869;
var v$3872 = v$3871[1];
var t$5182 = v$3872;
var t$5183 = SmlPrims.chk_ovf_i32(v$3870 + 1);
var v$3869 = t$5182;
var v$3870 = t$5183;
continue lab$acc;
};
};
};
var acc$3868 = fix$5181.$acc;
t$5184 = (acc$3868(v$1975,0));
typ$1838 = [21,t$5184];
var pup$1843 = shareGen0$770(function(v$3874){return "Con" + (basis$Int32$.toString$449(v$1974(v$3874)));
},[0,[function(v$5028){return fix$5175.$bEq(v$5028[0],v$5028[1]);
},function(v$5052){return function(v$5053){return fix$5175.$bH(v$5052,v$5053);
};
},function(v$5054){return function(v$5055){return fix$5175.$bP(v$5054,v$5055);
};
},typ$1838,function(v$5029){return fix$5175.$bUp(v$5029[0],v$5029[1]);
}]]);
(bRes$1698[0] = [0,pup$1843],0);
return pup$1843;
 break; }default: {return v$1837[1];
} };
};
fix$5175.$cEq = function(v$1904,v$1905){var n$1899 = v$1977(v$1904);
return (n$1899 == (v$1977(v$1905)))?((fix$5175.$cGetPUPI(n$1899))[1][0]([v$1904,v$1905])):false;
};
fix$5175.$cP = function(v$1873,s$1876){var i$1877 = v$1977(v$1873);
var s$1878 = pickle$bitstream$.outcw$389(SmlPrims.i32_to_w32(i$1877),s$1876);
return ((fix$5175.$cGetPUPI(i$1877))[1][2](v$1873))(s$1878);
};
fix$5175.$cUp = function(v$1889,v$1890){var v$1886 = pickle$bitstream$.getcw$401(v$1889);
var v$1887 = v$1886[0];
var v$1888 = v$1886[1];
return (fix$5175.$cGetPUPI(SmlPrims.chk_ovf_i32(v$1887)))[1][4]([v$1888,v$1890]);
};
fix$5175.$cGetPUP = function(v$1907){var v$1912 = cRes$1699[0];
switch (v$1912[0]) { case 1: {var typ$1913;
var t$5180;
var fix$5177 = {};
fix$5177.$acc = function(v$3852,v$3853){lab$acc: while (true) {if (v$3852 == null) {return v$3853;
} else {var v$3854 = v$3852;
var v$3855 = v$3854[1];
var t$5178 = v$3855;
var t$5179 = SmlPrims.chk_ovf_i32(v$3853 + 1);
var v$3852 = t$5178;
var v$3853 = t$5179;
continue lab$acc;
};
};
};
var acc$3851 = fix$5177.$acc;
t$5180 = (acc$3851(v$1978,0));
typ$1913 = [21,t$5180];
var pup$1918 = shareGen0$770(function(v$3857){return "Con" + (basis$Int32$.toString$449(v$1977(v$3857)));
},[0,[function(v$5026){return fix$5175.$cEq(v$5026[0],v$5026[1]);
},function(v$5048){return function(v$5049){return fix$5175.$cH(v$5048,v$5049);
};
},function(v$5050){return function(v$5051){return fix$5175.$cP(v$5050,v$5051);
};
},typ$1913,function(v$5027){return fix$5175.$cUp(v$5027[0],v$5027[1]);
}]]);
(cRes$1699[0] = [0,pup$1918],0);
return pup$1918;
 break; }default: {return v$1912[1];
} };
};
fix$5175.$cGetPUPI = function(i$1929){var v$1936 = cPs$1702[0];
switch (v$1936[0]) { case 0: {(cPs$1702[0] = [1],0);
var ps0$1939;
var fix$5176 = {};
fix$5176.$map = function(v$3839){if (v$3839 == null) {return null;
} else {var v$3840 = v$3839;
var v$3841 = v$3840[0];
var v$3842 = v$3840[1];
return [v$3841([fix$5175.$aGetPUP(0),fix$5175.$bGetPUP(0),fix$5175.$cGetPUP(0)]),fix$5176.$map(v$3842)];
};
};
var map$3838 = fix$5176.$map;
ps0$1939 = (map$3838(v$1978));
var psv$1943 = basis$Vector$$3.fromList$221(ps0$1939);
(cPs$1702[0] = [2,psv$1943],0);
return basis$Vector$$3.sub$180(psv$1943,i$1929);
 break; }case 2: {var v$1938 = v$1936[1];
return basis$Vector$$3.sub$180(v$1938,i$1929);
 break; }default: {var s$3844 = "dataGen3.Caching.c: " + v$1976;
var s$3845 = "Pickle." + s$3844;
basis$General$.print$156(s$3845 + "\n");
throw [basis$Initial$.en$Fail$45,s$3845];
} };
};
fix$5175.$cH = function(v$1964,p$3826){var v$3827 = p$3826[1];
if (v$3827 <= 0) {return p$3826;
} else {var i$4930 = v$1977(v$1964);
var h_arg$4931 = (fix$5175.$cGetPUPI(i$4930))[1][1];
var w$4932 = SmlPrims.i32_to_w32(i$4930);
var v$4933;
var v$4934 = (h_arg$4931(v$1964))(p$3826);
v$4933 = [(cHashData$1696 + ((v$4934[0] * 19) & 4294967295)) & 4294967295,v$4934[1]];
return [(w$4932 + ((v$4933[0] * 19) & 4294967295)) & 4294967295,v$4933[1]];
};
};
var bEq$1713 = fix$5175.$bEq;
var bH$1704 = fix$5175.$bH;
var bP$1715 = fix$5175.$bP;
var aEq$1718 = fix$5175.$aEq;
var aH$1705 = fix$5175.$aH;
var aP$1720 = fix$5175.$aP;
var aGetPUPI$1716 = fix$5175.$aGetPUPI;
var aUp$1719 = fix$5175.$aUp;
var aGetPUP$1717 = fix$5175.$aGetPUP;
var bGetPUPI$1711 = fix$5175.$bGetPUPI;
var bUp$1714 = fix$5175.$bUp;
var bGetPUP$1712 = fix$5175.$bGetPUP;
var cEq$1708 = fix$5175.$cEq;
var cP$1710 = fix$5175.$cP;
var cUp$1709 = fix$5175.$cUp;
var cGetPUP$1707 = fix$5175.$cGetPUP;
var cGetPUPI$1706 = fix$5175.$cGetPUPI;
var cH$1703 = fix$5175.$cH;
return [aGetPUP$1717(0),bGetPUP$1712(0),cGetPUP$1707(0)];
};
pickle$pickle$.con0$1979 = function(b$1982,v$1984){return [0,[function(v$3948){return true;
},function(v$3949){return function(p$3950){return p$3950;
};
},function(v$3951){return function(s$3952){return s$3952;
};
},[24],function(is$3953){return [b$1982,is$3953];
}]];
};
pickle$pickle$.con1$2005 = function(con$2008,decon$2011,pu$2014){return [0,[function(v$3961){var v$3962 = v$3961[0];
var v$3963 = v$3961[1];
return pu$2014[1][0]([decon$2011(v$3962),decon$2011(v$3963)]);
},function(b$3964){return function(p$3967){var v$3968 = p$3967[1];
return (v$3968 <= 0)?p$3967:((pu$2014[1][1](decon$2011(b$3964)))(p$3967));
};
},function(b$3970){return pu$2014[1][2](decon$2011(b$3970));
},[23],function(is$3971){var v$3972 = pu$2014[1][4](is$3971);
var v$3973 = v$3972[0];
var v$3974 = v$3972[1];
return [con$2008(v$3973),v$3974];
}]];
};
pickle$pickle$.newHash$2044 = function(f$2047,pu$2050){return [0,[pu$2050[1][0],function(x$3980){var x$4983 = f$2047(x$3980);
var x$4984 = SmlPrims.i32_to_w32(x$4983);
return function(p$4985){var v$4986 = p$4985[1];
return (v$4986 <= 0)?p$4985:[(x$4984 + ((p$4985[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$4985[1] - 1)];
};
},pu$2050[1][2],pu$2050[1][3],pu$2050[1][4]]];
};
pickle$pickle$.maybeNewHash$2056 = function(f$2059,pu$2062){return [0,[pu$2062[1][0],function(a$4007){return function(p$4014){var v$4015 = p$4014[1];
if (v$4015 <= 0) {return p$4014;
} else {var v$4017 = f$2059(a$4007);
switch (v$4017[0]) { case 0: {return [((SmlPrims.i32_to_w32(v$4017[1])) + ((p$4014[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$4014[1] - 1)];
 break; }default: {return (pu$2062[1][1](a$4007))(p$4014);
} };
};
};
},pu$2062[1][2],pu$2062[1][3],pu$2062[1][4]]];
};
pickle$pickle$.combHash$2081 = function(f$2084,pu$2087){return [0,[pu$2087[1][0],function(a$4032){return function(p$4041){var v$4042 = p$4041[1];
if (v$4042 <= 0) {return p$4041;
} else {var p$4044 = [((SmlPrims.i32_to_w32(f$2084(a$4032))) + ((p$4041[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$4041[1] - 1)];
var f$4045 = pu$2087[1][1](a$4032);
var v$4046 = p$4044[1];
if (v$4046 <= 0) {return p$4044;
} else {return f$4045(p$4044);
};
};
};
},pu$2087[1][2],pu$2087[1][3],pu$2087[1][4]]];
};
pickle$pickle$.listGen$2100 = function(pu_a$2103){var x$4051;
var f_nil$2112;
var b$4058 = null;
f_nil$2112 = (function(v$4059){return [0,[function(v$4060){return true;
},function(v$4061){return function(p$4062){return p$4062;
};
},function(v$4063){return function(s$4064){return s$4064;
};
},[24],function(is$4065){return [b$4058,is$4065];
}]];
});
x$4051 = (dataGen0$1319([0,[15,pu_a$2103[1][3]]],["list",function(v$4071){return (v$4071 == null)?0:1;
},[f_nil$2112,[function(pu$4072){return pickle$pickle$.con1$2005(function(v$4073){return v$4073;
},function(v$4074){if (v$4074 == null) {basis$General$.print$156("Pickle.cons\n");
throw [basis$Initial$.en$Fail$45,"Pickle.cons"];
} else {return v$4074;
};
},pickle$pickle$.pairGen0$974(pu_a$2103,pu$4072));
},null]]]));
return pickle$pickle$.combHash$2081(function(a$5082){var fix$5191 = {};
fix$5191.$acc = function(v$5084,v$5085){lab$acc: while (true) {if (v$5084 == null) {return v$5085;
} else {var v$5086 = v$5084;
var v$5087 = v$5086[1];
var t$5192 = v$5087;
var t$5193 = SmlPrims.chk_ovf_i32(v$5085 + 1);
var v$5084 = t$5192;
var v$5085 = t$5193;
continue lab$acc;
};
};
};
var acc$5083 = fix$5191.$acc;
return acc$5083(a$5082,0);
},x$4051);
};
pickle$pickle$.optionGen$2125 = function(pu_a$2128){var fun_NONE$2137;
var b$4079 = [1];
fun_NONE$2137 = (function(v$4080){return [0,[function(v$4081){return true;
},function(v$4082){return function(p$4083){return p$4083;
};
},function(v$4084){return function(s$4085){return s$4085;
};
},[24],function(is$4086){return [b$4079,is$4086];
}]];
});
return dataGen0$1319([0,[14,pu_a$2128[1][3]]],["option",function(v$4092){switch (v$4092[0]) { case 1: {return 0;
 break; }default: {return 1;
} };
},[fun_NONE$2137,[function(v$4093){return pickle$pickle$.con1$2005(function(v$4094){return [0,v$4094];
},function(v$4095){switch (v$4095[0]) { case 0: {return v$4095[1];
 break; }default: {basis$General$.print$156("Pickle.option\n");
throw [basis$Initial$.en$Fail$45,"Pickle.option"];
} };
},pu_a$2128);
},null]]]);
};
pickle$pickle$.enumGen$2149 = function(v$2781,v$2153){var v$2252 = v$2153[1];
var v$2239;
var fix$5194 = {};
fix$5194.$foldl = function(v$4110,v$4111){lab$foldl: while (true) {if (v$4111 == null) {return v$4110;
} else {var v$4112 = v$4111;
var v$4113 = v$4112[0];
var v$4114 = v$4112[1];
var t$5195;
var v$4119 = v$4110[0];
var v$4120 = v$4110[1];
t$5195 = [[[v$4113,SmlPrims.i32_to_w32(v$4120)],v$4119],SmlPrims.chk_ovf_i32(v$4120 + 1)];
var t$5196 = t$5195;
var t$5197 = v$4114;
var v$4110 = t$5196;
var v$4111 = t$5197;
continue lab$foldl;
};
};
};
var foldl$4109 = fix$5194.$foldl;
var v$5062 = [null,0];
v$2239 = (foldl$4109(v$5062,v$2252));
var v$2240 = v$2239[0];
var hash_enum$2209 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var t$5223;
var t$5222 = function(v$4230){var v$4231 = v$4230[0];
var v$4232 = v$4230[1];
return v$2781([v$4231,v$4232]);
};
var t$5221 = function(v$4233){return function(p$4259){var v$4260 = p$4259[1];
if (v$4260 <= 0) {return p$4259;
} else {var t$5220;
var t$5219 = hash_enum$2209;
var t$5218;
var t$5217;
var t$5216;
var fix$5213 = {};
fix$5213.$lookupw = function(v$4264,v$4265){lab$lookupw: while (true) {if (v$4264 == null) {basis$General$.print$156("Pickle.enumGen.unknown constructor\n");
throw [basis$Initial$.en$Fail$45,"Pickle.enumGen.unknown constructor"];
} else {var v$4271 = v$4264;
var v$4272 = v$4271[0];
var v$4273 = v$4272[0];
var v$4274 = v$4272[1];
var v$4275 = v$4271[1];
if (v$2781([v$4273,v$4265])) {return v$4274;
} else {var t$5214 = v$4275;
var t$5215 = v$4265;
var v$4264 = t$5214;
var v$4265 = t$5215;
continue lab$lookupw;
};
};
};
};
var lookupw$4263 = fix$5213.$lookupw;
t$5216 = (lookupw$4263(v$2240,v$4233));
t$5217 = ((t$5216 + ((p$4259[0] * 19) & 4294967295)) & 4294967295);
t$5218 = ((t$5217 * 19) & 4294967295);
t$5220 = ((t$5219 + t$5218) & 4294967295);
return [t$5220,p$4259[1]];
};
};
};
var t$5212 = function(v$4280){return function(s$4281){var t$5211 = pickle$bitstream$.outcw$389;
var t$5210;
var fix$5207 = {};
fix$5207.$lookupw = function(v$4283,v$4284){lab$lookupw: while (true) {if (v$4283 == null) {basis$General$.print$156("Pickle.enumGen.unknown constructor\n");
throw [basis$Initial$.en$Fail$45,"Pickle.enumGen.unknown constructor"];
} else {var v$4291 = v$4283;
var v$4292 = v$4291[0];
var v$4293 = v$4292[0];
var v$4294 = v$4292[1];
var v$4295 = v$4291[1];
if (v$2781([v$4293,v$4284])) {return v$4294;
} else {var t$5208 = v$4295;
var t$5209 = v$4284;
var v$4283 = t$5208;
var v$4284 = t$5209;
continue lab$lookupw;
};
};
};
};
var lookupw$4282 = fix$5207.$lookupw;
t$5210 = (lookupw$4282(v$2240,v$4280));
return t$5211(t$5210,s$4281);
};
};
var t$5206;
var t$5205;
var fix$5202 = {};
fix$5202.$acc = function(v$4303,v$4304){lab$acc: while (true) {if (v$4303 == null) {return v$4304;
} else {var v$4305 = v$4303;
var v$4306 = v$4305[1];
var t$5203 = v$4306;
var t$5204 = SmlPrims.chk_ovf_i32(v$4304 + 1);
var v$4303 = t$5203;
var v$4304 = t$5204;
continue lab$acc;
};
};
};
var acc$4302 = fix$5202.$acc;
t$5205 = (acc$4302(v$2252,0));
t$5206 = [19,t$5205];
t$5223 = [t$5222,t$5221,t$5212,t$5206,function(v$4307){var v$4308 = v$4307[0];
var v$4309 = v$4307[1];
var v$4310 = pickle$bitstream$.getcw$401(v$4308);
var v$4311 = v$4310[0];
var v$4312 = v$4310[1];
var t$5201;
var fix$5198 = {};
fix$5198.$lookupv = function(v$4314,v$4315){lab$lookupv: while (true) {if (v$4314 == null) {basis$General$.print$156("Pickle.enumGen.unknown constructor tag\n");
throw [basis$Initial$.en$Fail$45,"Pickle.enumGen.unknown constructor tag"];
} else {var v$4322 = v$4314;
var v$4323 = v$4322[0];
var v$4324 = v$4323[0];
var v$4325 = v$4323[1];
var v$4326 = v$4322[1];
if (v$4325 == v$4315) {return v$4324;
} else {var t$5199 = v$4326;
var t$5200 = v$4315;
var v$4314 = t$5199;
var v$4315 = t$5200;
continue lab$lookupv;
};
};
};
};
var lookupv$4313 = fix$5198.$lookupv;
t$5201 = (lookupv$4313(v$2240,v$4311));
return [t$5201,[v$4312,v$4309]];
}];
return [0,t$5223];
};
pickle$pickle$.pickle$2253 = function(pu$2256,v$2259){reset_fun$85[0](0);
var os$2260 = pickle$bitstream$.openOut$490(0);
var os$2261 = (pu$2256[1][2](v$2259))(os$2260);
return pickle$bitstream$.toString$486(os$2261[0],os$2261[1]);
};
pickle$pickle$.unpickle$2262 = function(pu$2265,s$2268){reset_fun$85[0](0);
return (pu$2265[1][4]([[s$2268,0],(pickle$Polyhash$.mkTable$66(function(x$4344){return SmlPrims.w32_to_i32_X(pickle$eqhashdyn2$.hash$121(12,x$4344));
},function(v$5032){return pickle$eqhashdyn2$.eq$110(v$5032[0],v$5032[1]);
}))([10,exn$PickleExn$84])]))[0];
};
pickle$pickle$.unpickle$$2273 = function(pu$2276,hce$2279,s$2282){reset_fun$85[0](0);
var v$2286 = pu$2276[1][4]([[s$2282,0],hce$2279]);
return [v$2286[0],v$2286[1][1]];
};
pickle$pickle$.convert0$2290 = function(v$2331,v$2332){return function(pu$2297){var hash_conv$2298 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
return [0,[function(v$4363){var v$4364 = v$4363[0];
var v$4365 = v$4363[1];
return pu$2297[1][0]([v$2332(v$4364),v$2332(v$4365)]);
},function(v$4366){return function(p$4375){var v$4376 = p$4375[1];
if (v$4376 <= 0) {return p$4375;
} else {var v$4378;
var t$5224;
var v$4802 = pu$2297[1][1];
t$5224 = (v$4802(v$2332(v$4366)));
v$4378 = (t$5224(p$4375));
return [(hash_conv$2298 + ((v$4378[0] * 19) & 4294967295)) & 4294967295,v$4378[1]];
};
};
},function(v$4382){return function(s$4383){return (pu$2297[1][2](v$2332(v$4382)))(s$4383);
};
},[22,pu$2297[1][3]],function(is$4385){var v$4386 = pu$2297[1][4](is$4385);
var v$4387 = v$4386[0];
var v$4388 = v$4386[1];
return [v$2331(v$4387),v$4388];
}]];
};
};
pickle$pickle$.convert$2333 = function(a$2336,b$2339){return pickle$pickle$.shareGen$869((pickle$pickle$.convert0$2290(a$2336[0],a$2336[1]))(b$2339));
};
pickle$pickle$.tup3Gen0$2340 = function(v$2365,v$2366,v$2367){return (pickle$pickle$.convert0$2290(function(v$4389){var v$4390 = v$4389[0];
var v$4391 = v$4389[1];
return [v$4390,v$4391[0],v$4391[1]];
},function(v$4392){return [v$4392[0],[v$4392[1],v$4392[2]]];
}))(pickle$pickle$.pairGen0$974(v$2365,pickle$pickle$.pairGen0$974(v$2366,v$2367)));
};
pickle$pickle$.tup4Gen0$2368 = function(v$2399,v$2400,v$2401,v$2402){return (pickle$pickle$.convert0$2290(function(v$4393){var v$4394 = v$4393[0];
var v$4395 = v$4394[0];
var v$4396 = v$4394[1];
var v$4397 = v$4393[1];
return [v$4395,v$4396,v$4397[0],v$4397[1]];
},function(v$4398){return [[v$4398[0],v$4398[1]],[v$4398[2],v$4398[3]]];
}))(pickle$pickle$.pairGen0$974(pickle$pickle$.pairGen0$974(v$2399,v$2400),pickle$pickle$.pairGen0$974(v$2401,v$2402)));
};
pickle$pickle$.tup3Gen$2403 = function(v$5033,v$5034,v$5035){return pickle$pickle$.shareGen$869((pickle$pickle$.convert0$2290(function(v$4403){var v$4404 = v$4403[0];
var v$4405 = v$4403[1];
return [v$4404,v$4405[0],v$4405[1]];
},function(v$4406){return [v$4406[0],[v$4406[1],v$4406[2]]];
}))(pickle$pickle$.pairGen0$974(v$5033,pickle$pickle$.pairGen0$974(v$5034,v$5035))));
};
pickle$pickle$.tup4Gen$2407 = function(a$2410){return pickle$pickle$.shareGen$869(pickle$pickle$.tup4Gen0$2368(a$2410[0],a$2410[1],a$2410[2],a$2410[3]));
};
pickle$pickle$.vectorGen$2411 = function(pu$2414){var v$5090;
var e$4410 = null;
v$5090 = (function(a$4411){var n$4412 = a$4411.length;
var fix$5225 = {};
fix$5225.$rl = function(v$4415,v$4416){lab$rl: while (true) {if (v$4415 >= 0) {var t$5226 = SmlPrims.chk_ovf_i32(v$4415 - 1);
var t$5227 = [a$4411[v$4415],v$4416];
var v$4415 = t$5226;
var v$4416 = t$5227;
continue lab$rl;
} else {return v$4416;
};
};
};
var rl$4413 = fix$5225.$rl;
return rl$4413(SmlPrims.chk_ovf_i32(n$4412 - 1),e$4410);
});
var b$4408 = pickle$pickle$.listGen$2100(pu$2414);
return pickle$pickle$.shareGen$869((pickle$pickle$.convert0$2290(function(v$5100){return basis$Vector$$3.fromList$221(v$5100);
},v$5090))(b$4408));
};
pickle$pickle$.real$2416 = pickle$pickle$.shareGen$869((pickle$pickle$.convert0$2290(function(s$5095){var v$5096 = basis$Real$.fromString$488(s$5095);
switch (v$5096[0]) { case 0: {return v$5096[1];
 break; }default: {basis$General$.print$156("Pickle.real.impossible\n");
throw [basis$Initial$.en$Fail$45,"Pickle.real.impossible"];
} };
},function(v$5101){return basis$Real$.toString$144(v$5101);
}))(pickle$pickle$.string$900));
pickle$pickle$.time$2427 = pickle$pickle$.shareGen$869((pickle$pickle$.convert0$2290(function(v$5102){return basis$Time$.fromReal$104(v$5102);
},function(v$5097){var v$5098 = v$5097[0];
var v$5099 = v$5097[1];
return (v$5098 - (-2147483648)) + (v$5099 / 1000000.0);
}))(pickle$pickle$.real$2416));
pickle$pickle$.unit$2428 = [0,[function(v$4434){return true;
},function(v$4435){return function(p$4440){var v$4441 = p$4440[1];
return (v$4441 <= 0)?p$4440:[(23 + ((p$4440[0] * 19) & 4294967295)) & 4294967295,p$4440[1]];
};
},function(v$4443){return function(x$4444){return x$4444;
};
},[5],function(is$4445){return [0,is$4445];
}]];
var cache0$2446 = function(s$2449){var C$2450 = [[0]];
return function(f$2453){return function(a$2456){var v$2463 = C$2450[0];
switch (v$2463[0]) { case 2: {return v$2463[1];
 break; }case 0: {(C$2450[0] = [1],0);
var v$2466 = f$2453(a$2456);
switch (C$2450[0][0]) { case 1: {(C$2450[0] = [2,v$2466],0);
return v$2466;
 break; }default: {basis$General$.print$156("Pickle.cacheNew impossible\n");
throw [basis$Initial$.en$Fail$45,"Pickle.cacheNew impossible"];
} };
 break; }default: {var s$4454 = "recursive cache appearance for " + s$2449;
var s$4455 = "Pickle." + s$4454;
basis$General$.print$156(s$4455 + "\n");
throw [basis$Initial$.en$Fail$45,s$4455];
} };
};
};
};
pickle$pickle$.cache$2475 = function(s$2478){return cache0$2446(s$2478);
};
pickle$pickle$.cache2$2479 = function(s$2482){return cache0$2446(s$2482);
};
pickle$pickle$.registerEq$2483 = function(eq$2486,key$2489,debug_str$2492,vs$2495,pu$2498){var h$2499 = (pickle$Polyhash$.mkTable$66(key$2489,eq$2486))([10,exn$PickleExn$84]);
var fix$5228 = {};
fix$5228.$foldl = function(v$4467,v$4468){lab$foldl: while (true) {if (v$4468 == null) {return v$4467;
} else {var v$4469 = v$4468;
var v$4470 = v$4469[0];
var v$4471 = v$4469[1];
var t$5229;
(pickle$Polyhash$.insert$163(h$2499))([v$4470,v$4467]);
t$5229 = ((v$4467 + 1) & 4294967295);
var t$5230 = t$5229;
var t$5231 = v$4471;
var v$4467 = t$5230;
var v$4468 = t$5231;
continue lab$foldl;
};
};
};
var foldl$4466 = fix$5228.$foldl;
foldl$4466(1,vs$2495);
var v$2508 = basis$Vector$$3.fromList$221(vs$2495);
return [0,[pu$2498[1][0],pu$2498[1][1],function(v$4482){return function(s$4483){var v$4484 = (pickle$Polyhash$.peek$325(h$2499[0],h$2499[1],h$2499[2],h$2499[3],h$2499[4]))(v$4482);
switch (v$4484[0]) { case 0: {var v$4485 = v$4484[1];
return pickle$bitstream$.outcw$389(v$4485,s$4483);
 break; }default: {var s$4486 = pickle$bitstream$.outcw$389(0,s$4483);
return (pu$2498[1][2](v$4482))(s$4486);
} };
};
},[8,pu$2498[1][3]],function(v$4488){var v$4489 = v$4488[0];
var v$4490 = v$4488[1];
var v$4491 = pickle$bitstream$.getcw$401(v$4489);
var v$4492 = v$4491[0];
var v$4493 = v$4491[1];
if (v$4492 == 0) {return pu$2498[1][4]([v$4493,v$4490]);
} else {var t$5232;
var i$4495 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$4492)) - 1);
t$5232 = (basis$Vector$$3.sub$180(v$2508,i$4495));
return [t$5232,[v$4493,v$4490]];
};
}]];
};
pickle$pickle$.register$2551 = function(s$2554,vs$2557,pu$2560){return pickle$pickle$.registerEq$2483(pu$2560[1][0],function(v$2563){return SmlPrims.w32_to_i32_X(((pu$2560[1][1](v$2563))([0,12]))[0]);
},s$2554,vs$2557,pu$2560);
};
pickle$pickle$.hashConsEq$2568 = function(eq$2571,pu$2574){var hash$2575 = [hashCount$228[0],(hashCount$228[0] = ((hashCount$228[0] + 1) & 4294967295),0)][0];
var v$2598 = pickle$eqhashdyn2$.new$55(function(v$2603){return function(d$2606){return ((pu$2574[1][1](v$2603))([hash$2575,d$2606]))[0];
};
},eq$2571);
var v$2599 = v$2598[0];
var v$2600 = v$2598[1];
return [0,[eq$2571,pu$2574[1][1],pu$2574[1][2],pu$2574[1][3],function(is$4509){var v$4510 = pu$2574[1][4](is$4509);
var v$4511 = v$4510[0];
var v$4512 = v$4510[1];
var d$4513;
var hce$4514 = v$4512[1];
var d$4515 = v$2599(v$4511);
var v$4516 = (pickle$Polyhash$.peek$325(hce$4514[0],hce$4514[1],hce$4514[2],hce$4514[3],hce$4514[4]))(d$4515);
switch (v$4516[0]) { case 0: {d$4513 = v$4516[1];
 break; }default: {(pickle$Polyhash$.insert$163(hce$4514))([d$4515,d$4515]);
d$4513 = d$4515;
} };
return [v$2600(d$4513),v$4512];
}]];
};
pickle$pickle$.hashCons$2611 = function(pu$2614){return pickle$pickle$.hashConsEq$2568(pu$2614[1][0],pu$2614);
};
pickle$pickle$.nameGen$2615 = function(s$2618,pu$2621){return [0,[pu$2621[1][0],pu$2621[1][1],pu$2621[1][2],[20,[s$2618,pu$2621[1][3]]],pu$2621[1][4]]];
};
pickle$pickle$.comment$2627 = function(str$2630,pu$2633){return pu$2633;
};
pickle$pickle$.checkUnpickle$2650 = function(f$2653,pu$2656){return pu$2656;
};
pickle$pickle$.debugUnpickle$2674 = function(s$2677,pu$2680){return pu$2680;
};
return 0;
})();
