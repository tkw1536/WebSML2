if ((typeof(pickle$Polyhash$)) == "undefined") {pickle$Polyhash$ = {};
};
(function(){pickle$Polyhash$.mkTable$66 = function(v$82,v$83){return function(v$74){var v$80 = v$74[0];
var v$81 = v$74[1];
var v$78;
var t$985;
var t$984 = basis$Array$$3.array$212;
var t$981;
var nw$825 = SmlPrims.i32_to_w32(v$80);
var fix$982 = {};
fix$982.$f = function(i$827){lab$f: while (true) {if (i$827 >= nw$825) {return i$827;
} else {var t$983 = (i$827 << (1 & 31)) & 4294967295;
var i$827 = t$983;
continue lab$f;
};
};
};
var f$826 = fix$982.$f;
t$981 = (SmlPrims.chk_ovf_i32(f$826(32)));
t$985 = (t$984(t$981,null));
v$78 = [t$985];
return [v$82,[0],v$81,v$83,v$78];
};
};
pickle$Polyhash$.clear$104 = function(v$950,v$116,v$951,v$952,v$115){var a$109 = v$115[0];
var v$910 = SmlPrims.chk_ovf_i32(a$109.length - 1);
var fix$986 = {};
fix$986.$loop = function(i$837){lab$loop: while (true) {if (i$837 > v$910) {return 0;
} else {basis$Array$$3.update$189(a$109,i$837,null);
var t$987 = SmlPrims.chk_ovf_i32(i$837 + 1);
var i$837 = t$987;
continue lab$loop;
};
};
};
var loop$836 = fix$986.$loop;
loop$836(0);
return (v$116[0] = 0,0);
};
var growTable$117 = function(v$953,v$162,v$954,v$955,v$161){var arr$122 = v$161[0];
var sz$123 = arr$122.length;
if (v$162[0] >= sz$123) {var newSz$128 = SmlPrims.chk_ovf_i32(sz$123 + sz$123);
var newArr$129 = basis$Array$$3.array$212(newSz$128,null);
var fix$988 = {};
fix$988.$copy = function(v$133){lab$copy: while (true) {if (v$133 == null) {return 0;
} else {var v$145 = v$133;
var v$146 = v$145[0];
var v$147 = v$146[0];
var v$148 = v$146[1];
var v$149 = v$146[2];
var v$150 = v$145[1];
var indx$142 = SmlPrims.chk_ovf_i32((SmlPrims.i32_to_w32(v$147)) & (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(newSz$128 - 1))));
basis$Array$$3.update$189(newArr$129,indx$142,[[v$147,v$148,v$149],basis$Array$$3.sub$180(newArr$129,indx$142)]);
var t$989 = v$150;
var v$133 = t$989;
continue lab$copy;
};
};
};
var copy$130 = fix$988.$copy;
var fix$990 = {};
fix$990.$bucket = function(n$154){lab$bucket: while (true) {copy$130(basis$Array$$3.sub$180(arr$122,n$154));
var t$991 = SmlPrims.chk_ovf_i32(n$154 + 1);
var n$154 = t$991;
continue lab$bucket;
};
};
var bucket$151 = fix$990.$bucket;
try {bucket$151(0);
} catch(v$992) {(function(v$160){return 0;
})(v$992);
};
return (v$161[0] = newArr$129,0);
} else {return 0;
};
};
pickle$Polyhash$.insert$163 = function(tbl$170){var v$223 = tbl$170[0];
var v$224 = tbl$170[3];
var v$225 = tbl$170[4];
var v$226 = tbl$170[1];
return function(v$174){var v$221 = v$174[0];
var v$222 = v$174[1];
var arr$175 = v$225[0];
var sz$176 = arr$175.length;
var hash$177 = v$223(v$221);
var indx$178 = SmlPrims.chk_ovf_i32((SmlPrims.i32_to_w32(hash$177)) & (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(sz$176 - 1))));
var fix$993 = {};
fix$993.$look = function(v$182){if (v$182 == null) {basis$Array$$3.update$189(arr$175,indx$178,[[hash$177,v$221,v$222],basis$Array$$3.sub$180(arr$175,indx$178)]);
(v$226[0] = (SmlPrims.chk_ovf_i32(v$226[0] + 1)),0);
growTable$117(tbl$170[0],tbl$170[1],tbl$170[2],tbl$170[3],tbl$170[4]);
return null;
} else {var v$210 = v$182;
var v$211 = v$210[0];
var v$212 = v$211[0];
var v$213 = v$211[1];
var v$214 = v$211[2];
var v$215 = v$210[1];
if ((hash$177 == v$212)?(v$224([v$221,v$213])):false) {return [[hash$177,v$221,v$222],v$215];
} else {var v$205 = fix$993.$look(v$215);
return (v$205 == null)?null:[[v$212,v$213,v$214],v$205];
};
};
};
var look$179 = fix$993.$look;
var v$220 = look$179(basis$Array$$3.sub$180(arr$175,indx$178));
if (v$220 == null) {return 0;
} else {return basis$Array$$3.update$189(arr$175,indx$178,v$220);
};
};
};
pickle$Polyhash$.peekInsert$227 = function(tbl$234){var v$277 = tbl$234[0];
var v$278 = tbl$234[3];
var v$279 = tbl$234[4];
var v$280 = tbl$234[1];
return function(v$238){var v$275 = v$238[0];
var v$276 = v$238[1];
var arr$239 = v$279[0];
var sz$240 = arr$239.length;
var hash$241 = v$277(v$275);
var indx$242 = SmlPrims.chk_ovf_i32((SmlPrims.i32_to_w32(hash$241)) & (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(sz$240 - 1))));
var fix$994 = {};
fix$994.$look = function(v$246){lab$look: while (true) {if (v$246 == null) {basis$Array$$3.update$189(arr$239,indx$242,[[hash$241,v$275,v$276],basis$Array$$3.sub$180(arr$239,indx$242)]);
(v$280[0] = (SmlPrims.chk_ovf_i32(v$280[0] + 1)),0);
growTable$117(tbl$234[0],tbl$234[1],tbl$234[2],tbl$234[3],tbl$234[4]);
return [1];
} else {var v$269 = v$246;
var v$270 = v$269[0];
var v$271 = v$270[0];
var v$272 = v$270[1];
var v$273 = v$270[2];
var v$274 = v$269[1];
if ((hash$241 == v$271)?(v$278([v$275,v$272])):false) {return [0,v$273];
} else {var t$995 = v$274;
var v$246 = t$995;
continue lab$look;
};
};
};
};
var look$243 = fix$994.$look;
return look$243(basis$Array$$3.sub$180(arr$239,indx$242));
};
};
pickle$Polyhash$.find$281 = function(v$321,v$956,v$324,v$322,v$323){return function(key$290){var arr$291 = v$323[0];
var sz$292 = arr$291.length;
var hash$293 = v$321(key$290);
var indx$294 = SmlPrims.chk_ovf_i32((SmlPrims.i32_to_w32(hash$293)) & (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(sz$292 - 1))));
var fix$996 = {};
fix$996.$look = function(v$298){lab$look: while (true) {if (v$298 == null) {throw v$324;
} else {var v$315 = v$298;
var v$316 = v$315[0];
var v$317 = v$316[0];
var v$318 = v$316[1];
var v$319 = v$316[2];
var v$320 = v$315[1];
if ((hash$293 == v$317)?(v$322([key$290,v$318])):false) {return v$319;
} else {var t$997 = v$320;
var v$298 = t$997;
continue lab$look;
};
};
};
};
var look$295 = fix$996.$look;
return look$295(basis$Array$$3.sub$180(arr$291,indx$294));
};
};
pickle$Polyhash$.peek$325 = function(v$364,v$957,v$958,v$365,v$366){return function(key$333){var arr$334 = v$366[0];
var sz$335 = arr$334.length;
var hash$336 = v$364(key$333);
var indx$337 = SmlPrims.chk_ovf_i32((SmlPrims.i32_to_w32(hash$336)) & (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(sz$335 - 1))));
var fix$998 = {};
fix$998.$look = function(v$341){lab$look: while (true) {if (v$341 == null) {return [1];
} else {var v$358 = v$341;
var v$359 = v$358[0];
var v$360 = v$359[0];
var v$361 = v$359[1];
var v$362 = v$359[2];
var v$363 = v$358[1];
if ((hash$336 == v$360)?(v$365([key$333,v$361])):false) {return [0,v$362];
} else {var t$999 = v$363;
var v$341 = t$999;
continue lab$look;
};
};
};
};
var look$338 = fix$998.$look;
return look$338(basis$Array$$3.sub$180(arr$334,indx$337));
};
};
pickle$Polyhash$.remove$367 = function(v$424,v$428,v$426,v$425,v$427){return function(key$377){var arr$378 = v$427[0];
var sz$379 = arr$378.length;
var hash$380 = v$424(key$377);
var indx$381 = SmlPrims.chk_ovf_i32((SmlPrims.i32_to_w32(hash$380)) & (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(sz$379 - 1))));
var fix$1000 = {};
fix$1000.$look = function(v$385){if (v$385 == null) {throw v$426;
} else {var v$408 = v$385;
var v$409 = v$408[0];
var v$410 = v$409[0];
var v$411 = v$409[1];
var v$412 = v$409[2];
var v$413 = v$408[1];
if ((hash$380 == v$410)?(v$425([key$377,v$411])):false) {return [v$412,v$413];
} else {var v$401 = fix$1000.$look(v$413);
return [v$401[0],[[v$410,v$411,v$412],v$401[1]]];
};
};
};
var look$382 = fix$1000.$look;
var v$421 = look$382(basis$Array$$3.sub$180(arr$378,indx$381));
var v$422 = v$421[0];
var v$423 = v$421[1];
basis$Array$$3.update$189(arr$378,indx$381,v$423);
(v$428[0] = (SmlPrims.chk_ovf_i32(v$428[0] - 1)),0);
return v$422;
};
};
pickle$Polyhash$.numItems$429 = function(v$959,v$960,v$961,v$962,v$963){return v$960[0];
};
pickle$Polyhash$.listItems$434 = function(v$964,v$488,v$965,v$966,v$487){var arr$439 = v$487[0];
var fix$1001 = {};
fix$1001.$f = function(v$967,v$968,v$457){switch (v$457) { case 0: {return v$968;
 break; }default: {switch (v$967) { case -1: {return v$968;
 break; }default: {var fix$1002 = {};
fix$1002.$g = function(v$476,v$969,v$970){lab$g: while (true) {if (v$476 == null) {return fix$1001.$f(SmlPrims.chk_ovf_i32(v$967 - 1),v$969,v$970);
} else {var v$479 = v$476;
var v$480 = v$479[0];
var v$481 = v$480[1];
var v$482 = v$480[2];
var v$483 = v$479[1];
var t$1003 = v$483;
var t$1004 = [[v$481,v$482],v$969];
var t$1005 = SmlPrims.chk_ovf_i32(v$970 - 1);
var v$476 = t$1003;
var v$969 = t$1004;
var v$970 = t$1005;
continue lab$g;
};
};
};
var g$461 = fix$1002.$g;
return g$461(basis$Array$$3.sub$180(arr$439,v$967),v$968,v$457);
} };
} };
};
var f$442 = fix$1001.$f;
return f$442(SmlPrims.chk_ovf_i32(arr$439.length - 1),null,v$488[0]);
};
pickle$Polyhash$.apply$489 = function(f$492,v$495){var v$526 = v$495[4];
var fix$1006 = {};
fix$1006.$appF = function(v$499){lab$appF: while (true) {if (v$499 == null) {return 0;
} else {var v$509 = v$499;
var v$510 = v$509[0];
var v$511 = v$510[1];
var v$512 = v$510[2];
var v$513 = v$509[1];
f$492([v$511,v$512]);
var t$1007 = v$513;
var v$499 = t$1007;
continue lab$appF;
};
};
};
var appF$496 = fix$1006.$appF;
var arr$514 = v$526[0];
var sz$515 = arr$514.length;
var fix$1008 = {};
fix$1008.$appToTbl = function(i$519){lab$appToTbl: while (true) {if (i$519 < sz$515) {appF$496(basis$Array$$3.sub$180(arr$514,i$519));
var t$1009 = SmlPrims.chk_ovf_i32(i$519 + 1);
var i$519 = t$1009;
continue lab$appToTbl;
} else {return 0;
};
};
};
var appToTbl$516 = fix$1008.$appToTbl;
return appToTbl$516(0);
};
pickle$Polyhash$.map$527 = function(f$530,v$537){var v$576 = v$537[0];
var v$577 = v$537[3];
var v$578 = v$537[4];
var v$579 = v$537[1];
var v$580 = v$537[2];
var fix$1010 = {};
fix$1010.$mapF = function(v$541){if (v$541 == null) {return null;
} else {var v$550 = v$541;
var v$551 = v$550[0];
var v$552 = v$551[0];
var v$553 = v$551[1];
var v$554 = v$551[2];
var v$555 = v$550[1];
return [[v$552,v$553,f$530([v$553,v$554])],fix$1010.$mapF(v$555)];
};
};
var mapF$538 = fix$1010.$mapF;
var arr$556 = v$578[0];
var sz$557 = arr$556.length;
var newArr$558 = basis$Array$$3.array$212(sz$557,null);
var fix$1011 = {};
fix$1011.$mapTbl = function(i$562){lab$mapTbl: while (true) {if (i$562 < sz$557) {basis$Array$$3.update$189(newArr$558,i$562,mapF$538(basis$Array$$3.sub$180(arr$556,i$562)));
var t$1012 = SmlPrims.chk_ovf_i32(i$562 + 1);
var i$562 = t$1012;
continue lab$mapTbl;
} else {return 0;
};
};
};
var mapTbl$559 = fix$1011.$mapTbl;
mapTbl$559(0);
var v$573 = [newArr$558];
return [v$576,[v$579[0]],v$580,v$577,v$573];
};
pickle$Polyhash$.filter$581 = function(pred$584,v$589){var v$624 = v$589[4];
var fix$1013 = {};
fix$1013.$filterP = function(v$593){lab$filterP: while (true) {if (v$593 == null) {return null;
} else {var v$606 = v$593;
var v$607 = v$606[0];
var v$608 = v$607[0];
var v$609 = v$607[1];
var v$610 = v$607[2];
var v$611 = v$606[1];
if (pred$584([v$609,v$610])) {return [[v$608,v$609,v$610],fix$1013.$filterP(v$611)];
} else {var t$1014 = v$611;
var v$593 = t$1014;
continue lab$filterP;
};
};
};
};
var filterP$590 = fix$1013.$filterP;
var arr$612 = v$624[0];
var sz$613 = arr$612.length;
var fix$1015 = {};
fix$1015.$filterTbl = function(i$617){lab$filterTbl: while (true) {if (i$617 < sz$613) {basis$Array$$3.update$189(arr$612,i$617,filterP$590(basis$Array$$3.sub$180(arr$612,i$617)));
var t$1016 = SmlPrims.chk_ovf_i32(i$617 + 1);
var i$617 = t$1016;
continue lab$filterTbl;
} else {return 0;
};
};
};
var filterTbl$614 = fix$1015.$filterTbl;
return filterTbl$614(0);
};
pickle$Polyhash$.transform$627 = function(f$630,v$637){var v$676 = v$637[0];
var v$677 = v$637[3];
var v$678 = v$637[4];
var v$679 = v$637[1];
var v$680 = v$637[2];
var fix$1017 = {};
fix$1017.$mapF = function(v$641){if (v$641 == null) {return null;
} else {var v$650 = v$641;
var v$651 = v$650[0];
var v$652 = v$651[0];
var v$653 = v$651[1];
var v$654 = v$651[2];
var v$655 = v$650[1];
return [[v$652,v$653,f$630(v$654)],fix$1017.$mapF(v$655)];
};
};
var mapF$638 = fix$1017.$mapF;
var arr$656 = v$678[0];
var sz$657 = arr$656.length;
var newArr$658 = basis$Array$$3.array$212(sz$657,null);
var fix$1018 = {};
fix$1018.$mapTbl = function(i$662){lab$mapTbl: while (true) {if (i$662 < sz$657) {basis$Array$$3.update$189(newArr$658,i$662,mapF$638(basis$Array$$3.sub$180(arr$656,i$662)));
var t$1019 = SmlPrims.chk_ovf_i32(i$662 + 1);
var i$662 = t$1019;
continue lab$mapTbl;
} else {return 0;
};
};
};
var mapTbl$659 = fix$1018.$mapTbl;
mapTbl$659(0);
var v$673 = [newArr$658];
return [v$676,[v$679[0]],v$680,v$677,v$673];
};
pickle$Polyhash$.copy$681 = function(v$707,v$710,v$711,v$708,v$709){var arr$689 = v$709[0];
var sz$690 = arr$689.length;
var newArr$691 = basis$Array$$3.array$212(sz$690,null);
var fix$1020 = {};
fix$1020.$mapTbl = function(i$695){lab$mapTbl: while (true) {basis$Array$$3.update$189(newArr$691,i$695,basis$Array$$3.sub$180(arr$689,i$695));
var t$1021 = SmlPrims.chk_ovf_i32(i$695 + 1);
var i$695 = t$1021;
continue lab$mapTbl;
};
};
var mapTbl$692 = fix$1020.$mapTbl;
try {mapTbl$692(0);
} catch(v$1022) {(function(v$706){return 0;
})(v$1022);
};
var v$702 = [newArr$691];
return [v$707,[v$710[0]],v$711,v$708,v$702];
};
pickle$Polyhash$.bucketSizes$712 = function(v$971,v$972,v$973,v$974,v$749){var arr$716 = v$749[0];
var fix$1023 = {};
fix$1023.$len = function(v$730,v$975){lab$len: while (true) {if (v$730 == null) {return v$975;
} else {var v$732 = v$730;
var v$733 = v$732[1];
var t$1024 = v$733;
var t$1025 = SmlPrims.chk_ovf_i32(v$975 + 1);
var v$730 = t$1024;
var v$975 = t$1025;
continue lab$len;
};
};
};
var len$719 = fix$1023.$len;
var fix$1026 = {};
fix$1026.$f = function(v$746,v$976){lab$f: while (true) {switch (v$746) { case -1: {return v$976;
 break; }default: {var t$1027 = SmlPrims.chk_ovf_i32(v$746 - 1);
var t$1028 = [len$719(basis$Array$$3.sub$180(arr$716,v$746),0),v$976];
var v$746 = t$1027;
var v$976 = t$1028;
continue lab$f;
} };
};
};
var f$735 = fix$1026.$f;
return f$735(SmlPrims.chk_ovf_i32(arr$716.length - 1),null);
};
pickle$Polyhash$.peekSameHash$750 = function(v$786,v$977,v$978,v$979,v$788){return function(key$758){var arr$759 = v$788[0];
var sz$760 = arr$759.length;
var hash$761 = v$786(key$758);
var indx$762 = SmlPrims.chk_ovf_i32((SmlPrims.i32_to_w32(hash$761)) & (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(sz$760 - 1))));
var fix$1029 = {};
fix$1029.$count = function(v$775,v$980){lab$count: while (true) {if (v$775 == null) {return v$980;
} else {var v$781 = v$775;
var v$782 = v$781[0];
var v$783 = v$782[0];
var v$784 = v$781[1];
if (hash$761 == v$783) {var t$1030 = v$784;
var t$1031 = SmlPrims.chk_ovf_i32(v$980 + 1);
var v$775 = t$1030;
var v$980 = t$1031;
continue lab$count;
} else {var t$1032 = v$784;
var t$1033 = v$980;
var v$775 = t$1032;
var v$980 = t$1033;
continue lab$count;
};
};
};
};
var count$763 = fix$1029.$count;
return [count$763(basis$Array$$3.sub$180(arr$759,indx$762),0),hash$761];
};
};
return 0;
})();
