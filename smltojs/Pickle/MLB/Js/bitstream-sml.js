if ((typeof(pickle$bitstream$)) == "undefined") {pickle$bitstream$ = {};
};
(function(){pickle$bitstream$.isEmpty$85 = function(v$836,v$837){return v$837 >= ((8 * (SmlPrims.i32_to_w32(v$836.length))) & 4294967295);
};
pickle$bitstream$.outwN$143 = function(n$146,v$150){var v$179 = v$150[0];
var v$180 = v$150[1];
var e$151 = v$179 & (255 & ((((n$146 >= 32)?0:((1 << (n$146 & 31)) & 4294967295)) - 1) & 4294967295));
var s$176;
var v$570 = v$180[1];
var v$571 = v$180[0];
if (((v$570 + n$146) & 4294967295) < (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(8 * v$571.length)))) {s$176 = v$180;
} else {var t$883;
var sz$574 = v$571.length;
var newbuf$575 = basis$ByteTable$$22.array$3611(SmlPrims.chk_ovf_i32(sz$574 * 2),0);
basis$ByteTable$$22.copy$3944(0,newbuf$575,v$571);
t$883 = newbuf$575;
s$176 = [t$883,v$570];
};
var v$177 = s$176[1];
var v$178 = s$176[0];
var v$173;
var pos_byte$577 = v$177 >>> 3;
v$173 = [(v$177 - ((pos_byte$577 << (3 & 31)) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(pos_byte$577)];
var v$174 = v$173[0];
var v$175 = v$173[1];
if (v$174 == 0) {basis$ByteTable$$22.update$3635(v$178,v$175,e$151);
} else {var w$163 = basis$ByteTable$$22.sub$3568(v$178,v$175);
var e$$164 = (v$174 >= 8)?0:(255 & ((e$151 << (v$174 & 31)) & 4294967295));
var w$$165 = w$163 | e$$164;
basis$ByteTable$$22.update$3635(v$178,v$175,w$$165);
if (n$146 <= ((8 - v$174) & 4294967295)) {0;
} else {var e$$$170;
var v$769 = (8 - v$174) & 4294967295;
e$$$170 = ((v$769 >= 8)?0:(e$151 >>> v$769));
basis$ByteTable$$22.update$3635(v$178,SmlPrims.chk_ovf_i32(v$175 + 1),e$$$170);
0;
};
};
return [v$178,(v$177 + n$146) & 4294967295];
};
pickle$bitstream$.getwN$181 = function(n$184,v$188){var v$215 = v$188[1];
var v$216 = v$188[0];
if (((v$215 + n$184) & 4294967295) > (SmlPrims.i32_to_w32(SmlPrims.chk_ovf_i32(8 * v$216.length)))) {throw [basis$Initial$.en$Fail$45,"getwN: empty in-stream"];
} else {var v$212;
var pos_byte$593 = v$215 >>> 3;
v$212 = [(v$215 - ((pos_byte$593 << (3 & 31)) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(pos_byte$593)];
var v$213 = v$212[0];
var v$214 = v$212[1];
var t$891;
var t$890;
var t$889;
var t$884;
if (v$213 == 0) {t$884 = (basis$ByteTable$$16.sub$2450(v$216,v$214));
} else {var w1$201 = basis$ByteTable$$16.sub$2450(v$216,v$214);
var e1$202 = (v$213 >= 8)?0:(w1$201 >>> v$213);
if (n$184 <= ((8 - v$213) & 4294967295)) {t$884 = e1$202;
} else {var w2$207 = basis$ByteTable$$16.sub$2450(v$216,SmlPrims.chk_ovf_i32(v$214 + 1));
var t$888;
var t$887 = e1$202;
var t$886;
var t$885;
var v$777 = (8 - v$213) & 4294967295;
t$885 = ((v$777 >= 8)?0:(255 & ((w2$207 << (v$777 & 31)) & 4294967295)));
t$886 = t$885;
t$888 = (t$887 | t$886);
t$884 = t$888;
};
};
t$889 = t$884;
t$890 = (t$889 & (255 & ((((n$184 >= 32)?0:((1 << (n$184 & 31)) & 4294967295)) - 1) & 4294967295)));
t$891 = t$890;
return [t$891,[v$216,(v$215 + n$184) & 4294967295]];
};
};
pickle$bitstream$.outw1$217 = function(v$843){return pickle$bitstream$.outwN$143(1,v$843);
};
pickle$bitstream$.getw1$218 = function(v$845){return pickle$bitstream$.getwN$181(1,v$845);
};
pickle$bitstream$.outw2$219 = function(v$847){return pickle$bitstream$.outwN$143(2,v$847);
};
pickle$bitstream$.getw2$220 = function(v$849){return pickle$bitstream$.getwN$181(2,v$849);
};
pickle$bitstream$.outb$221 = function(v$838,v$839){var v$854 = [v$838?1:0,v$839];
return pickle$bitstream$.outwN$143(1,v$854);
};
pickle$bitstream$.getb$226 = function(x$625){var v$820 = pickle$bitstream$.getwN$181(1,x$625);
var v$821 = v$820[0];
var t$892;
switch (v$821) { case 0: {t$892 = false;
 break; }default: {t$892 = true;
} };
return [t$892,v$820[1]];
};
pickle$bitstream$.outw8$231 = function(v$851){return pickle$bitstream$.outwN$143(8,v$851);
};
pickle$bitstream$.getw8$232 = function(v$853){return pickle$bitstream$.getwN$181(8,v$853);
};
pickle$bitstream$.outc$233 = function(v$840,v$841){var v$856 = [v$840,v$841];
return pickle$bitstream$.outwN$143(8,v$856);
};
pickle$bitstream$.getc$234 = function(x$642){var v$827 = pickle$bitstream$.getwN$181(8,x$642);
return [v$827[0],v$827[1]];
};
pickle$bitstream$.outw$248 = function(v$257,v$258){var s$655;
var v$858 = [255 & (v$257 >>> 0),v$258];
s$655 = (pickle$bitstream$.outwN$143(8,v$858));
var s$656;
var v$859 = [255 & (v$257 >>> 8),s$655];
s$656 = (pickle$bitstream$.outwN$143(8,v$859));
var s$657;
var v$860 = [255 & (v$257 >>> 16),s$656];
s$657 = (pickle$bitstream$.outwN$143(8,v$860));
var v$861 = [255 & (v$257 >>> 24),s$657];
return pickle$bitstream$.outwN$143(8,v$861);
};
pickle$bitstream$.outw32$259 = function(v$268,v$269){var s$669;
var v$862 = [255 & (v$268 >>> 0),v$269];
s$669 = (pickle$bitstream$.outwN$143(8,v$862));
var s$670;
var v$863 = [255 & (v$268 >>> 8),s$669];
s$670 = (pickle$bitstream$.outwN$143(8,v$863));
var s$671;
var v$864 = [255 & (v$268 >>> 16),s$670];
s$671 = (pickle$bitstream$.outwN$143(8,v$864));
var v$865 = [255 & (v$268 >>> 24),s$671];
return pickle$bitstream$.outwN$143(8,v$865);
};
var getGen$270 = function(s$jj$273,s$f$276,fromWord8$279,s$282){var v$309 = pickle$bitstream$.getwN$181(8,s$282);
var v$310 = v$309[0];
var v$311 = v$309[1];
var v$306 = pickle$bitstream$.getwN$181(8,v$311);
var v$307 = v$306[0];
var v$308 = v$306[1];
var v$303 = pickle$bitstream$.getwN$181(8,v$308);
var v$304 = v$303[0];
var v$305 = v$303[1];
var v$300 = pickle$bitstream$.getwN$181(8,v$305);
var v$301 = v$300[0];
var v$302 = v$300[1];
var w0$295 = fromWord8$279(v$310);
var w1$296 = fromWord8$279(v$307);
var w2$297 = fromWord8$279(v$304);
var w3$298 = fromWord8$279(v$301);
return [s$f$276([s$f$276([s$f$276([w0$295,s$jj$273([w1$296,8])]),s$jj$273([w2$297,16])]),s$jj$273([w3$298,24])]),v$302];
};
pickle$bitstream$.getw$312 = function(s$315){return getGen$270(function(v$676){var v$677 = v$676[0];
var v$678 = v$676[1];
return (v$678 >= 32)?0:((v$677 << (v$678 & 31)) & 4294967295);
},function(v$679){return (v$679[0] + v$679[1]) & 4294967295;
},function(w$680){return SmlPrims.i32_to_w32(w$680);
},s$315);
};
pickle$bitstream$.getw32$316 = function(s$319){return getGen$270(function(v$681){var v$682 = v$681[0];
var v$683 = v$681[1];
return (v$683 >= 32)?0:((v$682 << (v$683 & 31)) & 4294967295);
},function(v$684){return (v$684[0] + v$684[1]) & 4294967295;
},function(w$685){return SmlPrims.i32_to_w32(w$685);
},s$319);
};
var fix$893 = {};
fix$893.$outwN$ = function(n$323,v$327){lab$outwN$: while (true) {var v$342 = v$327[0];
var v$343 = v$327[1];
if (n$323 > 31) {throw [basis$Initial$.en$Fail$45,"outwN'"];
} else {if (n$323 == 0) {return v$343;
} else {if (n$323 <= 7) {return pickle$bitstream$.outwN$143(n$323,[255 & v$342,v$343]);
} else {var s$340;
var v$870 = [255 & v$342,v$343];
s$340 = (pickle$bitstream$.outwN$143(8,v$870));
var w2$341 = v$342 >>> 8;
var t$894 = (n$323 - 8) & 4294967295;
var t$895 = [w2$341,s$340];
var n$323 = t$894;
var v$327 = t$895;
continue lab$outwN$;
};
};
};
};
};
pickle$bitstream$.outwN$$320 = fix$893.$outwN$;
pickle$bitstream$.getwN$$344 = function(n$347,s$350){if (n$347 > 31) {throw [basis$Initial$.en$Fail$45,"getwN'"];
} else {var fix$896 = {};
fix$896.$loop = function(n$358,off$361,a$364,s$367){lab$loop: while (true) {if (n$358 == 0) {return [a$364,s$367];
} else {if (n$358 <= 7) {var v$379 = pickle$bitstream$.getwN$181(n$358,s$367);
var v$380 = v$379[0];
var v$381 = v$379[1];
var t$898;
var t$897;
var v$804 = SmlPrims.i32_to_w32(v$380);
t$897 = ((off$361 >= 32)?0:((v$804 << (off$361 & 31)) & 4294967295));
t$898 = (t$897 | a$364);
return [t$898,v$381];
} else {var v$386 = pickle$bitstream$.getwN$181(8,s$367);
var v$387 = v$386[0];
var v$388 = v$386[1];
var a$385;
var t$899;
var v$808 = SmlPrims.i32_to_w32(v$387);
t$899 = ((off$361 >= 32)?0:((v$808 << (off$361 & 31)) & 4294967295));
a$385 = (t$899 | a$364);
var t$900 = (n$358 - 8) & 4294967295;
var t$901 = (off$361 + 8) & 4294967295;
var t$902 = a$385;
var t$903 = v$388;
var n$358 = t$900;
var off$361 = t$901;
var a$364 = t$902;
var s$367 = t$903;
continue lab$loop;
};
};
};
};
var loop$355 = fix$896.$loop;
return loop$355(n$347,0,0,s$350);
};
};
pickle$bitstream$.outcw$389 = function(v$399,v$400){if (v$399 <= 254) {var v$872 = [255 & v$399,v$400];
return pickle$bitstream$.outwN$143(8,v$872);
} else {var s$398;
var v$873 = [255,v$400];
s$398 = (pickle$bitstream$.outwN$143(8,v$873));
return pickle$bitstream$.outw$248(v$399,s$398);
};
};
pickle$bitstream$.getcw$401 = function(s$404){var v$412 = pickle$bitstream$.getwN$181(8,s$404);
var v$413 = v$412[0];
var v$414 = v$412[1];
if (v$413 == 255) {return getGen$270(function(v$703){var v$704 = v$703[0];
var v$705 = v$703[1];
return (v$705 >= 32)?0:((v$704 << (v$705 & 31)) & 4294967295);
},function(v$706){return (v$706[0] + v$706[1]) & 4294967295;
},function(w$707){return SmlPrims.i32_to_w32(w$707);
},v$414);
} else {return [SmlPrims.i32_to_w32(v$413),v$414];
};
};
pickle$bitstream$.outcw2$415 = function(v$427,v$428){if (v$427 <= 65279) {var w1$424 = 255 & (SmlPrims.div_w32(v$427,256,CompilerInitial.exn$Div$40));
var w2$425 = 255 & (SmlPrims.mod_w32(v$427,256,CompilerInitial.exn$Div$40));
var v$875;
var t$905 = w2$425;
var t$904;
var v$876 = [w1$424,v$428];
t$904 = (pickle$bitstream$.outwN$143(8,v$876));
v$875 = [t$905,t$904];
return pickle$bitstream$.outwN$143(8,v$875);
} else {var s$426;
var v$877 = [255,v$428];
s$426 = (pickle$bitstream$.outwN$143(8,v$877));
return pickle$bitstream$.outw$248(v$427,s$426);
};
};
pickle$bitstream$.getcw2$429 = function(s$432){var v$448 = pickle$bitstream$.getwN$181(8,s$432);
var v$449 = v$448[0];
var v$450 = v$448[1];
if (v$449 == 255) {return getGen$270(function(v$712){var v$713 = v$712[0];
var v$714 = v$712[1];
return (v$714 >= 32)?0:((v$713 << (v$714 & 31)) & 4294967295);
},function(v$715){return (v$715[0] + v$715[1]) & 4294967295;
},function(w$716){return SmlPrims.i32_to_w32(w$716);
},v$450);
} else {var v$445 = pickle$bitstream$.getwN$181(8,v$450);
var v$446 = v$445[0];
var v$447 = v$445[1];
return [((((SmlPrims.i32_to_w32(v$449)) * 256) & 4294967295) + (SmlPrims.i32_to_w32(v$446))) & 4294967295,v$447];
};
};
pickle$bitstream$.outcw32$451 = function(v$461,v$462){if (v$461 <= 254) {var v$880 = [255 & v$461,v$462];
return pickle$bitstream$.outwN$143(8,v$880);
} else {var s$460;
var v$881 = [255,v$462];
s$460 = (pickle$bitstream$.outwN$143(8,v$881));
return pickle$bitstream$.outw32$259(v$461,s$460);
};
};
pickle$bitstream$.getcw32$463 = function(s$466){var v$474 = pickle$bitstream$.getwN$181(8,s$466);
var v$475 = v$474[0];
var v$476 = v$474[1];
if (v$475 == 255) {return getGen$270(function(v$721){var v$722 = v$721[0];
var v$723 = v$721[1];
return (v$723 >= 32)?0:((v$722 << (v$723 & 31)) & 4294967295);
},function(v$724){return (v$724[0] + v$724[1]) & 4294967295;
},function(w$725){return SmlPrims.i32_to_w32(w$725);
},v$476);
} else {return [SmlPrims.i32_to_w32(v$475),v$476];
};
};
pickle$bitstream$.toString$486 = function(v$741,v$740){var pos_byte$742 = SmlPrims.chk_ovf_i32(v$740 >>> 3);
var slice$746 = basis$ByteSlice$$12.slice$3439(v$741,0,[0,SmlPrims.chk_ovf_i32(pos_byte$742 + 1)]);
var v$748 = slice$746[0];
var v$749 = slice$746[1];
var v$750 = slice$746[2];
var newvec$751 = Array(v$750);
var fix$906 = {};
fix$906.$copy = function(j$753){lab$copy: while (true) {if (j$753 < v$750) {(newvec$751[j$753] = v$748[SmlPrims.chk_ovf_i32(v$749 + j$753)],0);
var t$907 = SmlPrims.chk_ovf_i32(j$753 + 1);
var j$753 = t$907;
continue lab$copy;
} else {return 0;
};
};
};
var copy$752 = fix$906.$copy;
copy$752(0);
return SmlPrims.charArrayToString(newvec$751);
};
pickle$bitstream$.openOut$490 = function(v$492){return [basis$ByteTable$$22.array$3611(1024,0),0];
};
pickle$bitstream$.openIn$501 = function(s$504){return [s$504,0];
};
return 0;
})();
