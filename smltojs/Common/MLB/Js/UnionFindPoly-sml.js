if ((typeof(tools$UnionFindPoly$)) == "undefined") {tools$UnionFindPoly$ = {};
};
(function(){tools$UnionFindPoly$.eq_ElementNode$259 = function(v$263,v$260){var v$261 = v$260[0];
var v$262 = v$260[1];
switch (v$261[0]) { case 0: {switch (v$262[0]) { case 0: {return v$261[1] == v$262[1];
 break; }default: {return false;
} };
 break; }case 1: {switch (v$262[0]) { case 1: {var v$267 = v$261[1];
var v$268 = v$262[1];
return (v$263([v$267[0],v$268[0]]))?(v$267[1] == v$268[1]):false;
 break; }default: {return false;
} };
 break; } };
};
var fix$395 = {};
fix$395.$find = function(e$60){lab$find: while (true) {var v$65 = e$60[0];
switch (v$65[0]) { case 0: {var v$76 = v$65[1];
var v$71 = v$76[0];
switch (v$71[0]) { case 0: {var v$75 = v$71[1];
(e$60[0] = [0,v$75],0);
var t$396 = v$75;
var e$60 = t$396;
continue lab$find;
 break; }default: {return v$76;
} };
 break; }default: {return e$60;
} };
};
};
tools$UnionFindPoly$.find$57 = fix$395.$find;
tools$UnionFindPoly$.find_info$77 = function(e$80){var e$81 = tools$UnionFindPoly$.find$57(e$80);
var v$86 = e$81[0];
switch (v$86[0]) { case 1: {return v$86[1][0];
 break; }default: {basis$General$.print$156("UnionFindPoly.find_info.impossible");
throw [basis$Initial$.en$Fail$45,"UnionFindPoly.find_info.impossible"];
} };
};
tools$UnionFindPoly$.find_rep_and_info$90 = function(e$93){var e$94 = tools$UnionFindPoly$.find$57(e$93);
var v$99 = e$94[0];
switch (v$99[0]) { case 1: {return [e$94,v$99[1][0]];
 break; }default: {basis$General$.print$156("UnionFindPoly.find_rep_and_info.impossible");
throw [basis$Initial$.en$Fail$45,"UnionFindPoly.find_rep_and_info.impossible"];
} };
};
tools$UnionFindPoly$.set_info$103 = function(e$106,i$109){var e$110 = tools$UnionFindPoly$.find$57(e$106);
var v$115 = e$110[0];
switch (v$115[0]) { case 1: {return (e$110[0] = [1,[i$109,v$115[1][1]]],0);
 break; }default: {basis$General$.print$156("UnionFindPoly.set_info.impossible");
throw [basis$Initial$.en$Fail$45,"UnionFindPoly.set_info.impossible"];
} };
};
tools$UnionFindPoly$.eq_Elements$119 = function(v$124,v$125){return (tools$UnionFindPoly$.find$57(v$124)) == (tools$UnionFindPoly$.find$57(v$125));
};
tools$UnionFindPoly$.mkElement$126 = function(info$129){return [[1,[info$129,[0]]]];
};
tools$UnionFindPoly$.union$130 = function(info_combine$133,v$137){var v$182 = v$137[0];
var v$183 = v$137[1];
var e$138 = tools$UnionFindPoly$.find$57(v$182);
var e$$139 = tools$UnionFindPoly$.find$57(v$183);
var v$364 = e$138[0];
var v$365 = e$$139[0];
switch (v$364[0]) { case 1: {switch (v$365[0]) { case 1: {var v$175 = v$364[1];
var v$176 = v$175[0];
var v$177 = v$175[1];
var v$178 = v$365[1];
var v$179 = v$178[0];
var v$180 = v$178[1];
if (v$177[0] < v$180[0]) {(e$$139[0] = [1,[info_combine$133([v$176,v$179]),v$180]],0);
(e$138[0] = [0,e$$139],0);
return e$$139;
} else {if (v$180[0] < v$177[0]) {(e$138[0] = [1,[info_combine$133([v$176,v$179]),v$177]],0);
(e$$139[0] = [0,e$138],0);
return e$138;
} else {(v$180[0] = (SmlPrims.chk_ovf_i32(v$180[0] + 1)),0);
(e$$139[0] = [1,[info_combine$133([v$176,v$179]),v$180]],0);
(e$138[0] = [0,e$$139],0);
return e$$139;
};
};
 break; }default: {basis$General$.print$156("UnionFindPoly.union.impossible");
throw [basis$Initial$.en$Fail$45,"UnionFindPoly.union.impossible"];
} };
 break; }default: {basis$General$.print$156("UnionFindPoly.union.impossible");
throw [basis$Initial$.en$Fail$45,"UnionFindPoly.union.impossible"];
} };
};
var pu_intref$184 = pickle$pickle$.refOneGen$1273(pickle$pickle$.int$720);
tools$UnionFindPoly$.pu$185 = function(dummy$188,pu_a$191){var dummy$192 = [1,[dummy$188,[0]]];
var pu_Element$193 = (pickle$pickle$.cache$2475("Element"))(function(pu$196){var pu$197 = pickle$pickle$.refEqGen$1048(function(v$318){var v$319 = v$318[0];
var v$320 = v$318[1];
return (tools$UnionFindPoly$.find$57(v$319)) == (tools$UnionFindPoly$.find$57(v$320));
},dummy$192,pu$196);
return pickle$pickle$.convert$2333([function(a$200){return a$200;
},function(a$203){return tools$UnionFindPoly$.find$57(a$203);
}],pu$197);
});
var pu$232 = pickle$pickle$.dataGen$1479(["UnionFindPoly.ElementNode",function(v$333){switch (v$333[0]) { case 1: {return 0;
 break; }default: {return 1;
} };
},[function(pu$334){return pickle$pickle$.con1$2005(function(v$335){return [1,v$335];
},function(v$336){switch (v$336[0]) { case 1: {return v$336[1];
 break; }default: {basis$General$.print$156("UnionFindPoly.pu.fun_EQR");
throw [basis$Initial$.en$Fail$45,"UnionFindPoly.pu.fun_EQR"];
} };
},pickle$pickle$.pairGen0$974(pu_a$191,pu_intref$184));
},[function(pu$340){return pickle$pickle$.con1$2005(function(v$341){return [0,v$341];
},function(v$342){basis$General$.print$156("UnionFindPoly.pu.fun_LINK");
throw [basis$Initial$.en$Fail$45,"UnionFindPoly.pu.fun_LINK"];
},pu_Element$193(pu$340));
},null]]]);
return pu_Element$193(pu$232);
};
return 0;
})();
