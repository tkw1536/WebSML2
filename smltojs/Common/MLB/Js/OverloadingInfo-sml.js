if ((typeof(basics$OverloadingInfo$)) == "undefined") {basics$OverloadingInfo$ = {};
};
(function(){var tag_values$61 = tools$Flags$$6.is_on0$5026("tag_values");
basics$OverloadingInfo$.resolvedIntDefault$62 = function(v$64){return (tag_values$61(0))?[9]:[8];
};
basics$OverloadingInfo$.resolvedWordDefault$69 = function(v$71){return (tag_values$61(0))?[4]:[3];
};
basics$OverloadingInfo$.string$76 = function(v$79){switch (v$79[0]) { case 0: {return "UNRESOLVED_IDENT";
 break; }case 1: {return "UNRESOLVED_DOTDOTDOT";
 break; }case 9: {return "RESOLVED_INT31";
 break; }case 8: {return "RESOLVED_INT32";
 break; }case 7: {return "RESOLVED_INTINF";
 break; }case 6: {return "RESOLVED_REAL";
 break; }case 5: {return "RESOLVED_STRING";
 break; }case 10: {return "RESOLVED_CHAR";
 break; }case 2: {return "RESOLVED_WORD8";
 break; }case 4: {return "RESOLVED_WORD31";
 break; }default: {return "RESOLVED_WORD32";
} };
};
basics$OverloadingInfo$.layout$108 = function(x$139){var v$145;
switch (x$139[0]) { case 0: {v$145 = "UNRESOLVED_IDENT";
 break; }case 1: {v$145 = "UNRESOLVED_DOTDOTDOT";
 break; }case 9: {v$145 = "RESOLVED_INT31";
 break; }case 8: {v$145 = "RESOLVED_INT32";
 break; }case 7: {v$145 = "RESOLVED_INTINF";
 break; }case 6: {v$145 = "RESOLVED_REAL";
 break; }case 5: {v$145 = "RESOLVED_STRING";
 break; }case 10: {v$145 = "RESOLVED_CHAR";
 break; }case 2: {v$145 = "RESOLVED_WORD8";
 break; }case 4: {v$145 = "RESOLVED_WORD31";
 break; }default: {v$145 = "RESOLVED_WORD32";
} };
return [1,v$145];
};
return 0;
})();
