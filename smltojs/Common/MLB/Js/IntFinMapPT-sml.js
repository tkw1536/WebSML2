if ((typeof(tools$IntFinMapPT$)) == "undefined") {tools$IntFinMapPT$ = {};
};
(function(){var fix$1282 = {};
fix$1282.$eq_map = function(v$870,v$867){lab$eq_map: while (true) {var v$868 = v$867[0];
var v$869 = v$867[1];
switch (v$868[0]) { case 0: {switch (v$869[0]) { case 0: {var v$871 = v$868[1];
var v$872 = v$869[1];
if (v$871[0] == v$872[0]) {return v$870([v$871[1],v$872[1]]);
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 1: {switch (v$869[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$869[0]) { case 2: {var v$875 = v$868[1];
var v$876 = v$869[1];
if (v$875[0] == v$876[0]) {if (v$875[1] == v$876[1]) {if (fix$1282.$eq_map(v$870,[v$875[2],v$876[2]])) {var t$1283 = v$870;
var t$1284 = [v$875[3],v$876[3]];
var v$870 = t$1283;
var v$867 = t$1284;
continue lab$eq_map;
} else {return false;
};
} else {return false;
};
} else {return false;
};
 break; }default: {return false;
} };
 break; } };
};
};
tools$IntFinMapPT$.eq_map$866 = fix$1282.$eq_map;
tools$IntFinMapPT$.empty$127 = function(v$1281){return [1];
};
tools$IntFinMapPT$.singleton$139 = function(v$144,v$145){return [0,[SmlPrims.i32_to_w32(v$144),v$145]];
};
tools$IntFinMapPT$.isEmpty$146 = function(v$149){switch (v$149[0]) { case 1: {return true;
 break; }default: {return false;
} };
};
tools$IntFinMapPT$.lookup$154 = function(t$157,k$160){var w$161 = SmlPrims.i32_to_w32(k$160);
var fix$1285 = {};
fix$1285.$look = function(v$165){lab$look: while (true) {switch (v$165[0]) { case 1: {return [1];
 break; }case 0: {var v$183 = v$165[1];
var v$184 = v$183[0];
var v$185 = v$183[1];
return (v$184 == w$161)?[0,v$185]:[1];
 break; }default: {var v$190 = v$165[1];
var v$191 = v$190[0];
var v$193 = v$190[2];
var v$194 = v$190[3];
if (w$161 <= v$191) {var t$1286 = v$193;
var v$165 = t$1286;
continue lab$look;
} else {var t$1287 = v$194;
var v$165 = t$1287;
continue lab$look;
};
} };
};
};
var look$162 = fix$1285.$look;
return look$162(t$157);
};
var join$195 = function(v$208,v$209,v$210,v$211,v$212){var m$203;
var v$1033 = v$209 ^ v$211;
var x$$921 = v$1033 & (((v$208 - 1) & 4294967295) ^ 4294967295);
var fix$1288 = {};
fix$1288.$highb = function(v$926,v$927){lab$highb: while (true) {if (v$926 == v$927) {return v$927;
} else {var t$1289 = v$926 & (v$927 ^ 4294967295);
var t$1290 = (v$927 + v$927) & 4294967295;
var v$926 = t$1289;
var v$927 = t$1290;
continue lab$highb;
};
};
};
var highb$924 = fix$1288.$highb;
m$203 = (highb$924(x$$921,v$208));
return (v$209 < v$211)?[2,[((v$209 | ((((m$203 - 1) & 4294967295) + m$203) & 4294967295)) - m$203) & 4294967295,m$203,v$210,v$212]]:[2,[((v$209 | ((((m$203 - 1) & 4294967295) + m$203) & 4294967295)) - m$203) & 4294967295,m$203,v$212,v$210]];
};
var insertw$213 = function(c$216,v$221){var v$261 = v$221[0];
var v$262 = v$221[1];
var v$263 = v$221[2];
var fix$1291 = {};
fix$1291.$ins = function(v$225){lab$ins: while (true) {switch (v$225[0]) { case 1: {return [0,[v$261,v$262]];
 break; }case 0: {var v$245 = v$225[1];
var v$246 = v$245[0];
var v$247 = v$245[1];
if (v$246 == v$261) {return [0,[v$261,c$216([v$262,v$247])]];
} else {return join$195(1,v$261,[0,[v$261,v$262]],v$246,v$225);
};
 break; }default: {var v$256 = v$225[1];
var v$257 = v$256[0];
var v$258 = v$256[1];
var v$259 = v$256[2];
var v$260 = v$256[3];
if ((((v$261 | ((((v$258 - 1) & 4294967295) + v$258) & 4294967295)) - v$258) & 4294967295) == v$257) {return (v$261 <= v$257)?[2,[v$257,v$258,fix$1291.$ins(v$259),v$260]]:[2,[v$257,v$258,v$259,fix$1291.$ins(v$260)]];
} else {return join$195((v$258 + v$258) & 4294967295,v$261,[0,[v$261,v$262]],v$257,v$225);
};
} };
};
};
var ins$222 = fix$1291.$ins;
return ins$222(v$263);
};
tools$IntFinMapPT$.add$264 = function(v$274,v$275,v$276){return insertw$213(function(v$272){return v$272[0];
},[SmlPrims.i32_to_w32(v$274),v$275,v$276]);
};
var merge$277 = function(c$280,v$284){var v$369 = v$284[0];
var v$370 = v$284[1];
var fix$1292 = {};
fix$1292.$mrg = function(v$317,v$1262){switch (v$317[0]) { case 2: {switch (v$1262[0]) { case 2: {var v$358 = v$317[1];
var v$359 = v$358[0];
var v$360 = v$358[1];
var v$361 = v$358[2];
var v$362 = v$358[3];
var v$363 = v$1262[1];
var v$364 = v$363[0];
var v$365 = v$363[1];
var v$366 = v$363[2];
var v$367 = v$363[3];
if (v$360 < v$365) {if ((((v$359 | ((((v$365 - 1) & 4294967295) + v$365) & 4294967295)) - v$365) & 4294967295) == v$364) {return (v$359 <= v$364)?[2,[v$364,v$365,fix$1292.$mrg(v$317,v$366),v$367]]:[2,[v$364,v$365,v$366,fix$1292.$mrg(v$317,v$367)]];
} else {return join$195((v$365 + v$365) & 4294967295,v$359,v$317,v$364,v$1262);
};
} else {if (v$360 > v$365) {if ((((v$364 | ((((v$360 - 1) & 4294967295) + v$360) & 4294967295)) - v$360) & 4294967295) == v$359) {return (v$364 <= v$359)?[2,[v$359,v$360,fix$1292.$mrg(v$361,v$1262),v$362]]:[2,[v$359,v$360,v$361,fix$1292.$mrg(v$362,v$1262)]];
} else {return join$195((v$360 + v$360) & 4294967295,v$359,v$317,v$364,v$1262);
};
} else {if (v$359 == v$364) {return [2,[v$359,v$360,fix$1292.$mrg(v$361,v$366),fix$1292.$mrg(v$362,v$367)]];
} else {return join$195((v$360 + v$360) & 4294967295,v$359,v$317,v$364,v$1262);
};
};
};
 break; }case 0: {var v$326 = v$1262[1];
var v$327 = v$326[0];
var v$328 = v$326[1];
return insertw$213(function(x$958){return c$280([x$958[1],x$958[0]]);
},[v$327,v$328,v$317]);
 break; }default: {return v$317;
} };
 break; }case 0: {var v$319 = v$317[1];
var v$320 = v$319[0];
var v$321 = v$319[1];
return insertw$213(c$280,[v$320,v$321,v$1262]);
 break; }default: {return v$1262;
} };
};
var mrg$285 = fix$1292.$mrg;
return mrg$285(v$369,v$370);
};
tools$IntFinMapPT$.plus$371 = function(v$380,v$381){return merge$277(function(v$378){return v$378[1];
},[v$380,v$381]);
};
tools$IntFinMapPT$.mergeMap$382 = function(c$385,s$388,t$391){return merge$277(c$385,[s$388,t$391]);
};
var fix$1293 = {};
fix$1293.$fold = function(v$395,v$398,v$401){lab$fold: while (true) {switch (v$401[0]) { case 1: {return v$398;
 break; }case 0: {var v$422 = v$401[1];
var v$424 = v$422[1];
return v$395([v$424,v$398]);
 break; }default: {var v$429 = v$401[1];
var v$430 = v$429[2];
var v$431 = v$429[3];
var t$1294 = v$395;
var t$1295 = fix$1293.$fold(v$395,v$398,v$430);
var t$1296 = v$431;
var v$395 = t$1294;
var v$398 = t$1295;
var v$401 = t$1296;
continue lab$fold;
} };
};
};
tools$IntFinMapPT$.fold$392 = fix$1293.$fold;
var fix$1297 = {};
fix$1297.$Fold = function(v$435,v$438,v$441){lab$Fold: while (true) {switch (v$441[0]) { case 1: {return v$438;
 break; }case 0: {var v$462 = v$441[1];
var v$463 = v$462[0];
var v$464 = v$462[1];
return v$435([[SmlPrims.chk_ovf_i32(v$463),v$464],v$438]);
 break; }default: {var v$469 = v$441[1];
var v$470 = v$469[2];
var v$471 = v$469[3];
var t$1298 = v$435;
var t$1299 = fix$1297.$Fold(v$435,v$438,v$470);
var t$1300 = v$471;
var v$435 = t$1298;
var v$438 = t$1299;
var v$441 = t$1300;
continue lab$Fold;
} };
};
};
tools$IntFinMapPT$.Fold$432 = fix$1297.$Fold;
tools$IntFinMapPT$.remove$472 = function(v$495,v$496){switch ((tools$IntFinMapPT$.lookup$154(v$496,v$495))[0]) { case 0: {var t$1302;
var fix$1301 = {};
fix$1301.$Fold = function(v$1145,v$1146){switch (v$1146[0]) { case 1: {return v$1145;
 break; }case 0: {var v$1147 = v$1146[1];
var v$1148 = v$1147[0];
var v$1149 = v$1147[1];
var v$1258 = SmlPrims.chk_ovf_i32(v$1148);
if (v$495 == v$1258) {return v$1145;
} else {return insertw$213(function(v$1158){return v$1158[0];
},[SmlPrims.i32_to_w32(v$1258),v$1149,v$1145]);
};
 break; }default: {var v$1150 = v$1146[1];
var v$1151 = v$1150[2];
var v$1152 = v$1150[3];
return fix$1301.$Fold(fix$1301.$Fold(v$1145,v$1151),v$1152);
} };
};
var Fold$1144 = fix$1301.$Fold;
t$1302 = (Fold$1144(tools$IntFinMapPT$.empty$127(0),v$496));
return [0,t$1302];
 break; }default: {return [1];
} };
};
var fix$1303 = {};
fix$1303.$composemap = function(v$500,v$503){switch (v$503[0]) { case 1: {return [1];
 break; }case 0: {var v$522 = v$503[1];
var v$523 = v$522[0];
var v$524 = v$522[1];
return [0,[v$523,v$500(v$524)]];
 break; }default: {var v$527 = v$503[1];
var v$528 = v$527[0];
var v$529 = v$527[1];
var v$530 = v$527[2];
var v$531 = v$527[3];
return [2,[v$528,v$529,fix$1303.$composemap(v$500,v$530),fix$1303.$composemap(v$500,v$531)]];
} };
};
tools$IntFinMapPT$.composemap$497 = fix$1303.$composemap;
var fix$1304 = {};
fix$1304.$ComposeMap = function(v$535,v$538){switch (v$538[0]) { case 1: {return [1];
 break; }case 0: {var v$557 = v$538[1];
var v$558 = v$557[0];
var v$559 = v$557[1];
return [0,[v$558,v$535([SmlPrims.chk_ovf_i32(v$558),v$559])]];
 break; }default: {var v$562 = v$538[1];
var v$563 = v$562[0];
var v$564 = v$562[1];
var v$565 = v$562[2];
var v$566 = v$562[3];
return [2,[v$563,v$564,fix$1304.$ComposeMap(v$535,v$565),fix$1304.$ComposeMap(v$535,v$566)]];
} };
};
tools$IntFinMapPT$.ComposeMap$532 = fix$1304.$ComposeMap;
tools$IntFinMapPT$.dom$600 = function(t$603){var fix$1305 = {};
fix$1305.$d = function(v$621,v$1263){lab$d: while (true) {switch (v$621[0]) { case 1: {return v$1263;
 break; }case 0: {return [SmlPrims.chk_ovf_i32(v$621[1][0]),v$1263];
 break; }default: {var v$628 = v$621[1];
var v$629 = v$628[2];
var v$630 = v$628[3];
var t$1306 = v$630;
var t$1307 = fix$1305.$d(v$629,v$1263);
var v$621 = t$1306;
var v$1263 = t$1307;
continue lab$d;
} };
};
};
var d$604 = fix$1305.$d;
return d$604(t$603,null);
};
tools$IntFinMapPT$.range$632 = function(m$635){var fix$1308 = {};
fix$1308.$fold = function(v$1162,v$1163){lab$fold: while (true) {switch (v$1163[0]) { case 1: {return v$1162;
 break; }case 0: {return [v$1163[1][1],v$1162];
 break; }default: {var v$1166 = v$1163[1];
var v$1167 = v$1166[2];
var v$1168 = v$1166[3];
var t$1309 = fix$1308.$fold(v$1162,v$1167);
var t$1310 = v$1168;
var v$1162 = t$1309;
var v$1163 = t$1310;
continue lab$fold;
} };
};
};
var fold$1161 = fix$1308.$fold;
var v$1267 = null;
return fold$1161(v$1267,m$635);
};
tools$IntFinMapPT$.list$637 = function(m$640){var fix$1311 = {};
fix$1311.$Fold = function(v$1173,v$1174){lab$Fold: while (true) {switch (v$1174[0]) { case 1: {return v$1173;
 break; }case 0: {var v$1175 = v$1174[1];
var v$1176 = v$1175[0];
var v$1177 = v$1175[1];
return [[SmlPrims.chk_ovf_i32(v$1176),v$1177],v$1173];
 break; }default: {var v$1178 = v$1174[1];
var v$1179 = v$1178[2];
var v$1180 = v$1178[3];
var t$1312 = fix$1311.$Fold(v$1173,v$1179);
var t$1313 = v$1180;
var v$1173 = t$1312;
var v$1174 = t$1313;
continue lab$Fold;
} };
};
};
var Fold$1172 = fix$1311.$Fold;
var v$1269 = null;
return Fold$1172(v$1269,m$640);
};
tools$IntFinMapPT$.filter$642 = function(f$645,m$648){var fix$1314 = {};
fix$1314.$Fold = function(v$1190,v$1191){switch (v$1191[0]) { case 1: {return v$1190;
 break; }case 0: {var v$1192 = v$1191[1];
var v$1193 = v$1192[0];
var v$1194 = v$1192[1];
var v$1254 = [SmlPrims.chk_ovf_i32(v$1193),v$1194];
var v$1200 = v$1254[0];
var v$1201 = v$1254[1];
if (f$645(v$1254)) {return insertw$213(function(v$1203){return v$1203[0];
},[SmlPrims.i32_to_w32(v$1200),v$1201,v$1190]);
} else {return v$1190;
};
 break; }default: {var v$1195 = v$1191[1];
var v$1196 = v$1195[2];
var v$1197 = v$1195[3];
return fix$1314.$Fold(fix$1314.$Fold(v$1190,v$1196),v$1197);
} };
};
var Fold$1189 = fix$1314.$Fold;
return Fold$1189(tools$IntFinMapPT$.empty$127(0),m$648);
};
var fix$1315 = {};
fix$1315.$addList = function(v$666,v$669){if (v$666 == null) {return v$669;
} else {var v$681 = v$666;
var v$682 = v$681[0];
var v$683 = v$682[0];
var v$684 = v$682[1];
var v$685 = v$681[1];
return fix$1315.$addList(v$685,insertw$213(function(v$977){return v$977[0];
},[SmlPrims.i32_to_w32(v$683),v$684,v$669]));
};
};
tools$IntFinMapPT$.addList$663 = fix$1315.$addList;
tools$IntFinMapPT$.fromList$687 = function(l$690){return tools$IntFinMapPT$.addList$663(l$690,tools$IntFinMapPT$.empty$127(0));
};
tools$IntFinMapPT$.en$Restrict$691 = new String("Restrict");
tools$IntFinMapPT$.restrict$692 = function(v$723,v$724,v$725){var fix$1316 = {};
fix$1316.$res = function(v$710,v$1264){if (v$710 == null) {return v$1264;
} else {var v$719 = v$710;
var v$720 = v$719[0];
var v$721 = v$719[1];
var v$716 = tools$IntFinMapPT$.lookup$154(v$724,v$720);
switch (v$716[0]) { case 0: {var v$718 = v$716[1];
return fix$1316.$res(v$721,insertw$213(function(v$982){return v$982[0];
},[SmlPrims.i32_to_w32(v$720),v$718,v$1264]));
 break; }default: {throw [tools$IntFinMapPT$.en$Restrict$691,v$723(v$720)];
} };
};
};
var res$698 = fix$1316.$res;
return res$698(v$725,tools$IntFinMapPT$.empty$127(0));
};
tools$IntFinMapPT$.enrich$726 = function(f$729,v$733){var v$754 = v$733[0];
var v$755 = v$733[1];
var fix$1317 = {};
fix$1317.$Fold = function(v$1213,v$1214){lab$Fold: while (true) {switch (v$1214[0]) { case 1: {return v$1213;
 break; }case 0: {var v$1215 = v$1214[1];
var v$1216 = v$1215[0];
var v$1217 = v$1215[1];
var v$1260 = SmlPrims.chk_ovf_i32(v$1216);
var v$1226 = tools$IntFinMapPT$.lookup$154(v$754,v$1260);
switch (v$1226[0]) { case 0: {var v$1227 = v$1226[1];
if (v$1213) {return f$729([v$1227,v$1217]);
} else {return false;
};
 break; }default: {return false;
} };
 break; }default: {var v$1218 = v$1214[1];
var v$1219 = v$1218[2];
var v$1220 = v$1218[3];
var t$1318 = fix$1317.$Fold(v$1213,v$1219);
var t$1319 = v$1220;
var v$1213 = t$1318;
var v$1214 = t$1319;
continue lab$Fold;
} };
};
};
var Fold$1212 = fix$1317.$Fold;
return Fold$1212(true,v$755);
};
tools$IntFinMapPT$.layoutMap$756 = function(v$789,v$791,v$790,v$788){return function(layoutDom$765){return function(layoutRan$768){return function(m$771){var t$1327;
var t$1323;
var l$984;
var fix$1320 = {};
fix$1320.$Fold = function(v$1231,v$1232){lab$Fold: while (true) {switch (v$1232[0]) { case 1: {return v$1231;
 break; }case 0: {var v$1233 = v$1232[1];
var v$1234 = v$1233[0];
var v$1235 = v$1233[1];
return [[SmlPrims.chk_ovf_i32(v$1234),v$1235],v$1231];
 break; }default: {var v$1236 = v$1232[1];
var v$1237 = v$1236[2];
var v$1238 = v$1236[3];
var t$1321 = fix$1320.$Fold(v$1231,v$1237);
var t$1322 = v$1238;
var v$1231 = t$1321;
var v$1232 = t$1322;
continue lab$Fold;
} };
};
};
var Fold$1230 = fix$1320.$Fold;
var v$1275 = null;
l$984 = (Fold$1230(v$1275,m$771));
var fix$1324 = {};
fix$1324.$map = function(v$986){if (v$986 == null) {return null;
} else {var v$987 = v$986;
var v$988 = v$987[0];
var v$989 = v$987[1];
var t$1326;
var t$1325;
var v$1126 = v$988[0];
var v$1127 = v$988[1];
t$1325 = [0,[[layoutDom$765(v$1126),[layoutRan$768(v$1127),null]],[0,v$789],"",3,""]];
t$1326 = [t$1325,fix$1324.$map(v$989)];
return t$1326;
};
};
var map$985 = fix$1324.$map;
t$1323 = (map$985(l$984));
t$1327 = [t$1323,[0,v$790],v$791,3,v$788];
return [0,t$1327];
};
};
};
};
tools$IntFinMapPT$.reportMap$792 = function(f$795,t$798){var t$1333 = tools$Report$.flatten$78;
var t$1331;
var l$993;
var fix$1328 = {};
fix$1328.$Fold = function(v$1243,v$1244){lab$Fold: while (true) {switch (v$1244[0]) { case 1: {return v$1243;
 break; }case 0: {var v$1245 = v$1244[1];
var v$1246 = v$1245[0];
var v$1247 = v$1245[1];
return [[SmlPrims.chk_ovf_i32(v$1246),v$1247],v$1243];
 break; }default: {var v$1248 = v$1244[1];
var v$1249 = v$1248[2];
var v$1250 = v$1248[3];
var t$1329 = fix$1328.$Fold(v$1243,v$1249);
var t$1330 = v$1250;
var v$1243 = t$1329;
var v$1244 = t$1330;
continue lab$Fold;
} };
};
};
var Fold$1242 = fix$1328.$Fold;
var v$1277 = null;
l$993 = (Fold$1242(v$1277,t$798));
var fix$1332 = {};
fix$1332.$map = function(v$995){if (v$995 == null) {return null;
} else {var v$996 = v$995;
var v$997 = v$996[0];
var v$998 = v$996[1];
return [f$795(v$997),fix$1332.$map(v$998)];
};
};
var map$994 = fix$1332.$map;
t$1331 = (map$994(l$993));
return t$1333(t$1331);
};
tools$IntFinMapPT$.pu$799 = function(v$801,pu_a$804){var pu_Empty$816;
var v$1279 = [1];
pu_Empty$816 = (function(v$1280){return pickle$pickle$.con0$1979(v$1279,v$1280);
});
return pickle$pickle$.dataGen$1479(["IntFinMapPT.map",function(v$1001){switch (v$1001[0]) { case 1: {return 0;
 break; }case 0: {return 1;
 break; }default: {return 2;
} };
},[pu_Empty$816,[function(v$1002){return pickle$pickle$.con1$2005(function(v$1003){return [0,v$1003];
},function(v$1004){switch (v$1004[0]) { case 0: {return v$1004[1];
 break; }default: {throw [basis$Initial$.en$Fail$45,"IntFinMapPT.pu_Lf"];
} };
},pickle$pickle$.pairGen0$974(pickle$pickle$.word$718,pu_a$804));
},[function(pu$1005){return pickle$pickle$.con1$2005(function(v$1006){return [2,v$1006];
},function(v$1007){switch (v$1007[0]) { case 2: {return v$1007[1];
 break; }default: {throw [basis$Initial$.en$Fail$45,"IntFinMapPT.pu_Br"];
} };
},pickle$pickle$.tup4Gen0$2368(pickle$pickle$.word$718,pickle$pickle$.word$718,pu$1005,pu$1005));
},null]]]]);
};
return 0;
})();
