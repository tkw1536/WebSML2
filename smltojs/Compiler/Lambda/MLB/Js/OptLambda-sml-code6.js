if ((typeof(compiler0$OptLambda$$6)) == "undefined") {compiler0$OptLambda$$6 = {};
};
(function(){compiler0$OptLambda$$6.en$DiGraphExn$2472 = new String("DiGraphExn");
compiler0$OptLambda$$6.pp$2473 = function(t$2476){return tools$PrettyPrint$.flatten$932(tools$PrettyPrint$.format$933(tools$Flags$$1.colwidth$91[0],t$2476));
};
compiler0$OptLambda$$6.log$2477 = function(s$2480){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$2480 + "\n");
};
compiler0$OptLambda$$6.die$2481 = function(errmsg$2484){return tools$Crash$.impossible$50("IntDiGraph." + errmsg$2484);
};
compiler0$OptLambda$$6.footnote$2485 = function(v$4154,v$4155){return v$4154;
};
compiler0$OptLambda$$6.freshAttributes$2492 = function(v$2494){var v$2495 = [false];
var v$2496 = [0];
var v$2497 = [0];
return [[0],v$2496,v$2497,[0],v$2495];
};
compiler0$OptLambda$$6.getOutSet$2500 = function(n$2503){return n$2503[0][1][2];
};
compiler0$OptLambda$$6.getNodes$2509 = function(out$2512){var fix$4160 = {};
fix$4160.$map = function(v$3169){if (v$3169 == null) {return null;
} else {var v$3170 = v$3169;
var v$3171 = v$3170[0];
var v$3172 = v$3170[1];
return [v$3171[0],fix$4160.$map(v$3172)];
};
};
var map$3168 = fix$4160.$map;
return map$3168(out$2512[0]);
};
compiler0$OptLambda$$6.getAttributes$2519 = function(n$2522){return n$2522[0][1][0];
};
compiler0$OptLambda$$6.setAttributes$2528 = function(n$2531,attr$2534){return (n$2531[0][1][0][0] = attr$2534,0);
};
compiler0$OptLambda$$6.getVisited$2535 = function(n$2538){return n$2538[0][1][0][0][4];
};
compiler0$OptLambda$$6.setVisited$2543 = function(n$2546,visited$2549){return (n$2546[0][1][0][0][4][0] = visited$2549,0);
};
compiler0$OptLambda$$6.getInEdges$2554 = function(n$2557){return n$2557[0][1][0][0][1];
};
compiler0$OptLambda$$6.setInEdges$2562 = function(n$2565,i$2568){return (n$2565[0][1][0][0][1][0] = i$2568,0);
};
compiler0$OptLambda$$6.getOutEdges$2573 = function(n$2576){return n$2576[0][1][0][0][2];
};
compiler0$OptLambda$$6.setOutEdges$2581 = function(n$2584,u$2587){return (n$2584[0][1][0][0][2][0] = u$2587,0);
};
compiler0$OptLambda$$6.getDfsNo$2592 = function(n$2595){return n$2595[0][1][0][0][0];
};
compiler0$OptLambda$$6.setDfsNo$2600 = function(n$2603,u$2606){return (n$2603[0][1][0][0][0][0] = u$2606,0);
};
compiler0$OptLambda$$6.getSccNo$2611 = function(n$2614){return n$2614[0][1][0][0][3];
};
compiler0$OptLambda$$6.setSccNo$2619 = function(n$2622,u$2625){return (n$2622[0][1][0][0][3][0] = u$2625,0);
};
compiler0$OptLambda$$6.mkGraph$2630 = function(v$2632){return [compiler0$OptLambda$$5.empty$278(0)];
};
compiler0$OptLambda$$6.mkNode$2633 = function(i$2636){var t$4164;
var t$4161;
var v$2637 = [i$2636];
var v$2638 = [null];
var t$4163;
var t$4162;
var v$3204 = [false];
var v$3205 = [0];
var v$3206 = [0];
t$4162 = [[0],v$3205,v$3206,[0],v$3204];
t$4163 = [t$4162];
t$4161 = [t$4163,v$2637,v$2638];
t$4164 = [0,t$4161];
return [t$4164];
};
compiler0$OptLambda$$6.getInfoNode$2640 = function(n$2643){return n$2643[0][1][1];
};
compiler0$OptLambda$$6.setInfoNode$2649 = function(n$2652,i$2655){return (n$2652[0][1][1][0] = i$2655,0);
};
compiler0$OptLambda$$6.getNodeId$2661 = function(n$2664){return n$2664[0][1][1][0];
};
compiler0$OptLambda$$6.findNode$2665 = function(id$2668,g$2671){var v$2676 = compiler0$OptLambda$$5.lookup$294(g$2671[0],id$2668);
switch (v$2676[0]) { case 0: {return v$2676[1];
 break; }default: {throw [compiler0$OptLambda$$6.en$DiGraphExn$2472,"DiGraph error in findNode: Node doesn't exist."];
} };
};
compiler0$OptLambda$$6.findNodeOpt$2679 = function(id$2682,g$2685){return compiler0$OptLambda$$5.lookup$294(g$2685[0],id$2682);
};
compiler0$OptLambda$$6.addNode$2686 = function(n$2689,g$2692){switch ((compiler0$OptLambda$$5.lookup$294(g$2692[0],n$2689[0][1][1][0]))[0]) { case 1: {return (g$2692[0] = (compiler0$OptLambda$$5.add$554(n$2689[0][1][1][0],n$2689,g$2692[0])),0);
 break; }default: {throw [compiler0$OptLambda$$6.en$DiGraphExn$2472,"DiGraph error in addNode: Node allready exist."];
} };
};
compiler0$OptLambda$$6.addNodeWithUpdate$2697 = function(n$2700,g$2703){try {switch ((compiler0$OptLambda$$5.lookup$294(g$2703[0],n$2700[0][1][1][0]))[0]) { case 1: {return (g$2703[0] = (compiler0$OptLambda$$5.add$554(n$2700[0][1][1][0],n$2700,g$2703[0])),0);
 break; }default: {throw [compiler0$OptLambda$$6.en$DiGraphExn$2472,"DiGraph error in addNode: Node allready exist."];
} };
} catch(v$4165) {return (function(v$2706){var t$4166 = v$2706;
if (t$4166[0] == compiler0$OptLambda$$6.en$DiGraphExn$2472) {var n$3223;
var id$3229 = n$2700[0][1][1][0];
var v$3231 = compiler0$OptLambda$$5.lookup$294(g$2703[0],id$3229);
switch (v$3231[0]) { case 0: {n$3223 = v$3231[1];
 break; }default: {throw [compiler0$OptLambda$$6.en$DiGraphExn$2472,"DiGraph error in findNode: Node doesn't exist."];
} };
var i$3224 = n$2700[0][1][1][0];
return (n$3223[0][1][1][0] = i$3224,0);
} else {throw v$2706;
};
})(v$4165);
};
};
compiler0$OptLambda$$6.findEdge$2707 = function(n1$2710,n2$2713){var v$2716 = n1$2710[0];
var v$2730 = v$2716[1];
var v$2731 = v$2730[2];
try {return (edlib$edList$.first$1106(function(v$2724){return v$2724[0] == n2$2713;
},v$2731[0]))[1];
} catch(v$4167) {return (function(v$2729){var t$4168 = v$2729;
if (t$4168[0] == edlib$edList$.en$First$1105) {throw [compiler0$OptLambda$$6.en$DiGraphExn$2472,"Digraph error in findEdge: Edge does not exist."];
} else {throw v$2729;
};
})(v$4167);
};
};
compiler0$OptLambda$$6.findEdgeOpt$2732 = function(n1$2735,n2$2738){var v$2741 = n1$2735[0];
var v$2755 = v$2741[1];
var v$2756 = v$2755[2];
try {return [0,(edlib$edList$.first$1106(function(v$2749){return v$2749[0] == n2$2738;
},v$2756[0]))[1]];
} catch(v$4169) {return (function(v$2754){var t$4170 = v$2754;
if (t$4170[0] == edlib$edList$.en$First$1105) {return [1];
} else {throw v$2754;
};
})(v$4169);
};
};
compiler0$OptLambda$$6.addEdge$2757 = function(n1$2760,n2$2763,info$2766){var v$2769 = n1$2760[0];
var v$2778 = v$2769[1];
var v$2779 = v$2778[2];
var t$4177;
var t$4173;
var fix$4171 = {};
fix$4171.$member = function(v$4065){lab$member: while (true) {if (v$4065 == null) {return false;
} else {var v$4066 = v$4065;
var v$4067 = v$4066[0];
var v$4068 = v$4066[1];
if (n2$2763 == v$4067) {return true;
} else {var t$4172 = v$4068;
var v$4065 = t$4172;
continue lab$member;
};
};
};
};
var member$4064 = fix$4171.$member;
var t$4176 = member$4064;
var t$4175;
var fix$4174 = {};
fix$4174.$map = function(v$3263){if (v$3263 == null) {return null;
} else {var v$3264 = v$3263;
var v$3265 = v$3264[0];
var v$3266 = v$3264[1];
return [v$3265[0],fix$4174.$map(v$3266)];
};
};
var map$3262 = fix$4174.$map;
t$4175 = (map$3262(v$2779[0]));
t$4173 = (t$4176(t$4175));
t$4177 = (t$4173 == false);
if (t$4177) {(v$2779[0] = [[n2$2763,info$2766],v$2779[0]],0);
var u$3270 = SmlPrims.chk_ovf_i32(n1$2760[0][1][0][0][2][0] + 1);
(n1$2760[0][1][0][0][2][0] = u$3270,0);
var i$3277 = SmlPrims.chk_ovf_i32(n2$2763[0][1][0][0][1][0] + 1);
return (n2$2763[0][1][0][0][1][0] = i$3277,0);
} else {return 0;
};
};
compiler0$OptLambda$$6.addEdgeWithUpdate$2780 = function(n1$2783,n2$2786,info$2789){var v$2792 = n1$2783[0];
var v$2811 = v$2792[1];
var v$2812 = v$2811[2];
var t$4189;
var t$4185;
var fix$4183 = {};
fix$4183.$member = function(v$4074){lab$member: while (true) {if (v$4074 == null) {return false;
} else {var v$4075 = v$4074;
var v$4076 = v$4075[0];
var v$4077 = v$4075[1];
if (n2$2786 == v$4076) {return true;
} else {var t$4184 = v$4077;
var v$4074 = t$4184;
continue lab$member;
};
};
};
};
var member$4073 = fix$4183.$member;
var t$4188 = member$4073;
var t$4187;
var fix$4186 = {};
fix$4186.$map = function(v$3299){if (v$3299 == null) {return null;
} else {var v$3300 = v$3299;
var v$3301 = v$3300[0];
var v$3302 = v$3300[1];
return [v$3301[0],fix$4186.$map(v$3302)];
};
};
var map$3298 = fix$4186.$map;
t$4187 = (map$3298(v$2812[0]));
t$4185 = (t$4188(t$4187));
t$4189 = (t$4185 == false);
if (t$4189) {(v$2812[0] = [[n2$2786,info$2789],v$2812[0]],0);
var u$3306 = SmlPrims.chk_ovf_i32(n1$2783[0][1][0][0][2][0] + 1);
(n1$2783[0][1][0][0][2][0] = u$3306,0);
var i$3313 = SmlPrims.chk_ovf_i32(n2$2786[0][1][0][0][1][0] + 1);
return (n2$2786[0][1][0][0][1][0] = i$3313,0);
} else {var t$4182 = v$2812;
var t$4179;
var fix$4178 = {};
fix$4178.$map = function(v$3329){if (v$3329 == null) {return null;
} else {var v$3330 = v$3329;
var v$3331 = v$3330[0];
var v$3332 = v$3330[1];
var t$4181;
var t$4180;
var v$3338 = v$3331[0];
var v$3339 = v$3331[1];
t$4180 = ((v$3338 == n2$2786)?[v$3338,info$2789]:[v$3338,v$3339]);
t$4181 = [t$4180,fix$4178.$map(v$3332)];
return t$4181;
};
};
var map$3328 = fix$4178.$map;
t$4179 = (map$3328(v$2812[0]));
return (t$4182[0] = t$4179,0);
};
};
compiler0$OptLambda$$6.rootNodes$2813 = function(g$2816){return compiler0$OptLambda$$5.fold$1023(function(v$3349){var v$3350 = v$3349[0];
var v$3351 = v$3349[1];
return (v$3350[0][1][0][0][1][0] == 0)?[v$3350,v$3351]:v$3351;
},null,g$2816[0]);
};
compiler0$OptLambda$$6.leafNodes$2828 = function(g$2831){return compiler0$OptLambda$$5.fold$1023(function(v$3355){var v$3356 = v$3355[0];
var v$3357 = v$3355[1];
return (v$3356[0][1][0][0][2][0] == 0)?[v$3356,v$3357]:v$3357;
},null,g$2831[0]);
};
compiler0$OptLambda$$6.succNodes$2843 = function(n$2846){var v$2849 = n$2846[0];
var v$2850 = v$2849[1];
var v$2851 = v$2850[2];
var fix$4190 = {};
fix$4190.$map = function(v$3362){if (v$3362 == null) {return null;
} else {var v$3363 = v$3362;
var v$3364 = v$3363[0];
var v$3365 = v$3363[1];
return [v$3364[0],fix$4190.$map(v$3365)];
};
};
var map$3361 = fix$4190.$map;
return map$3361(v$2851[0]);
};
compiler0$OptLambda$$6.predNodes$2852 = function(n$2855,g$2858){return compiler0$OptLambda$$5.fold$1023(function(v$3382){var v$3383 = v$3382[0];
var v$3384 = v$3382[1];
var v$3385 = v$3383[0];
var v$3386 = v$3385[1];
var v$3387 = v$3386[2];
var t$4193;
var fix$4191 = {};
fix$4191.$member = function(v$3403){lab$member: while (true) {if (v$3403 == null) {return false;
} else {var v$3404 = v$3403;
var v$3405 = v$3404[0];
var v$3406 = v$3404[1];
if (n$2855 == v$3405) {return true;
} else {var t$4192 = v$3406;
var v$3403 = t$4192;
continue lab$member;
};
};
};
};
var member$3402 = fix$4191.$member;
var t$4196 = member$3402;
var t$4195;
var fix$4194 = {};
fix$4194.$map = function(v$3397){if (v$3397 == null) {return null;
} else {var v$3398 = v$3397;
var v$3399 = v$3398[0];
var v$3400 = v$3398[1];
return [v$3399[0],fix$4194.$map(v$3400)];
};
};
var map$3396 = fix$4194.$map;
t$4195 = (map$3396(v$3387[0]));
t$4193 = (t$4196(t$4195));
return t$4193?[v$3383,v$3384]:v$3384;
},null,g$2858[0]);
};
compiler0$OptLambda$$6.fold$2875 = function(f$2878,acc$2881,g$2884){return compiler0$OptLambda$$5.fold$1023(f$2878,acc$2881,g$2884[0]);
};
compiler0$OptLambda$$6.reachable$2885 = function(n$2888){var fix$4197 = {};
fix$4197.$reachable$ = function(v$2910,v$4156){var v$2911 = v$2910[0][1];
var v$2912 = v$2911[2];
if (v$2910[0][1][0][0][4][0] == false) {(v$2910[0][1][0][0][4][0] = true,0);
var t$4206;
var v$4082 = [v$2910,v$4156];
var fix$4207 = {};
fix$4207.$foldr = function(v$4084){lab$foldr: while (true) {if (v$4084 == null) {return v$4082;
} else {var v$4085 = v$4084;
var v$4086 = v$4085[0];
var v$4087 = v$4085[1];
var v$4089 = fix$4207.$foldr(v$4087);
return fix$4197.$reachable$(v$4086,v$4089);
};
};
};
var foldr$4083 = fix$4207.$foldr;
t$4206 = (function(v$4159){return foldr$4083(v$4159);
});
var t$4205;
var fix$4204 = {};
fix$4204.$map = function(v$3438){if (v$3438 == null) {return null;
} else {var v$3439 = v$3438;
var v$3440 = v$3439[0];
var v$3441 = v$3439[1];
return [v$3440[0],fix$4204.$map(v$3441)];
};
};
var map$3437 = fix$4204.$map;
t$4205 = (map$3437(v$2912[0]));
return t$4206(t$4205);
} else {return v$4156;
};
};
var reachable$$2889 = fix$4197.$reachable$;
var fix$4198 = {};
fix$4198.$SetVisitedFalse = function(node$2917){var v$2928 = node$2917[0][1];
var v$2929 = v$2928[2];
if (node$2917[0][1][0][0][4][0] == true) {(node$2917[0][1][0][0][4][0] = false,0);
var fix$4199 = {};
fix$4199.$app = function(v$3455){lab$app: while (true) {if (v$3455 == null) {return 0;
} else {var v$3456 = v$3455;
var v$3457 = v$3456[0];
var v$3458 = v$3456[1];
fix$4198.$SetVisitedFalse(v$3457);
var t$4200 = v$3458;
var v$3455 = t$4200;
continue lab$app;
};
};
};
var app$3454 = fix$4199.$app;
var t$4203 = app$3454;
var t$4202;
var fix$4201 = {};
fix$4201.$map = function(v$3461){if (v$3461 == null) {return null;
} else {var v$3462 = v$3461;
var v$3463 = v$3462[0];
var v$3464 = v$3462[1];
return [v$3463[0],fix$4201.$map(v$3464)];
};
};
var map$3460 = fix$4201.$map;
t$4202 = (map$3460(v$2929[0]));
return t$4203(t$4202);
} else {return 0;
};
};
var SetVisitedFalse$2914 = fix$4198.$SetVisitedFalse;
return [reachable$$2889(n$2888,null),SetVisitedFalse$2914(n$2888)][0];
};
compiler0$OptLambda$$6.domGraph$2930 = function(g$2933){return compiler0$OptLambda$$5.dom$894(g$2933[0]);
};
compiler0$OptLambda$$6.rangeGraph$2934 = function(g$2937){return compiler0$OptLambda$$5.range$921(g$2937[0]);
};
compiler0$OptLambda$$6.layoutNode$2938 = function(layoutInfo$2941,n$2944){return [0,[null,[1],"",0,layoutInfo$2941(n$2944[0][1][1][0])]];
};
compiler0$OptLambda$$6.layoutGraph$2950 = function(layoutInfo$2953,layoutEdgeInfo$2956,layoutId$2959,rootNodes$2962){var fix$4208 = {};
fix$4208.$makeChildren = function(level$2967,node$2970){var fix$4220 = {};
fix$4220.$map = function(v$3492){if (v$3492 == null) {return null;
} else {var v$3493 = v$3492;
var v$3494 = v$3493[0];
var v$3495 = v$3493[1];
var t$4223;
var t$4221;
var v$3525 = v$3494[0];
var v$3526 = v$3494[1];
if (v$3525[0][1][0][0][4][0] == false) {(v$3525[0][1][0][0][4][0] = true,0);
var startStr$3537 = ((("   --" + (layoutId$2959(node$2970[0][1][1][0]))) + (layoutEdgeInfo$2956(v$3526))) + "-->   ") + (layoutInfo$2953(v$3525[0][1][1][0]));
var t$4222;
var v$3542 = startStr$3537.length;
t$4222 = [fix$4208.$makeChildren(SmlPrims.chk_ovf_i32(level$2967 + startStr$3537.length),v$3525),[1],";",v$3542,startStr$3537];
t$4221 = [0,t$4222];
} else {var startStr$3543 = (((("   --" + (layoutId$2959(node$2970[0][1][1][0]))) + (layoutEdgeInfo$2956(v$3526))) + "-->   [*") + (layoutId$2959(v$3525[0][1][1][0]))) + "*]";
t$4221 = [0,[[[1," "],null],[1],";",startStr$3543.length,startStr$3543]];
};
t$4223 = [t$4221,fix$4220.$map(v$3495)];
return t$4223;
};
};
var map$3491 = fix$4220.$map;
return map$3491(node$2970[0][1][2][0]);
};
var makeChildren$2964 = fix$4208.$makeChildren;
var t$4219;
var t$4218;
var t$4217 = basis$List$.rev$248;
var t$4216;
var fix$4209 = {};
fix$4209.$foldl = function(v$3567,v$3568){lab$foldl: while (true) {if (v$3568 == null) {return v$3567;
} else {var v$3569 = v$3568;
var v$3570 = v$3569[0];
var v$3571 = v$3569[1];
var t$4210;
if (v$3570[0][1][0][0][4][0] == false) {(v$3570[0][1][0][0][4][0] = true,0);
var t$4213;
var t$4212;
var t$4211;
var v$3597 = layoutInfo$2953(v$3570[0][1][1][0]);
t$4211 = [makeChildren$2964(0,v$3570),[1],"",0,v$3597];
t$4212 = [0,t$4211];
t$4213 = [t$4212,v$3567];
t$4210 = t$4213;
} else {t$4210 = v$3567;
};
var t$4214 = t$4210;
var t$4215 = v$3571;
var v$3567 = t$4214;
var v$3568 = t$4215;
continue lab$foldl;
};
};
};
var foldl$3566 = fix$4209.$foldl;
var v$4157 = null;
t$4216 = (foldl$3566(v$4157,rootNodes$2962));
t$4218 = (t$4217(t$4216));
t$4219 = [t$4218,[1],"...Finishing layout of graph]",0,"[Starting layout of graph..."];
return [0,t$4219];
};
compiler0$OptLambda$$6.exportGraphVCG$3018 = function(title$3021,layoutInfo$3024,layoutEdgeInfo$3027,layoutId$3030,classes$3033,g$3036,out$3039){var attrGraph$3104 = (((((((((((("title: \"" + title$3021) + "\"") + "\n") + "splines: yes") + "\n") + "finetuning: no") + "\n") + "folding: 1") + "\n") + "orientation: left_to_right") + "\n") + "ignore_singles: yes") + "\n";
var range_g$3106 = compiler0$OptLambda$$5.range$921(g$3036[0]);
basis$TextIO$.output$101(out$3039,"graph: {\n");
basis$TextIO$.output$101(out$3039,attrGraph$3104);
var fix$4224 = {};
fix$4224.$map = function(v$3727){if (v$3727 == null) {return null;
} else {var v$3728 = v$3727;
var v$3729 = v$3728[0];
var v$3730 = v$3728[1];
var t$4226;
var t$4225;
var v$4094 = v$3729[0];
var v$4095 = v$3729[1];
t$4225 = (basis$TextIO$.output$101(out$3039,(((("classname " + (basis$Int32$.toString$449(v$4094))) + ":\"") + v$4095) + "\"") + "\n"));
t$4226 = [t$4225,fix$4224.$map(v$3730)];
return t$4226;
};
};
var map$3726 = fix$4224.$map;
map$3726(classes$3033);
var fix$4227 = {};
fix$4227.$map = function(v$3742){if (v$3742 == null) {return null;
} else {var v$3743 = v$3742;
var v$3744 = v$3743[0];
var v$3745 = v$3743[1];
var t$4229;
var t$4228;
var titleNode$4097 = ("title: \"" + (layoutId$3030(v$3744[0][1][1][0]))) + "\" ";
var labelNode$4098 = ("label: \"" + (layoutInfo$3024(v$3744[0][1][1][0]))) + "\" ";
t$4228 = (basis$TextIO$.output$101(out$3039,(("node: {" + titleNode$4097) + labelNode$4098) + "}\n"));
t$4229 = [t$4228,fix$4227.$map(v$3745)];
return t$4229;
};
};
var map$3741 = fix$4227.$map;
map$3741(range_g$3106);
var fix$4230 = {};
fix$4230.$map = function(v$3761){if (v$3761 == null) {return null;
} else {var v$3762 = v$3761;
var v$3763 = v$3762[0];
var v$3764 = v$3762[1];
var t$4235;
var t$4231;
var sourcename$4100 = ("sourcename: \"" + (layoutId$3030(v$3763[0][1][1][0]))) + "\" ";
var l$4101 = v$3763[0][1][2][0];
var fix$4232 = {};
fix$4232.$map = function(v$4103){if (v$4103 == null) {return null;
} else {var v$4104 = v$4103;
var v$4105 = v$4104[0];
var v$4106 = v$4104[1];
var t$4234;
var t$4233;
var v$4107 = v$4105[0];
var v$4108 = v$4105[1];
t$4233 = (basis$TextIO$.output$101(out$3039,((((((("edge: {" + sourcename$4100) + (("targetname: \"" + (layoutId$3030(v$4107[0][1][1][0]))) + "\" ")) + "class: ") + "1 ") + "label: \" ") + (layoutEdgeInfo$3027(v$4108))) + "\"") + "}\n"));
t$4234 = [t$4233,fix$4232.$map(v$4106)];
return t$4234;
};
};
var map$4102 = fix$4232.$map;
t$4231 = (map$4102(l$4101));
t$4235 = [t$4231,fix$4230.$map(v$3764)];
return t$4235;
};
};
var map$3760 = fix$4230.$map;
map$3760(range_g$3106);
var fix$4236 = {};
fix$4236.$map = function(v$3807){if (v$3807 == null) {return null;
} else {var v$3808 = v$3807;
var v$3809 = v$3808[0];
var v$3810 = v$3808[1];
var t$4247;
var t$4237;
var v$4119 = v$3809[0];
var v$4120 = v$3809[1];
var v$4121 = v$3809[2];
var class$4122 = ("class: " + (basis$Int32$.toString$449(v$4119))) + " ";
var fix$4238 = {};
fix$4238.$app = function(v$4124){if (v$4124 == null) {return 0;
} else {var v$4125 = v$4124;
var v$4126 = v$4125[0];
var v$4127 = v$4125[1];
var v$4128 = v$4126[0];
var v$4129 = v$4126[1];
var t$4246 = basis$TextIO$.output$101;
var t$4245 = out$3039;
var t$4244;
var t$4243;
var t$4242 = (("edge: {" + (("sourcename: \"" + (layoutId$3030(v$4128[0][1][1][0]))) + "\" ")) + (("targetname: \"" + (layoutId$3030(v$4129[0][1][1][0]))) + "\" ")) + class$4122;
var t$4239;
var edgeInfo$4130;
var v$4133 = v$4128[0];
var v$4134 = v$4133[1];
var v$4135 = v$4134[2];
try {edgeInfo$4130 = (edlib$edList$.first$1106(function(v$4136){return v$4136[0] == v$4129;
},v$4135[0]))[1];
} catch(v$4240) {edgeInfo$4130 = ((function(v$4139){var t$4241 = v$4139;
if (t$4241[0] == edlib$edList$.en$First$1105) {throw [compiler0$OptLambda$$6.en$DiGraphExn$2472,"Digraph error in findEdge: Edge does not exist."];
} else {throw v$4139;
};
})(v$4240));
};
t$4239 = (((("label: \"" + v$4120) + "(") + (layoutEdgeInfo$3027(edgeInfo$4130))) + ")\"");
t$4243 = (t$4242 + t$4239);
t$4244 = (t$4243 + "}\n");
t$4246(t$4245,t$4244);
return fix$4238.$app(v$4127);
};
};
var app$4123 = fix$4238.$app;
t$4237 = (app$4123(v$4121));
t$4247 = [t$4237,fix$4236.$map(v$3810)];
return t$4247;
};
};
var map$3806 = fix$4236.$map;
map$3806(classes$3033);
return basis$TextIO$.output$101(out$3039,"}\n");
};
return 0;
})();
