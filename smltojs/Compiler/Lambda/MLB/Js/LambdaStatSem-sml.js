if ((typeof(compiler0$LambdaStatSem$)) == "undefined") {compiler0$LambdaStatSem$ = {};
};
(function(){var letrec_polymorphism_only$54 = [false];
var ftv_Type$145 = function(Type$148){var fix$4891 = {};
fix$4891.$f = function(v$170,v$4807){switch (v$170[0]) { case 0: {var v$181 = v$170[1];
return tools$NatSet$.insert$627(v$181,v$4807);
 break; }case 3: {var v$176 = v$170[1];
var v$177 = v$176[0];
var v$178 = v$176[1];
var b$2323;
var fix$4895 = {};
fix$4895.$foldl = function(v$2335,v$2336){lab$foldl: while (true) {if (v$2336 == null) {return v$2335;
} else {var v$2337 = v$2336;
var v$2338 = v$2337[0];
var v$2339 = v$2337[1];
var t$4896 = fix$4891.$f(v$2338,v$2335);
var t$4897 = v$2339;
var v$2335 = t$4896;
var v$2336 = t$4897;
continue lab$foldl;
};
};
};
var foldl$2334 = fix$4895.$foldl;
b$2323 = (foldl$2334(v$4807,v$177));
var fix$4898 = {};
fix$4898.$foldl = function(v$2326,v$2327){lab$foldl: while (true) {if (v$2327 == null) {return v$2326;
} else {var v$2328 = v$2327;
var v$2329 = v$2328[0];
var v$2330 = v$2328[1];
var t$4899 = fix$4891.$f(v$2329,v$2326);
var t$4900 = v$2330;
var v$2326 = t$4899;
var v$2327 = t$4900;
continue lab$foldl;
};
};
};
var foldl$2325 = fix$4898.$foldl;
return foldl$2325(b$2323,v$178);
 break; }case 2: {var v$172 = v$170[1];
var v$173 = v$172[0];
var fix$4892 = {};
fix$4892.$foldl = function(v$2344,v$2345){lab$foldl: while (true) {if (v$2345 == null) {return v$2344;
} else {var v$2346 = v$2345;
var v$2347 = v$2346[0];
var v$2348 = v$2346[1];
var t$4893 = fix$4891.$f(v$2347,v$2344);
var t$4894 = v$2348;
var v$2344 = t$4893;
var v$2345 = t$4894;
continue lab$foldl;
};
};
};
var foldl$2343 = fix$4892.$foldl;
return foldl$2343(v$4807,v$173);
 break; }default: {var v$183 = v$170[1];
var fix$4901 = {};
fix$4901.$foldl = function(v$2353,v$2354){lab$foldl: while (true) {if (v$2354 == null) {return v$2353;
} else {var v$2355 = v$2354;
var v$2356 = v$2355[0];
var v$2357 = v$2355[1];
var t$4902 = fix$4891.$f(v$2356,v$2353);
var t$4903 = v$2357;
var v$2353 = t$4902;
var v$2354 = t$4903;
continue lab$foldl;
};
};
};
var foldl$2352 = fix$4901.$foldl;
return foldl$2352(v$4807,v$183);
} };
};
var f$149 = fix$4891.$f;
return f$149(Type$148,null);
};
compiler0$LambdaStatSem$.empty$200 = [compiler_objects$Con$$2.empty$339(0),compiler_objects$Excon$$2.empty$297(0),null,compiler_objects$Lvars$$2.empty$402(0),special_objects$TyName$$2.empty$1022(0)];
var initial_con_env$206;
var typescheme_TRUE$207;
var Type$2358 = [2,[null,special_objects$TyName$$1.tyName_BOOL$202]];
typescheme_TRUE$207 = [tools$NatSet$.list$604(ftv_Type$145(Type$2358)),Type$2358];
var typescheme_FALSE$208;
var Type$2359 = [2,[null,special_objects$TyName$$1.tyName_BOOL$202]];
typescheme_FALSE$208 = [tools$NatSet$.list$604(ftv_Type$145(Type$2359)),Type$2359];
var typescheme_NIL$209;
var tyvar$210 = compiler_objects$LambdaExp$$4.fresh_tyvar$1580(0);
var Type$2360 = [2,[[[0,tyvar$210],null],special_objects$TyName$$1.tyName_LIST$242]];
typescheme_NIL$209 = [tools$NatSet$.list$604(ftv_Type$145(Type$2360)),Type$2360];
var typescheme_CONS$211;
var tyvar$212 = compiler_objects$LambdaExp$$4.fresh_tyvar$1580(0);
var Type$2361 = [3,[[[1,[[0,tyvar$212],[[2,[[[0,tyvar$212],null],special_objects$TyName$$1.tyName_LIST$242]],null]]],null],[[2,[[[0,tyvar$212],null],special_objects$TyName$$1.tyName_LIST$242]],null]]];
typescheme_CONS$211 = [tools$NatSet$.list$604(ftv_Type$145(Type$2361)),Type$2361];
var typescheme_QUOTE$213;
var tyvar$214 = compiler_objects$LambdaExp$$4.fresh_tyvar$1580(0);
var Type$2362 = [3,[[[2,[null,special_objects$TyName$$1.tyName_STRING$234]],null],[[2,[[[0,tyvar$214],null],special_objects$TyName$$1.tyName_FRAG$246]],null]]];
typescheme_QUOTE$213 = [tools$NatSet$.list$604(ftv_Type$145(Type$2362)),Type$2362];
var typescheme_ANTIQUOTE$215;
var tyvar$216 = compiler_objects$LambdaExp$$4.fresh_tyvar$1580(0);
var Type$2363 = [3,[[[0,tyvar$216],null],[[2,[[[0,tyvar$216],null],special_objects$TyName$$1.tyName_FRAG$246]],null]]];
typescheme_ANTIQUOTE$215 = [tools$NatSet$.list$604(ftv_Type$145(Type$2363)),Type$2363];
var typescheme_INTINF$217;
var Type$2364 = [3,[[[1,[[2,[[[2,[null,special_objects$TyName$$1.tyName_INT31$206]],null],special_objects$TyName$$1.tyName_LIST$242]],[[2,[null,special_objects$TyName$$1.tyName_BOOL$202]],null]]],null],[[2,[null,special_objects$TyName$$1.tyName_INTINF$214]],null]]];
typescheme_INTINF$217 = [tools$NatSet$.list$604(ftv_Type$145(Type$2364)),Type$2364];
initial_con_env$206 = (compiler_objects$Con$$2.fromList$654([[compiler_objects$Con$$1.con_TRUE$118,typescheme_TRUE$207],[[compiler_objects$Con$$1.con_FALSE$119,typescheme_FALSE$208],[[compiler_objects$Con$$1.con_NIL$120,typescheme_NIL$209],[[compiler_objects$Con$$1.con_CONS$121,typescheme_CONS$211],[[compiler_objects$Con$$1.con_QUOTE$122,typescheme_QUOTE$213],[[compiler_objects$Con$$1.con_ANTIQUOTE$123,typescheme_ANTIQUOTE$215],[[compiler_objects$Con$$1.con_INTINF$124,typescheme_INTINF$217],null]]]]]]]));
var initial_tyname_env$218 = special_objects$TyName$$2.fromList$1337([[special_objects$TyName$$1.tyName_BOOL$202,[compiler_objects$Con$$1.con_TRUE$118,[compiler_objects$Con$$1.con_FALSE$119,null]]],[[special_objects$TyName$$1.tyName_INT31$206,null],[[special_objects$TyName$$1.tyName_INT32$210,null],[[special_objects$TyName$$1.tyName_INTINF$214,[compiler_objects$Con$$1.con_INTINF$124,null]],[[special_objects$TyName$$1.tyName_WORD8$218,null],[[special_objects$TyName$$1.tyName_WORD31$222,null],[[special_objects$TyName$$1.tyName_WORD32$226,null],[[special_objects$TyName$$1.tyName_REAL$230,null],[[special_objects$TyName$$1.tyName_STRING$234,null],[[special_objects$TyName$$1.tyName_CHAR$238,null],[[special_objects$TyName$$1.tyName_LIST$242,[compiler_objects$Con$$1.con_NIL$120,[compiler_objects$Con$$1.con_CONS$121,null]]],[[special_objects$TyName$$1.tyName_FRAG$246,[compiler_objects$Con$$1.con_QUOTE$122,[compiler_objects$Con$$1.con_ANTIQUOTE$123,null]]],[[special_objects$TyName$$1.tyName_CHARARRAY$262,null],[[special_objects$TyName$$1.tyName_FOREIGNPTR$266,null],[[special_objects$TyName$$1.tyName_ARRAY$254,null],[[special_objects$TyName$$1.tyName_VECTOR$258,null],[[special_objects$TyName$$1.tyName_REF$250,null],[[special_objects$TyName$$1.tyName_EXN$270,null],null]]]]]]]]]]]]]]]]]]);
var initial_excon_env$220 = compiler_objects$Excon$$2.fromList$612([[compiler_objects$Excon$$1.ex_DIV$108,[1]],[[compiler_objects$Excon$$1.ex_MATCH$109,[1]],[[compiler_objects$Excon$$1.ex_BIND$110,[1]],[[compiler_objects$Excon$$1.ex_OVERFLOW$111,[1]],[[compiler_objects$Excon$$1.ex_INTERRUPT$112,[1]],null]]]]]);
var ftv_initial$221 = compiler_objects$Con$$2.fold$765(function(v$225){var v$226 = v$225[0];
var v$227 = v$225[1];
var t$4907 = tools$NatSet$.union$655;
var t$4906;
var v$2366 = v$226[0];
var v$2367 = v$226[1];
t$4906 = (tools$NatSet$.difference$641(ftv_Type$145(v$2367),tools$NatSet$.fromList$605(v$2366)));
return t$4907(t$4906,v$227);
},compiler_objects$Lvars$$2.fold$828(function(v$231){var v$232 = v$231[0];
var v$233 = v$231[1];
var t$4905 = tools$NatSet$.union$655;
var t$4904;
var v$2369 = v$232[0];
var v$2370 = v$232[1];
t$4904 = (tools$NatSet$.difference$641(ftv_Type$145(v$2370),tools$NatSet$.fromList$605(v$2369)));
return t$4905(t$4904,v$233);
},compiler_objects$Excon$$2.fold$723(function(v$240){var v$241 = v$240[0];
switch (v$241[0]) { case 0: {var v$243 = v$241[1];
var v$244 = v$240[1];
return tools$NatSet$.union$655(ftv_Type$145(v$243),v$244);
 break; }default: {return v$240[1];
} };
},null,initial_excon_env$220),compiler_objects$Lvars$$2.empty$402(0)),initial_con_env$206);
compiler0$LambdaStatSem$.initial$246 = [initial_con_env$206,initial_excon_env$220,ftv_initial$221,compiler_objects$Lvars$$2.empty$402(0),initial_tyname_env$218];
compiler0$LambdaStatSem$.plus$252 = function(v$270,v$4808){var v$271 = v$270[2];
var v$272 = v$270[0];
var v$273 = v$270[4];
var v$274 = v$270[3];
var v$275 = v$270[1];
var v$277 = v$4808[2];
var v$278 = v$4808[0];
var v$279 = v$4808[4];
var v$280 = v$4808[3];
var v$281 = v$4808[1];
var v$265 = tools$NatSet$.union$655(v$271,v$277);
var v$266 = compiler_objects$Con$$2.plus$540(v$272,v$278);
var v$267 = special_objects$TyName$$2.plus$1223(v$273,v$279);
var v$268 = compiler_objects$Lvars$$2.plus$603(v$274,v$280);
return [v$266,compiler_objects$Excon$$2.plus$498(v$275,v$281),v$265,v$268,v$267];
};
var add_lvar$328 = function(v$343,v$344,v$345){var v$346 = v$345[2];
var v$347 = v$345[0];
var v$348 = v$345[4];
var v$349 = v$345[3];
var t$4913 = v$347;
var t$4912 = v$345[1];
var t$4911;
var t$4910 = tools$NatSet$.union$655;
var t$4909 = v$346;
var t$4908;
var v$2375 = v$344[0];
var v$2376 = v$344[1];
t$4908 = (tools$NatSet$.difference$641(ftv_Type$145(v$2376),tools$NatSet$.fromList$605(v$2375)));
t$4911 = (t$4910(t$4909,t$4908));
return [t$4913,t$4912,t$4911,compiler_objects$Lvars$$2.add$575(v$343,v$344,v$349),v$348];
};
var layoutTypeScheme$533 = function(v$543,v$544){var t$4914;
var v$541 = [2,"."];
var t$4922;
var t$4921;
var t$4920;
var t$4915;
var v$2452 = [0,","];
var t$4917;
var fix$4916 = {};
fix$4916.$map = function(v$2454){if (v$2454 == null) {return null;
} else {var v$2455 = v$2454;
var v$2456 = v$2455[0];
var v$2457 = v$2455[1];
var t$4919;
var t$4918;
var v$4608 = compiler_objects$LambdaExp$$4.pr_tyvar$1559(v$2456);
t$4918 = [1,v$4608];
t$4919 = [t$4918,fix$4916.$map(v$2457)];
return t$4919;
};
};
var map$2453 = fix$4916.$map;
t$4917 = (map$2453(v$543));
t$4915 = [t$4917,v$2452,")",0,"("];
t$4920 = [0,t$4915];
t$4921 = [t$4920,[compiler_objects$LambdaExp$$4.layoutType$2837(v$544),null]];
t$4922 = t$4921;
t$4914 = [t$4922,v$541,"",0,"\\/"];
return [0,t$4914];
};
compiler0$LambdaStatSem$.layout_env$580 = function(v$592,v$595,v$4809,v$594,v$593){var t$4923;
var v$589 = [0,"; "];
t$4923 = [[(((compiler_objects$Con$$2.layoutMap$971(" -> ","}",", ","ConEnv: {"))(function(con$2504){return [1,con$2504[1]];
}))(function(v$4810){return layoutTypeScheme$533(v$4810[0],v$4810[1]);
}))(v$592),[(((special_objects$TyName$$2.layoutMap$1654(" -> ","}",", ","TyNameEnv: {"))(function(tyname$2506){return [1,special_objects$TyName$$1.pr_TyName$289(tyname$2506[0],tyname$2506[1],tyname$2506[2],tyname$2506[3],tyname$2506[4],tyname$2506[5])];
}))(function(cons$2507){var t$4924;
var v$2508 = [0,","];
var t$4926;
var fix$4925 = {};
fix$4925.$map = function(v$2510){if (v$2510 == null) {return null;
} else {var v$2511 = v$2510;
var v$2512 = v$2511[0];
var v$2513 = v$2511[1];
return [[1,v$2512[1]],fix$4925.$map(v$2513)];
};
};
var map$2509 = fix$4925.$map;
t$4926 = (map$2509(cons$2507));
t$4924 = [t$4926,v$2508,"]",0,"["];
return [0,t$4924];
}))(v$593),[(((compiler_objects$Lvars$$2.layoutMap$1034(" -> ","}",", ","LvarEnv: {"))(function(lvar$2515){return [1,compiler_objects$Lvars$$1.pr_lvar$68(lvar$2515[0],lvar$2515[1],lvar$2515[2],lvar$2515[3],lvar$2515[4])];
}))(function(v$4811){return layoutTypeScheme$533(v$4811[0],v$4811[1]);
}))(v$594),[(((compiler_objects$Excon$$2.layoutMap$929(" -> ","}",", ","ExConEnv: {"))(function(excon$2517){return [1,excon$2517[1]];
}))(function(v$2518){switch (v$2518[0]) { case 0: {var v$2519 = v$2518[1];
return compiler_objects$LambdaExp$$4.layoutType$2837(v$2519);
 break; }default: {return [1,"NONE"];
} };
}))(v$595),null]]]],v$589,"]",2,"LambdaStatEnv: ["];
return [0,t$4923];
};
compiler0$LambdaStatSem$.restrict$596 = function(v$686,v$4812){var v$687 = v$686[2];
var v$688 = v$686[0];
var v$689 = v$686[4];
var v$690 = v$686[3];
var v$691 = v$686[1];
var v$693 = v$4812[0];
var v$694 = v$4812[3];
var v$695 = v$4812[2];
var v$696 = v$4812[1];
if (tools$NatSet$.isEmpty$589(v$687)) {0;
} else {basis$General$.print$156("Restrict: Problem with set of free type variables\n");
basis$General$.print$156("not being empty. Here is the environment: \n");
tools$PrettyPrint$.outputTree$1071([function(v$4885){return basis$General$.print$156(v$4885);
},compiler0$LambdaStatSem$.layout_env$580(v$686[0],v$686[1],v$686[2],v$686[3],v$686[4]),tools$Flags$$1.colwidth$91[0]]);
basis$General$.print$156("Non-empty set is:\n");
tools$PrettyPrint$.outputTree$1071([function(v$4886){return basis$General$.print$156(v$4886);
},((tools$NatSet$.layoutSet$731("}",",","{"))(function(x$2539){var v$4630 = compiler_objects$LambdaExp$$4.pr_tyvar$1559(x$2539);
return [1,v$4630];
}))(v$687),tools$Flags$$1.colwidth$91[0]]);
tools$Crash$.impossible$50("LambdaStatSem.restrict.ftvset not empty");
};
var con_env1$637;
try {con_env1$637 = (compiler_objects$Con$$2.restrict$891(function(v$2542){return v$2542[1];
},v$688,v$693));
} catch(v$4927) {con_env1$637 = ((function(v$641){var t$4928 = v$641;
if (t$4928[0] == compiler_objects$Con$$2.en$Restrict$890) {var s$638 = v$641[1];
var s$2543 = "Problem with constructor environment; constructor " + s$638;
basis$General$.print$156(s$2543 + "\n");
basis$General$.print$156("is not in the domain of the environment:\n");
tools$PrettyPrint$.outputTree$1071([function(v$4887){return basis$General$.print$156(v$4887);
},compiler0$LambdaStatSem$.layout_env$580(v$686[0],v$686[1],v$686[2],v$686[3],v$686[4]),tools$Flags$$1.colwidth$91[0]]);
return tools$Crash$.impossible$50("LambdaStatSem.restrict");
} else {throw v$641;
};
})(v$4927));
};
var tyname_env1$648;
try {tyname_env1$648 = (special_objects$TyName$$2.restrict$1574(function(v$4813){return special_objects$TyName$$1.pr_TyName$289(v$4813[0],v$4813[1],v$4813[2],v$4813[3],v$4813[4],v$4813[5]);
},v$689,v$694));
} catch(v$4929) {tyname_env1$648 = ((function(v$652){var t$4930 = v$652;
if (t$4930[0] == special_objects$TyName$$2.en$Restrict$1573) {var s$649 = v$652[1];
var s$2551 = "Problem with tyname environment; tyname " + s$649;
basis$General$.print$156(s$2551 + "\n");
basis$General$.print$156("is not in the domain of the environment:\n");
tools$PrettyPrint$.outputTree$1071([function(v$4888){return basis$General$.print$156(v$4888);
},compiler0$LambdaStatSem$.layout_env$580(v$686[0],v$686[1],v$686[2],v$686[3],v$686[4]),tools$Flags$$1.colwidth$91[0]]);
return tools$Crash$.impossible$50("LambdaStatSem.restrict");
} else {throw v$652;
};
})(v$4929));
};
var lvar_env1$659;
try {lvar_env1$659 = (compiler_objects$Lvars$$2.restrict$954(function(v$4814){return compiler_objects$Lvars$$1.pr_lvar$68(v$4814[0],v$4814[1],v$4814[2],v$4814[3],v$4814[4]);
},v$690,v$695));
} catch(v$4931) {lvar_env1$659 = ((function(v$663){var t$4932 = v$663;
if (t$4932[0] == compiler_objects$Lvars$$2.en$Restrict$953) {var s$660 = v$663[1];
var s$2559 = "Problem with lvar environment; lvar " + s$660;
basis$General$.print$156(s$2559 + "\n");
basis$General$.print$156("is not in the domain of the environment:\n");
tools$PrettyPrint$.outputTree$1071([function(v$4889){return basis$General$.print$156(v$4889);
},compiler0$LambdaStatSem$.layout_env$580(v$686[0],v$686[1],v$686[2],v$686[3],v$686[4]),tools$Flags$$1.colwidth$91[0]]);
return tools$Crash$.impossible$50("LambdaStatSem.restrict");
} else {throw v$663;
};
})(v$4931));
};
var t$4936 = con_env1$637;
var t$4934;
try {t$4934 = (compiler_objects$Excon$$2.restrict$849(function(v$2567){return v$2567[1];
},v$691,v$696));
} catch(v$4933) {t$4934 = ((function(v$674){var t$4935 = v$674;
if (t$4935[0] == compiler_objects$Excon$$2.en$Restrict$848) {var s$671 = v$674[1];
var s$2568 = "Problem with excon environment; excon " + s$671;
basis$General$.print$156(s$2568 + "\n");
basis$General$.print$156("is not in the domain of the environment:\n");
tools$PrettyPrint$.outputTree$1071([function(v$4890){return basis$General$.print$156(v$4890);
},compiler0$LambdaStatSem$.layout_env$580(v$686[0],v$686[1],v$686[2],v$686[3],v$686[4]),tools$Flags$$1.colwidth$91[0]]);
return tools$Crash$.impossible$50("LambdaStatSem.restrict");
} else {throw v$674;
};
})(v$4933));
};
return [t$4936,t$4934,v$687,lvar_env1$659,tyname_env1$648];
};
compiler0$LambdaStatSem$.enrich$697 = function(v$699){return true;
};
compiler0$LambdaStatSem$.pu$700;
var pu_f$733 = tools$NatSet$.pu$762(compiler_objects$LambdaExp$$4.pu_tyvar$4432);
var pu_ce$734 = compiler_objects$Con$$2.pu$1072(compiler_objects$Con$$1.pu$126,compiler_objects$LambdaExp$$4.pu_TypeScheme$4437);
var pu_te$735 = special_objects$TyName$$2.pu$1755(special_objects$TyName$$1.pu$366,pickle$pickle$.listGen$2100(compiler_objects$Con$$1.pu$126));
var pu_le$736 = compiler_objects$Lvars$$2.pu$1135(compiler_objects$Lvars$$3.pu$1758,compiler_objects$LambdaExp$$4.pu_TypeScheme$4437);
var pu_ee$737 = compiler_objects$Excon$$2.pu$1030(compiler_objects$Excon$$1.pu$114,pickle$pickle$.optionGen$2125(compiler_objects$LambdaExp$$4.pu_Type$4434));
compiler0$LambdaStatSem$.pu$700 = (pickle$pickle$.convert$2333([function(v$2576){var v$2577 = v$2576[0];
return [v$2577[1],v$2576[1],v$2577[0],v$2577[3],v$2577[2]];
},function(v$2578){return [[v$2578[2],v$2578[0],v$2578[4],v$2578[3]],v$2578[1]];
}],pickle$pickle$.pairGen0$974(pickle$pickle$.tup4Gen0$2368(pu_f$733,pu_ce$734,pu_te$735,pu_le$736),pu_ee$737)));
var fix$4937 = {};
fix$4937.$valid_t = function(e$742,ty$745){switch (ty$745[0]) { case 2: {var v$775 = ty$745[1];
var v$776 = v$775[0];
var v$777 = v$775[1];
var v$2580 = e$742[4];
var v$2582 = special_objects$TyName$$2.lookup$1173(v$2580,v$777);
switch (v$2582[0]) { case 0: {v$2582[1];
 break; }default: {var s$2583 = "lookup_tyname.Cannot find " + (special_objects$TyName$$1.pr_TyName$289(v$777[0],v$777[1],v$777[2],v$777[3],v$777[4],v$777[5]));
tools$Crash$.impossible$50("LambdaStatSem." + s$2583);
} };
return fix$4937.$valid_ts(e$742,v$776);
 break; }case 3: {var v$769 = ty$745[1];
var v$770 = v$769[0];
var v$771 = v$769[1];
fix$4937.$valid_ts(e$742,v$770);
return fix$4937.$valid_ts(e$742,v$771);
 break; }case 0: {var v$765 = ty$745[1];
if (tools$NatSet$.member$582(v$765,e$742[2])) {return 0;
} else {var s$2588 = "valid_t.non-bound type variable " + (compiler_objects$LambdaExp$$4.pr_tyvar$1559(v$765));
return tools$Crash$.impossible$50("LambdaStatSem." + s$2588);
};
 break; }default: {var v$778 = ty$745[1];
return fix$4937.$valid_ts(e$742,v$778);
} };
};
fix$4937.$valid_ts = function(v$781,v$784){if (v$784 == null) {return 0;
} else {var v$798 = v$784;
var v$799 = v$798[0];
var v$800 = v$798[1];
fix$4937.$valid_t(v$781,v$799);
return fix$4937.$valid_ts(v$781,v$800);
};
};
var valid_t$739 = fix$4937.$valid_t;
var valid_ts$738 = fix$4937.$valid_ts;
var valid_s$801 = function(v$4815,v$4816,v$4817,v$4818,v$4819){return function(v$808){var v$817 = v$808[0];
var v$818 = v$808[1];
var s$809 = compiler_objects$LambdaExp$$4.tyvars_Type$5236(null,v$818,null);
var fix$4938 = {};
fix$4938.$app = function(v$2594){lab$app: while (true) {if (v$2594 == null) {return 0;
} else {var v$2595 = v$2594;
var v$2596 = v$2595[0];
var v$2597 = v$2595[1];
if (tools$NatSet$.member$582(v$2596,s$809)) {0;
} else {var s$4634;
var t$4940 = ("valid_s.Type variable " + (compiler_objects$LambdaExp$$4.pr_tyvar$1559(v$2596))) + " not in ";
var t$4939;
var st$4636 = layoutTypeScheme$533(v$817,v$818);
t$4939 = (tools$PrettyPrint$.flatten$932(tools$PrettyPrint$.format$933(tools$Flags$$1.colwidth$91[0],st$4636)));
s$4634 = (t$4940 + t$4939);
tools$Crash$.impossible$50("LambdaStatSem." + s$4634);
};
var t$4941 = v$2597;
var v$2594 = t$4941;
continue lab$app;
};
};
};
var app$2593 = fix$4938.$app;
app$2593(v$817);
return valid_t$739([v$4815,v$4816,tools$NatSet$.addList$606(v$817,v$4817),v$4818,v$4819],v$818);
};
};
var eqType$834 = function(s$837,v$841){var v$860 = v$841[0];
var v$861 = v$841[1];
if (compiler_objects$LambdaBasics$.eq_Type$2462(v$860,v$861)) {return 0;
} else {basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"--------------------------------\n");
var s$2611 = ("Error in lambda type checking (" + s$837) + "):\n";
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$2611);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"The type\n");
var stringtree$2615 = compiler_objects$LambdaExp$$4.layoutType$2837(v$860);
tools$PrettyPrint$.outputTree$1071([function(s$2616){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$2616);
},stringtree$2615,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"is not compatible with type\n");
var stringtree$2618 = compiler_objects$LambdaExp$$4.layoutType$2837(v$861);
tools$PrettyPrint$.outputTree$1071([function(s$2619){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$2619);
},stringtree$2618,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"--------------------------------\n");
return tools$Crash$.impossible$50("LambdaStatSem.eqType");
};
};
var unit_Type$900 = [1,null];
var type_switch$989 = function(type_lexp$992,get_tyname$995,v$998){var v$1088 = v$998[1];
var v$1089 = v$1088[0];
var v$1090 = v$1088[1];
var v$1091 = v$1088[2];
var tyname$1006;
var v$1014 = type_lexp$992(v$1089);
switch (v$1014[0]) { case 0: {var v$1016 = v$1014[1];
if (v$1016 == null) {tyname$1006 = (tools$Crash$.impossible$50("LambdaStatSem.SWITCH.Wrong typelist kind"));
} else {var v$1018 = v$1016;
var v$1019 = v$1018[0];
switch (v$1019[0]) { case 2: {tyname$1006 = ((v$1018[1] == null)?v$1019[1][1]:(tools$Crash$.impossible$50("LambdaStatSem.SWITCH.Wrong typelist kind")));
 break; }default: {tyname$1006 = (tools$Crash$.impossible$50("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
};
 break; }default: {tyname$1006 = (tools$Crash$.impossible$50("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
var fix$4942 = {};
fix$4942.$check = function(v$1028,v$1031,v$1034){lab$check: while (true) {switch (v$1031[0]) { case 0: {switch (v$1034[0]) { case 1: {var v$1055 = v$1031[1];
var t$4943 = v$1028;
var t$4944 = [1];
var t$4945 = [0,type_lexp$992(v$1055)];
var v$1028 = t$4943;
var v$1031 = t$4944;
var v$1034 = t$4945;
continue lab$check;
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.check. error");
} };
 break; }default: {if (v$1028 == null) {switch (v$1034[0]) { case 0: {return v$1034[1];
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.check. error");
} };
} else {var v$1079 = v$1028;
var v$1080 = v$1079[0];
var v$1081 = v$1080[0];
var v$1082 = v$1080[1];
var v$1083 = v$1079[1];
var tn$1061 = get_tyname$995(v$1081);
var tl$1062 = type_lexp$992(v$1082);
var t$4946;
var v$2690 = tn$1061[2];
var v$2691 = tyname$1006[2];
var v$2692 = v$2690[0][1];
var v$2693 = v$2691[0][1];
t$4946 = ((v$2692[0] == v$2693[0])?(v$2692[1] == v$2693[1]):false);
if (t$4946) {switch (v$1034[0]) { case 0: {var v$1073 = v$1034[1];
var t$4950 = v$1083;
var t$4949 = [1];
var t$4948;
var t$4947;
switch (tl$1062[0]) { case 0: {switch (v$1073[0]) { case 0: {var v$2697 = tl$1062[1];
var v$2698 = v$1073[1];
t$4947 = ((compiler_objects$LambdaBasics$.eq_Types$2461(v$2697,v$2698))?tl$1062:(tools$Crash$.impossible$50("LambdaStatSem.lub. Types vs. Types")));
 break; }default: {switch (v$1073[0]) { case 1: {t$4947 = tl$1062;
 break; }default: {t$4947 = (tools$Crash$.impossible$50("LambdaStatSem.lub. not defined for these args"));
} };
} };
 break; }case 1: {t$4947 = v$1073;
 break; }default: {switch (v$1073[0]) { case 1: {t$4947 = tl$1062;
 break; }default: {t$4947 = (tools$Crash$.impossible$50("LambdaStatSem.lub. not defined for these args"));
} };
} };
t$4948 = [0,t$4947];
var t$4951 = t$4950;
var t$4952 = t$4949;
var t$4953 = t$4948;
var v$1028 = t$4951;
var v$1031 = t$4952;
var v$1034 = t$4953;
continue lab$check;
 break; }default: {var t$4954 = v$1083;
var t$4955 = [1];
var t$4956 = [0,tl$1062];
var v$1028 = t$4954;
var v$1031 = t$4955;
var v$1034 = t$4956;
continue lab$check;
} };
} else {var save_flag$1074 = (tools$Flags$$6.lookup_flag_entry$5029("print_type_name_stamps"))[0];
((tools$Flags$$6.lookup_flag_entry$5029("print_type_name_stamps"))[0] = true,0);
var tn_s$1075 = special_objects$TyName$$1.pr_TyName$289(tn$1061[0],tn$1061[1],tn$1061[2],tn$1061[3],tn$1061[4],tn$1061[5]);
var tyname_s$1076 = special_objects$TyName$$1.pr_TyName$289(tyname$1006[0],tyname$1006[1],tyname$1006[2],tyname$1006[3],tyname$1006[4],tyname$1006[5]);
((tools$Flags$$6.lookup_flag_entry$5029("print_type_name_stamps"))[0] = save_flag$1074,0);
var s$2706 = ((("SWITCH.wrong tyname; the type names " + tn_s$1075) + " and ") + tyname_s$1076) + " disagree";
return tools$Crash$.impossible$50("LambdaStatSem." + s$2706);
};
};
} };
};
};
var check$1025 = fix$4942.$check;
return check$1025(v$1090,v$1091,[1]);
};
var en$AbortExp$1092 = new String("AbortExp");
var exn$AbortExp$1092 = [en$AbortExp$1092];
var fix$4957 = {};
fix$4957.$type_prim = function(env$1097,prim$1100,lexps$1103){switch (prim$1100[0]) { case 13: {var v$1669 = prim$1100[1];
var v$1670 = v$1669[0];
var v$1671 = v$1669[1];
valid_ts$738(env$1097,v$1671);
if (lexps$1103 == null) {var t$5097;
var t$5096;
var v$4288;
var v$3074 = env$1097[0];
var v$3076 = compiler_objects$Con$$2.lookup$490(v$3074,v$1670);
switch (v$3076[0]) { case 0: {v$4288 = v$3076[1];
 break; }default: {var s$3077 = "lookup_con.Cannot find " + v$1670[1];
v$4288 = (tools$Crash$.impossible$50("LambdaStatSem." + s$3077));
} };
var v$3068 = v$4288[0];
var v$3069 = v$4288[1];
var S$3071 = compiler_objects$LambdaBasics$.mk_subst$2454(function(v$3072){return "mk_instance";
},[v$3068,v$1671]);
t$5096 = (compiler_objects$LambdaBasics$.on_Type$2459(S$3071,v$3069));
t$5097 = [t$5096,null];
return t$5097;
} else {var v$1640 = lexps$1103;
if (v$1640[1] == null) {var v$1668 = v$1640[0];
var v$1651;
var v$4294;
var v$3088 = env$1097[0];
var v$3090 = compiler_objects$Con$$2.lookup$490(v$3088,v$1670);
switch (v$3090[0]) { case 0: {v$4294 = v$3090[1];
 break; }default: {var s$3091 = "lookup_con.Cannot find " + v$1670[1];
v$4294 = (tools$Crash$.impossible$50("LambdaStatSem." + s$3091));
} };
var v$3082 = v$4294[0];
var v$3083 = v$4294[1];
var S$3085 = compiler_objects$LambdaBasics$.mk_subst$2454(function(v$3086){return "mk_instance";
},[v$3082,v$1671]);
v$1651 = (compiler_objects$LambdaBasics$.on_Type$2459(S$3085,v$3083));
switch (v$1651[0]) { case 3: {var v$1653 = v$1651[1];
var v$1654 = v$1653[0];
if (v$1654 == null) {return tools$Crash$.impossible$50("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1656 = v$1654;
if (v$1656[1] == null) {var v$1658 = v$1653[1];
if (v$1658 == null) {return tools$Crash$.impossible$50("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1660 = v$1658;
if (v$1660[1] == null) {var v$1665 = v$1656[0];
var v$1666 = v$1660[0];
var ts$1662;
var v$3097 = fix$4957.$type_lexp(env$1097,v$1668);
switch (v$3097[0]) { case 0: {ts$1662 = v$3097[1];
 break; }default: {ts$1662 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.CONprim"));
} };
var fix$5098 = {};
fix$5098.$eqTypes = function(v$4759,v$4820){lab$eqTypes: while (true) {if (v$4759 == null) {if (v$4820 == null) {return 0;
} else {return tools$Crash$.impossible$50("LambdaStatSem.eqTypes");
};
} else {if (v$4820 == null) {return tools$Crash$.impossible$50("LambdaStatSem.eqTypes");
} else {var v$4761 = v$4759;
var v$4762 = v$4761[0];
var v$4763 = v$4761[1];
var v$4764 = v$4820;
var v$4765 = v$4764[0];
var v$4766 = v$4764[1];
eqType$834("CONprim: ",[v$4762,v$4765]);
var t$5099 = v$4763;
var t$5100 = v$4766;
var v$4759 = t$5099;
var v$4820 = t$5100;
continue lab$eqTypes;
};
};
};
};
var eqTypes$4757 = fix$5098.$eqTypes;
eqTypes$4757([v$1665,null],ts$1662);
return [v$1666,null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.CONprim.Wrong number of args");
};
};
 break; }case 12: {var v$1627 = prim$1100[1];
var v$1628 = v$1627[0];
var v$1629 = v$1627[1];
valid_ts$738(env$1097,v$1629);
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.DECONprim.Wrong number of args");
} else {var v$1595 = lexps$1103;
if (v$1595[1] == null) {var v$1625 = v$1595[0];
var v$1606;
var v$4318;
var v$3131 = env$1097[0];
var v$3133 = compiler_objects$Con$$2.lookup$490(v$3131,v$1628);
switch (v$3133[0]) { case 0: {v$4318 = v$3133[1];
 break; }default: {var s$3134 = "lookup_con.Cannot find " + v$1628[1];
v$4318 = (tools$Crash$.impossible$50("LambdaStatSem." + s$3134));
} };
var v$3125 = v$4318[0];
var v$3126 = v$4318[1];
var S$3128 = compiler_objects$LambdaBasics$.mk_subst$2454(function(v$3129){return "mk_instance";
},[v$3125,v$1629]);
v$1606 = (compiler_objects$LambdaBasics$.on_Type$2459(S$3128,v$3126));
switch (v$1606[0]) { case 3: {var v$1608 = v$1606[1];
var v$1609 = v$1608[0];
if (v$1609 == null) {return tools$Crash$.impossible$50("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1611 = v$1609;
if (v$1611[1] == null) {var v$1613 = v$1608[1];
if (v$1613 == null) {return tools$Crash$.impossible$50("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1615 = v$1613;
if (v$1615[1] == null) {var v$1622 = v$1611[0];
var v$1623 = v$1615[0];
var ts$1617;
var v$3140 = fix$4957.$type_lexp(env$1097,v$1625);
switch (v$3140[0]) { case 0: {ts$1617 = v$3140[1];
 break; }default: {ts$1617 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.DECONprim0"));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461([v$1623,null],ts$1617)) {return [v$1622,null];
} else {var s$3147;
var t$5095;
var t$5094;
var t$5093 = ("DECONprim: " + v$1628[1]) + "; ts = ";
var t$5092;
var st$4703;
var t$5089;
var v$4705 = [0,","];
var t$5091;
var fix$5090 = {};
fix$5090.$map = function(v$4707){if (v$4707 == null) {return null;
} else {var v$4708 = v$4707;
var v$4709 = v$4708[0];
var v$4710 = v$4708[1];
return [compiler_objects$LambdaExp$$4.layoutType$2837(v$4709),fix$5090.$map(v$4710)];
};
};
var map$4706 = fix$5090.$map;
t$5091 = (map$4706(ts$1617));
t$5089 = [t$5091,v$4705,"]",0,"["];
st$4703 = [0,t$5089];
t$5092 = (tools$PrettyPrint$.flatten$932(tools$PrettyPrint$.format$933(tools$Flags$$1.colwidth$91[0],st$4703)));
t$5094 = (t$5093 + t$5092);
t$5095 = (t$5094 + "; t2 = ");
var t$5088;
var st$4712 = compiler_objects$LambdaExp$$4.layoutType$2837(v$1623);
t$5088 = (tools$PrettyPrint$.flatten$932(tools$PrettyPrint$.format$933(tools$Flags$$1.colwidth$91[0],st$4712)));
s$3147 = (t$5095 + t$5088);
return tools$Crash$.impossible$50("LambdaStatSem." + s$3147);
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.DECONprim.Wrong number of args");
};
};
 break; }case 7: {var v$1584 = prim$1100[1];
if (lexps$1103 == null) {var t$5087;
var v$3177 = env$1097[1];
var v$3179 = compiler_objects$Excon$$2.lookup$448(v$3177,v$1584);
switch (v$3179[0]) { case 0: {t$5087 = v$3179[1];
 break; }default: {var s$3180 = "lookup_excon.Cannot find " + v$1584[1];
t$5087 = (tools$Crash$.impossible$50("LambdaStatSem." + s$3180));
} };
switch (t$5087[0]) { case 1: {return [[2,[null,special_objects$TyName$$1.tyName_EXN$270]],null];
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.EXCONprim.Unary excon not fully applied");
} };
} else {var v$1568 = lexps$1103;
if (v$1568[1] == null) {var v$1583 = v$1568[0];
var v$1574;
var v$3186 = env$1097[1];
var v$3188 = compiler_objects$Excon$$2.lookup$448(v$3186,v$1584);
switch (v$3188[0]) { case 0: {v$1574 = v$3188[1];
 break; }default: {var s$3189 = "lookup_excon.Cannot find " + v$1584[1];
v$1574 = (tools$Crash$.impossible$50("LambdaStatSem." + s$3189));
} };
switch (v$1574[0]) { case 0: {var v$1582 = v$1574[1];
var ts$1577;
var v$3193 = fix$4957.$type_lexp(env$1097,v$1583);
switch (v$3193[0]) { case 0: {ts$1577 = v$3193[1];
 break; }default: {ts$1577 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.EXCONprim: "));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461([v$1582,null],ts$1577)) {return [[2,[null,special_objects$TyName$$1.tyName_EXN$270]],null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.EXCONprim: ");
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.EXCONprim.Nullary excon applied to arg.");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.EXCONprim.Wrong number of args");
};
};
 break; }case 11: {var v$1555 = prim$1100[1];
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.DEEXCONprim.Wrong number of args");
} else {var v$1538 = lexps$1103;
if (v$1538[1] == null) {var v$1553 = v$1538[0];
var v$1544;
var v$3209 = env$1097[1];
var v$3211 = compiler_objects$Excon$$2.lookup$448(v$3209,v$1555);
switch (v$3211[0]) { case 0: {v$1544 = v$3211[1];
 break; }default: {var s$3212 = "lookup_excon.Cannot find " + v$1555[1];
v$1544 = (tools$Crash$.impossible$50("LambdaStatSem." + s$3212));
} };
switch (v$1544[0]) { case 0: {var v$1552 = v$1544[1];
var ts$1547;
var v$3216 = fix$4957.$type_lexp(env$1097,v$1553);
switch (v$3216[0]) { case 0: {ts$1547 = v$3216[1];
 break; }default: {ts$1547 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.DEEXCONprim: "));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1547,[[2,[null,special_objects$TyName$$1.tyName_EXN$270]],null])) {return [v$1552,null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.DEEXCONprim: ");
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.DEEXCONprim.Unary excon does not have arrow type");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.DEEXCONprim.Wrong number of args");
};
};
 break; }case 4: {var t$5086;
var t$5085;
var t$5082;
var fix$5081 = {};
fix$5081.$map = function(v$3236){if (v$3236 == null) {return null;
} else {var v$3237 = v$3236;
var v$3238 = v$3237[0];
var v$3239 = v$3237[1];
var t$5084;
var t$5083;
var v$4774 = fix$4957.$type_lexp(env$1097,v$3238);
switch (v$4774[0]) { case 0: {var v$4775 = v$4774[1];
if (v$4775 == null) {t$5083 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.RECORDprim"));
} else {var v$4776 = v$4775;
t$5083 = ((v$4776[1] == null)?v$4776[0]:(tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.RECORDprim")));
};
 break; }default: {t$5083 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.RECORDprim"));
} };
t$5084 = [t$5083,fix$5081.$map(v$3239)];
return t$5084;
};
};
var map$3235 = fix$5081.$map;
t$5082 = (map$3235(lexps$1103));
t$5085 = [1,t$5082];
t$5086 = [t$5085,null];
return t$5086;
 break; }case 1: {var v$1529 = prim$1100[1];
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.SELECTprim.Wrong number of args.");
} else {var v$1506 = lexps$1103;
if (v$1506[1] == null) {var v$1527 = v$1506[0];
var v$1515 = fix$4957.$type_lexp(env$1097,v$1527);
switch (v$1515[0]) { case 0: {var v$1517 = v$1515[1];
if (v$1517 == null) {return tools$Crash$.impossible$50("LambdaStatSem.SELECTprim.Arg not of record type");
} else {var v$1519 = v$1517;
var v$1520 = v$1519[0];
switch (v$1520[0]) { case 1: {if (v$1519[1] == null) {var v$1525 = v$1520[1];
try {return [basis$List$.nth$98(v$1525,v$1529),null];
} catch(v$5080) {return (function(v$1524){return tools$Crash$.impossible$50("LambdaStatSem.SELECTprim.Index out of range");
})(v$5080);
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.SELECTprim.Arg not of record type");
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.SELECTprim.Arg not of record type");
} };
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.SELECTprim.Arg not of record type");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.SELECTprim.Wrong number of args.");
};
};
 break; }case 0: {var fix$5077 = {};
fix$5077.$map = function(v$3271){if (v$3271 == null) {return null;
} else {var v$3272 = v$3271;
var v$3273 = v$3272[0];
var v$3274 = v$3272[1];
var t$5079;
var t$5078;
var v$4784 = fix$4957.$type_lexp(env$1097,v$3273);
switch (v$4784[0]) { case 0: {var v$4785 = v$4784[1];
if (v$4785 == null) {t$5078 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.UB_RECORDprim"));
} else {var v$4786 = v$4785;
t$5078 = ((v$4786[1] == null)?v$4786[0]:(tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.UB_RECORDprim")));
};
 break; }default: {t$5078 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.UB_RECORDprim"));
} };
t$5079 = [t$5078,fix$5077.$map(v$3274)];
return t$5079;
};
};
var map$3270 = fix$5077.$map;
return map$3270(lexps$1103);
 break; }case 10: {var v$1496 = prim$1100[1];
var v$1497 = v$1496[0];
valid_t$739(env$1097,v$1497);
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.DEREFprim.Wrong number of args");
} else {var v$1469 = lexps$1103;
if (v$1469[1] == null) {var v$1494 = v$1469[0];
switch (v$1497[0]) { case 2: {var v$1480 = v$1497[1];
var v$1481 = v$1480[0];
if (v$1481 == null) {return tools$Crash$.impossible$50("LambdaStatSem.DEREFprim.Wrong instance");
} else {var v$1483 = v$1481;
if (v$1483[1] == null) {var v$1491 = v$1483[0];
var ts$1486;
var v$3284 = fix$4957.$type_lexp(env$1097,v$1494);
switch (v$3284[0]) { case 0: {ts$1486 = v$3284[1];
 break; }default: {ts$1486 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.DEREFprim"));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1486,[v$1497,null])) {return [v$1491,null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.DEREFprim");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.DEREFprim.Wrong instance");
};
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.DEREFprim.Wrong instance");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.DEREFprim.Wrong number of args");
};
};
 break; }case 3: {var v$1457 = prim$1100[1];
var v$1458 = v$1457[0];
var typescheme_REF$1413;
var tyvar$1414 = compiler_objects$LambdaExp$$4.fresh_tyvar$1580(0);
var Type$3308 = [3,[[[0,tyvar$1414],null],[[2,[[[0,tyvar$1414],null],special_objects$TyName$$1.tyName_REF$250]],null]]];
typescheme_REF$1413 = [tools$NatSet$.list$604(ftv_Type$145(Type$3308)),Type$3308];
valid_t$739(env$1097,v$1458);
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.REFprim.Wrong number of args");
} else {var v$1424 = lexps$1103;
if (v$1424[1] == null) {var v$1455 = v$1424[0];
var v$1435;
var v$4433 = [v$1458,null];
var v$3313 = typescheme_REF$1413[0];
var v$3314 = typescheme_REF$1413[1];
var S$3316 = compiler_objects$LambdaBasics$.mk_subst$2454(function(v$3317){return "mk_instance";
},[v$3313,v$4433]);
v$1435 = (compiler_objects$LambdaBasics$.on_Type$2459(S$3316,v$3314));
switch (v$1435[0]) { case 3: {var v$1437 = v$1435[1];
var v$1438 = v$1437[0];
if (v$1438 == null) {return tools$Crash$.impossible$50("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1440 = v$1438;
if (v$1440[1] == null) {var v$1442 = v$1437[1];
if (v$1442 == null) {return tools$Crash$.impossible$50("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1444 = v$1442;
if (v$1444[1] == null) {var v$1452 = v$1440[0];
var v$1453 = v$1444[0];
var ts$1447;
var v$3321 = fix$4957.$type_lexp(env$1097,v$1455);
switch (v$3321[0]) { case 0: {ts$1447 = v$3321[1];
 break; }default: {ts$1447 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.REFprim"));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1447,[v$1452,null])) {return [v$1453,null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.REFprim");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.REFprim.Wrong number of args");
};
};
 break; }case 15: {var v$1410 = prim$1100[1];
var v$1411 = v$1410[0];
valid_t$739(env$1097,v$1411);
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1356 = lexps$1103;
var v$1357 = v$1356[1];
if (v$1357 == null) {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1359 = v$1357;
if (v$1359[1] == null) {var v$1407 = v$1356[0];
var v$1408 = v$1359[0];
switch (v$1411[0]) { case 1: {var v$1375 = v$1411[1];
if (v$1375 == null) {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1377 = v$1375;
var v$1378 = v$1377[0];
switch (v$1378[0]) { case 2: {var v$1380 = v$1378[1];
var v$1381 = v$1380[0];
if (v$1381 == null) {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1383 = v$1381;
if (v$1383[1] == null) {var v$1385 = v$1377[1];
if (v$1385 == null) {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1387 = v$1385;
if (v$1387[1] == null) {var v$1403 = v$1383[0];
var v$1404 = v$1380[1];
var v$1405 = v$1387[0];
var ts1$1389;
var v$3356 = fix$4957.$type_lexp(env$1097,v$1407);
switch (v$3356[0]) { case 0: {ts1$1389 = v$3356[1];
 break; }default: {ts1$1389 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.ASSIGNprim1"));
} };
var ts2$1390;
var v$3364 = fix$4957.$type_lexp(env$1097,v$1408);
switch (v$3364[0]) { case 0: {ts2$1390 = v$3364[1];
 break; }default: {ts2$1390 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.ASSIGNprim2"));
} };
if ((compiler_objects$LambdaBasics$.eq_Type$2462(v$1403,v$1405))?((compiler_objects$LambdaBasics$.eq_Types$2461(ts1$1389,[[2,[[v$1403,null],v$1404]],null]))?(compiler_objects$LambdaBasics$.eq_Types$2461(ts2$1390,[v$1405,null])):false):false) {return [unit_Type$900,null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim3");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.ASSIGNprim.Wrong number of args");
};
};
};
 break; }case 9: {if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.DROPprim -- one parameter expected");
} else {var v$1338 = lexps$1103;
if (v$1338[1] == null) {var v$1342 = v$1338[0];
fix$4957.$type_lexp(env$1097,v$1342);
return null;
} else {return tools$Crash$.impossible$50("LambdaStatSem.DROPprim -- one parameter expected");
};
};
 break; }case 8: {var v$1329 = prim$1100[1];
var v$1330 = v$1329[0];
valid_t$739(env$1097,v$1330);
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1287 = lexps$1103;
var v$1288 = v$1287[1];
if (v$1288 == null) {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1290 = v$1288;
if (v$1290[1] == null) {var v$1326 = v$1287[0];
var v$1327 = v$1290[0];
switch (v$1330[0]) { case 1: {var v$1302 = v$1330[1];
if (v$1302 == null) {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1304 = v$1302;
var v$1305 = v$1304[1];
if (v$1305 == null) {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1307 = v$1305;
if (v$1307[1] == null) {var v$1323 = v$1304[0];
var v$1324 = v$1307[0];
var ts1$1309;
var v$3416 = fix$4957.$type_lexp(env$1097,v$1326);
switch (v$3416[0]) { case 0: {ts1$1309 = v$3416[1];
 break; }default: {ts1$1309 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.EQUALprim1"));
} };
var ts2$1310;
var v$3424 = fix$4957.$type_lexp(env$1097,v$1327);
switch (v$3424[0]) { case 0: {ts2$1310 = v$3424[1];
 break; }default: {ts2$1310 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.EQUALprim2"));
} };
if ((compiler_objects$LambdaBasics$.eq_Type$2462(v$1323,v$1324))?((compiler_objects$LambdaBasics$.eq_Types$2461(ts1$1309,[v$1323,null]))?(compiler_objects$LambdaBasics$.eq_Types$2461(ts2$1310,[v$1324,null])):false):false) {return [[2,[null,special_objects$TyName$$1.tyName_BOOL$202]],null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim3");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim.Wrong instance kind");
};
};
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim.Wrong instance kind");
} };
} else {return tools$Crash$.impossible$50("LambdaStatSem.EQUALprim.Wrong number of args");
};
};
};
 break; }case 14: {var v$1270 = prim$1100[1];
var v$1271 = v$1270[2];
var v$1272 = v$1270[1];
var v$1273 = v$1270[3];
var v$1274 = v$1270[0];
valid_ts$738(env$1097,v$1272);
(valid_s$801(env$1097[0],env$1097[1],env$1097[2],env$1097[3],env$1097[4]))([v$1273,v$1274]);
var v$1211;
var S$3459 = compiler_objects$LambdaBasics$.mk_subst$2454(function(v$3460){return "mk_instance";
},[v$1273,v$1272]);
v$1211 = (compiler_objects$LambdaBasics$.on_Type$2459(S$3459,v$1274));
switch (v$1211[0]) { case 3: {var v$1267 = v$1211[1];
var v$1268 = v$1267[0];
var v$1269 = v$1267[1];
var ts$1213;
var fix$5062 = {};
fix$5062.$map = function(v$3464){if (v$3464 == null) {return null;
} else {var v$3465 = v$3464;
var v$3466 = v$3465[0];
var v$3467 = v$3465[1];
var t$5064;
var t$5063;
var v$4794 = fix$4957.$type_lexp(env$1097,v$3466);
switch (v$4794[0]) { case 0: {var v$4795 = v$4794[1];
if (v$4795 == null) {t$5063 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.CCALL"));
} else {var v$4796 = v$4795;
t$5063 = ((v$4796[1] == null)?v$4796[0]:(tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.CCALL")));
};
 break; }default: {t$5063 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.CCALL"));
} };
t$5064 = [t$5063,fix$5062.$map(v$3467)];
return t$5064;
};
};
var map$3463 = fix$5062.$map;
ts$1213 = (map$3463(lexps$1103));
var ts_res$1214;
if (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1213,v$1268)) {ts_res$1214 = v$1269;
} else {var s$3472 = ("c function " + v$1271) + " expected types:\n";
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3472);
var stringtree$3475;
var t$5065;
var v$3482 = [0,","];
var t$5067;
var fix$5066 = {};
fix$5066.$map = function(v$3484){if (v$3484 == null) {return null;
} else {var v$3485 = v$3484;
var v$3486 = v$3485[0];
var v$3487 = v$3485[1];
return [compiler_objects$LambdaExp$$4.layoutType$2837(v$3486),fix$5066.$map(v$3487)];
};
};
var map$3483 = fix$5066.$map;
t$5067 = (map$3483(v$1268));
t$5065 = [t$5067,v$3482,"]",0,"["];
stringtree$3475 = [0,t$5065];
tools$PrettyPrint$.outputTree$1071([function(s$3476){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3476);
},stringtree$3475,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"but found types:\n");
var stringtree$3489;
var t$5068;
var v$3496 = [0,","];
var t$5070;
var fix$5069 = {};
fix$5069.$map = function(v$3498){if (v$3498 == null) {return null;
} else {var v$3499 = v$3498;
var v$3500 = v$3499[0];
var v$3501 = v$3499[1];
return [compiler_objects$LambdaExp$$4.layoutType$2837(v$3500),fix$5069.$map(v$3501)];
};
};
var map$3497 = fix$5069.$map;
t$5070 = (map$3497(ts$1213));
t$5068 = [t$5070,v$3496,"]",0,"["];
stringtree$3489 = [0,t$5068];
tools$PrettyPrint$.outputTree$1071([function(s$3490){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3490);
},stringtree$3489,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
ts_res$1214 = (tools$Crash$.impossible$50("LambdaStatSem.c function call"));
};
if (v$1271 == "id") {if (v$1268 == null) {tools$Crash$.impossible$50("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1242 = v$1268;
if (v$1242[1] == null) {if (ts_res$1214 == null) {tools$Crash$.impossible$50("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1246 = ts_res$1214;
if (v$1246[1] == null) {var v$1264 = v$1242[0];
var v$1265 = v$1246[0];
var unboxed_types$1248 = [compiler_objects$LambdaExp$$4.boolType$1684,[compiler_objects$LambdaExp$$4.unitType$1689,[compiler_objects$LambdaExp$$4.int31Type$1673,[compiler_objects$LambdaExp$$4.word31Type$1679,[compiler_objects$LambdaExp$$4.intDefaultType$1676(0),[compiler_objects$LambdaExp$$4.wordDefaultType$1681(0),[compiler_objects$LambdaExp$$4.foreignptrType$1685,null]]]]]]];
var t$5076;
var t$5075;
var fix$5073 = {};
fix$5073.$exists = function(v$3521){lab$exists: while (true) {if (v$3521 == null) {return false;
} else {var v$3522 = v$3521;
var v$3523 = v$3522[0];
var v$3524 = v$3522[1];
if (compiler_objects$LambdaBasics$.eq_Type$2462(v$1264,v$3523)) {return true;
} else {var t$5074 = v$3524;
var v$3521 = t$5074;
continue lab$exists;
};
};
};
};
var exists$3520 = fix$5073.$exists;
t$5075 = (exists$3520(unboxed_types$1248));
if (t$5075) {var fix$5071 = {};
fix$5071.$exists = function(v$3528){lab$exists: while (true) {if (v$3528 == null) {return false;
} else {var v$3529 = v$3528;
var v$3530 = v$3529[0];
var v$3531 = v$3529[1];
if (compiler_objects$LambdaBasics$.eq_Type$2462(v$1265,v$3530)) {return true;
} else {var t$5072 = v$3531;
var v$3528 = t$5072;
continue lab$exists;
};
};
};
};
var exists$3527 = fix$5071.$exists;
t$5076 = (exists$3527(unboxed_types$1248));
} else {t$5076 = false;
};
t$5076?0:(tools$Crash$.impossible$50("LambdaStatSem.c function `id' is used to cast to or from a boxed type;  it is region-unsafe to use `id' this way! Rewrite your program!!"));
} else {tools$Crash$.impossible$50("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {tools$Crash$.impossible$50("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {0;
};
return ts_res$1214;
 break; }default: {var s$3547 = ("c function " + v$1271) + " does not have arrow type";
return tools$Crash$.impossible$50("LambdaStatSem." + s$3547);
} };
 break; }case 6: {var v$1197 = prim$1100[1];
var v$1198 = v$1197[2];
var v$1199 = v$1197[0];
var v$1200 = v$1197[1];
valid_t$739(env$1097,v$1199);
valid_t$739(env$1097,v$1200);
var arrowType$1183 = [3,[[v$1199,null],[v$1200,null]]];
var ts$1184;
var fix$5056 = {};
fix$5056.$map = function(v$3554){if (v$3554 == null) {return null;
} else {var v$3555 = v$3554;
var v$3556 = v$3555[0];
var v$3557 = v$3555[1];
var t$5058;
var t$5057;
var v$4804 = fix$4957.$type_lexp(env$1097,v$3556);
switch (v$4804[0]) { case 0: {var v$4805 = v$4804[1];
if (v$4805 == null) {t$5057 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.EXPORT"));
} else {var v$4806 = v$4805;
t$5057 = ((v$4806[1] == null)?v$4806[0]:(tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.EXPORT")));
};
 break; }default: {t$5057 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.EXPORT"));
} };
t$5058 = [t$5057,fix$5056.$map(v$3557)];
return t$5058;
};
};
var map$3553 = fix$5056.$map;
ts$1184 = (map$3553(lexps$1103));
if (compiler_objects$LambdaBasics$.eq_Types$2461([arrowType$1183,null],ts$1184)) {return [compiler_objects$LambdaExp$$4.unitType$1689,null];
} else {var s$3562 = ("Exported function " + v$1198) + " expected function of type:\n";
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3562);
var stringtree$3565 = compiler_objects$LambdaExp$$4.layoutType$2837(arrowType$1183);
tools$PrettyPrint$.outputTree$1071([function(s$3566){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3566);
},stringtree$3565,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"but found type:\n");
var stringtree$3568;
var t$5059;
var v$3575 = [0,","];
var t$5061;
var fix$5060 = {};
fix$5060.$map = function(v$3577){if (v$3577 == null) {return null;
} else {var v$3578 = v$3577;
var v$3579 = v$3578[0];
var v$3580 = v$3578[1];
return [compiler_objects$LambdaExp$$4.layoutType$2837(v$3579),fix$5060.$map(v$3580)];
};
};
var map$3576 = fix$5060.$map;
t$5061 = (map$3576(ts$1184));
t$5059 = [t$5061,v$3575,"]",0,"["];
stringtree$3568 = [0,t$5059];
tools$PrettyPrint$.outputTree$1071([function(s$3569){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3569);
},stringtree$3568,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
return tools$Crash$.impossible$50("LambdaStatSem.Export of function");
};
 break; }case 2: {var v$1176 = prim$1100[1];
var v$1177 = v$1176[0];
valid_t$739(env$1097,v$1177);
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
} else {var v$1167 = lexps$1103;
if (v$1167[1] == null) {var v$1174 = v$1167[0];
var ts$1169;
var v$3586 = fix$4957.$type_lexp(env$1097,v$1174);
switch (v$3586[0]) { case 0: {ts$1169 = v$3586[1];
 break; }default: {ts$1169 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.RESET_REGIONSprim1"));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1169,[v$1177,null])) {return [unit_Type$900,null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.RESET_REGIONSprim2");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
};
};
 break; }default: {var v$1690 = prim$1100[1];
var v$1691 = v$1690[0];
valid_t$739(env$1097,v$1691);
if (lexps$1103 == null) {return tools$Crash$.impossible$50("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
} else {var v$1681 = lexps$1103;
if (v$1681[1] == null) {var v$1688 = v$1681[0];
var ts$1683;
var v$3604 = fix$4957.$type_lexp(env$1097,v$1688);
switch (v$3604[0]) { case 0: {ts$1683 = v$3604[1];
 break; }default: {ts$1683 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.FORCE_RESET_REGIONSprim"));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1683,[v$1691,null])) {return [unit_Type$900,null];
} else {return tools$Crash$.impossible$50("LambdaStatSem.FORCE_RESET_REGIONSprim");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
};
};
} };
};
fix$4957.$type_lexp = function(env$1694,lexp$1697){try {switch (lexp$1697[0]) { case 1: {var v$2126 = lexp$1697[1];
var v$2127 = v$2126[1];
var v$2128 = v$2126[0];
valid_ts$738(env$1694,v$2128);
var t$5044;
var t$5043;
var t$5042;
var v$4160;
var v$2720 = env$1694[3];
var v$2722 = compiler_objects$Lvars$$2.lookup$553(v$2720,v$2127);
switch (v$2722[0]) { case 0: {v$4160 = v$2722[1];
 break; }default: {var s$2723 = "lookup_lvar.Cannot find " + (compiler_objects$Lvars$$1.pr_lvar$68(v$2127[0],v$2127[1],v$2127[2],v$2127[3],v$2127[4]));
v$4160 = (tools$Crash$.impossible$50("LambdaStatSem." + s$2723));
} };
var v$2714 = v$4160[0];
var v$2715 = v$4160[1];
var S$2717 = compiler_objects$LambdaBasics$.mk_subst$2454(function(v$2718){return "mk_instance";
},[v$2714,v$2128]);
t$5042 = (compiler_objects$LambdaBasics$.on_Type$2459(S$2717,v$2715));
t$5043 = [t$5042,null];
t$5044 = t$5043;
return [0,t$5044];
 break; }case 12: {var v$2120 = lexp$1697[1];
var v$2122 = v$2120[1];
valid_t$739(env$1694,v$2122);
return [0,[v$2122,null]];
 break; }case 0: {var v$2114 = lexp$1697[1];
var v$2116 = v$2114[1];
valid_t$739(env$1694,v$2116);
return [0,[v$2116,null]];
 break; }case 7: {return [0,[[2,[null,special_objects$TyName$$1.tyName_STRING$234]],null]];
 break; }case 8: {return [0,[[2,[null,special_objects$TyName$$1.tyName_REAL$230]],null]];
 break; }case 15: {var v$2104 = lexp$1697[1];
var v$2105 = v$2104[1];
var v$2106 = v$2104[0];
var env$$2086;
var fix$5037 = {};
fix$5037.$foldl = function(v$2730,v$2731){lab$foldl: while (true) {if (v$2731 == null) {return v$2730;
} else {var v$2732 = v$2731;
var v$2733 = v$2732[0];
var v$2734 = v$2732[1];
var t$5038;
var v$4639 = v$2733[0];
var v$4640 = v$2733[1];
t$5038 = (add_lvar$328(v$4639,[null,v$4640],v$2730));
var t$5039 = t$5038;
var t$5040 = v$2734;
var v$2730 = t$5039;
var v$2731 = t$5040;
continue lab$foldl;
};
};
};
var foldl$2729 = fix$5037.$foldl;
env$$2086 = (foldl$2729(env$1694,v$2105));
var ts_body$2096;
var v$2736 = fix$4957.$type_lexp(env$$2086,v$2106);
switch (v$2736[0]) { case 0: {ts_body$2096 = v$2736[1];
 break; }default: {ts_body$2096 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.FN"));
} };
var ts_arg$2097;
var fix$5041 = {};
fix$5041.$map = function(v$2746){if (v$2746 == null) {return null;
} else {var v$2747 = v$2746;
var v$2748 = v$2747[0];
var v$2749 = v$2747[1];
return [v$2748[1],fix$5041.$map(v$2749)];
};
};
var map$2745 = fix$5041.$map;
ts_arg$2097 = (map$2745(v$2105));
valid_ts$738(env$1694,ts_arg$2097);
return [0,[[3,[ts_arg$2097,ts_body$2096]],null]];
 break; }case 11: {var v$2014 = lexp$1697[1];
var v$2015 = v$2014[1];
if (v$2015 == null) {var v$2021 = v$2014[0];
var v$2022 = v$2014[2];
var ts$2016;
var v$2751 = fix$4957.$type_lexp(env$1694,v$2021);
switch (v$2751[0]) { case 0: {ts$2016 = v$2751[1];
 break; }default: {ts$2016 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.WILD"));
} };
((ts$2016 == null)?true:false)?0:(tools$Crash$.impossible$50("LambdaStatSem.LET.wild -- the binding must be surrounded by a drop expression"));
return fix$4957.$type_lexp(env$1694,v$2022);
} else {var v$2083 = v$2014[0];
var v$2084 = v$2014[2];
var env_scope$2023;
var fix$5025 = {};
fix$5025.$foldl = function(v$2765,v$2766){lab$foldl: while (true) {if (v$2766 == null) {return v$2765;
} else {var v$2767 = v$2766;
var v$2768 = v$2767[0];
var v$2769 = v$2767[1];
var t$5026;
var v$4645 = v$2768[0];
var v$4646 = v$2768[1];
var v$4647 = v$2768[2];
t$5026 = (add_lvar$328(v$4645,[v$4646,v$4647],v$2765));
var t$5027 = t$5026;
var t$5028 = v$2769;
var v$2765 = t$5027;
var v$2766 = t$5028;
continue lab$foldl;
};
};
};
var foldl$2764 = fix$5025.$foldl;
env_scope$2023 = (foldl$2764(env$1694,v$2015));
var tvs$2035;
var b$2771 = null;
var fix$5029 = {};
fix$5029.$foldl = function(v$2774,v$2775){lab$foldl: while (true) {if (v$2775 == null) {return v$2774;
} else {var v$2776 = v$2775;
var v$2777 = v$2776[0];
var v$2778 = v$2776[1];
var t$5030;
var v$4651 = v$2777[1];
t$5030 = (basis$List$.s$n$645([v$4651,v$2774]));
var t$5031 = t$5030;
var t$5032 = v$2778;
var v$2774 = t$5031;
var v$2775 = t$5032;
continue lab$foldl;
};
};
};
var foldl$2773 = fix$5029.$foldl;
tvs$2035 = (foldl$2773(b$2771,v$2015));
var env_bind$2043;
var v$2782 = env$1694[2];
var v$2783 = env$1694[0];
var v$2784 = env$1694[4];
var v$2785 = env$1694[3];
env_bind$2043 = [v$2783,env$1694[1],tools$NatSet$.addList$606(tvs$2035,v$2782),v$2785,v$2784];
var check_polymorphism$2044 = letrec_polymorphism_only$54[0]?(function(v$2052){if (v$2052 == null) {return 0;
} else {return tools$Crash$.impossible$50("LambdaStatSem.LET.polymorphic let -- Polymorphism only allowed in FIX.");
};
}):(function(v$2054){return 0;
});
var ts_bind$2068;
var v$2795 = fix$4957.$type_lexp(env_bind$2043,v$2083);
switch (v$2795[0]) { case 0: {ts_bind$2068 = v$2795[1];
 break; }default: {ts_bind$2068 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.LET.bind"));
} };
try {var l$2803 = basis$ListPair$.zipEq$87(v$2015,ts_bind$2068);
var fix$5034 = {};
fix$5034.$app = function(v$2805){lab$app: while (true) {if (v$2805 == null) {return 0;
} else {var v$2806 = v$2805;
var v$2807 = v$2806[0];
var v$2808 = v$2806[1];
var v$4654 = v$2807[0];
var v$4655 = v$4654[1];
var v$4656 = v$4654[2];
var v$4657 = v$2807[1];
(valid_s$801(env$1694[0],env$1694[1],env$1694[2],env$1694[3],env$1694[4]))([v$4655,v$4656]);
eqType$834("LET",[v$4656,v$4657]);
check_polymorphism$2044(v$4655);
(tools$NatSet$.isEmpty$589(tools$NatSet$.intersect$648(tools$NatSet$.fromList$605(v$4655),env$1694[2])))?0:(tools$Crash$.impossible$50("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var t$5035 = v$2808;
var v$2805 = t$5035;
continue lab$app;
};
};
};
var app$2804 = fix$5034.$app;
app$2804(l$2803);
} catch(v$5033) {(function(ListPair$UnequalLengths$2082){var t$5036 = ListPair$UnequalLengths$2082;
if (t$5036[0] == basis$ListPair$.en$UnequalLengths$45) {return tools$Crash$.impossible$50("LambdaStatSem.LET.pattern and bind type differ in numbers of components");
} else {throw ListPair$UnequalLengths$2082;
};
})(v$5033);
};
return fix$4957.$type_lexp(env_scope$2023,v$2084);
};
 break; }case 16: {var v$2010 = lexp$1697[1];
var v$2011 = v$2010[0];
var v$2012 = v$2010[1];
var env$$1971;
var fix$5007 = {};
fix$5007.$foldl = function(v$2823,v$2824){lab$foldl: while (true) {if (v$2824 == null) {return v$2823;
} else {var v$2825 = v$2824;
var v$2826 = v$2825[0];
var v$2827 = v$2825[1];
var t$5008;
var v$4660 = v$2826[2];
var v$4661 = v$2826[3];
var v$4662 = v$2826[0];
(valid_s$801(v$2823[0],v$2823[1],v$2823[2],v$2823[3],v$2823[4]))([v$4661,v$4662]);
var t$5012 = add_lvar$328;
var t$5011 = v$4660;
var t$5010 = [null,v$4662];
var t$5009;
var v$4664 = v$2823[2];
var v$4665 = v$2823[0];
var v$4666 = v$2823[4];
var v$4667 = v$2823[3];
t$5009 = [v$4665,v$2823[1],tools$NatSet$.addList$606(v$4661,v$4664),v$4667,v$4666];
t$5008 = (t$5012(t$5011,t$5010,t$5009));
var t$5013 = t$5008;
var t$5014 = v$2827;
var v$2823 = t$5013;
var v$2824 = t$5014;
continue lab$foldl;
};
};
};
var foldl$2822 = fix$5007.$foldl;
env$$1971 = (foldl$2822(env$1694,v$2011));
var type_pairs$1987;
var fix$5015 = {};
fix$5015.$map = function(v$2838){if (v$2838 == null) {return null;
} else {var v$2839 = v$2838;
var v$2840 = v$2839[0];
var v$2841 = v$2839[1];
var t$5018;
var t$5016;
var v$4676 = v$2840[1];
var v$4677 = v$2840[0];
var t$5017;
var v$4679 = fix$4957.$type_lexp(env$$1971,v$4676);
switch (v$4679[0]) { case 0: {var v$4680 = v$4679[1];
if (v$4680 == null) {t$5017 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.FIX"));
} else {var v$4681 = v$4680;
t$5017 = ((v$4681[1] == null)?v$4681[0]:(tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.FIX")));
};
 break; }default: {t$5017 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeListOne.FIX"));
} };
t$5016 = [t$5017,v$4677];
t$5018 = [t$5016,fix$5015.$map(v$2841)];
return t$5018;
};
};
var map$2837 = fix$5015.$map;
type_pairs$1987 = (map$2837(v$2011));
var fix$5019 = {};
fix$5019.$app = function(v$2845){lab$app: while (true) {if (v$2845 == null) {return 0;
} else {var v$2846 = v$2845;
var v$2847 = v$2846[0];
var v$2848 = v$2846[1];
eqType$834("FIX",v$2847);
var t$5020 = v$2848;
var v$2845 = t$5020;
continue lab$app;
};
};
};
var app$2844 = fix$5019.$app;
app$2844(type_pairs$1987);
var env_scope$1994;
var fix$5021 = {};
fix$5021.$foldl = function(v$2853,v$2854){lab$foldl: while (true) {if (v$2854 == null) {return v$2853;
} else {var v$2855 = v$2854;
var v$2856 = v$2855[0];
var v$2857 = v$2855[1];
var t$5022;
var v$4687 = v$2856[2];
var v$4688 = v$2856[3];
var v$4689 = v$2856[0];
(tools$NatSet$.isEmpty$589(tools$NatSet$.intersect$648(tools$NatSet$.fromList$605(v$4688),v$2853[2])))?0:(tools$Crash$.impossible$50("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
t$5022 = (add_lvar$328(v$4687,[v$4688,v$4689],v$2853));
var t$5023 = t$5022;
var t$5024 = v$2857;
var v$2853 = t$5023;
var v$2854 = t$5024;
continue lab$foldl;
};
};
};
var foldl$2852 = fix$5021.$foldl;
env_scope$1994 = (foldl$2852(env$1694,v$2011));
return fix$4957.$type_lexp(env_scope$1994,v$2012);
 break; }case 18: {var v$1967 = lexp$1697[1];
var v$1968 = v$1967[0];
var v$1969 = v$1967[1];
var v$1938 = fix$4957.$type_lexp(env$1694,v$1968);
switch (v$1938[0]) { case 0: {var v$1940 = v$1938[1];
if (v$1940 == null) {return tools$Crash$.impossible$50("LambdaStatSem.APP.argument type not arrow");
} else {var v$1942 = v$1940;
var v$1943 = v$1942[0];
switch (v$1943[0]) { case 3: {if (v$1942[1] == null) {var v$1963 = v$1943[1];
var v$1964 = v$1963[0];
var v$1965 = v$1963[1];
var ts$1946;
var v$2866 = fix$4957.$type_lexp(env$1694,v$1969);
switch (v$2866[0]) { case 0: {ts$1946 = v$2866[1];
 break; }default: {ts$1946 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.APP"));
} };
if (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1946,v$1964)) {return [0,v$1965];
} else {basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"types expected:\n");
var stringtree$2874;
var t$5001;
var v$2881 = [0,","];
var t$5003;
var fix$5002 = {};
fix$5002.$map = function(v$2883){if (v$2883 == null) {return null;
} else {var v$2884 = v$2883;
var v$2885 = v$2884[0];
var v$2886 = v$2884[1];
return [compiler_objects$LambdaExp$$4.layoutType$2837(v$2885),fix$5002.$map(v$2886)];
};
};
var map$2882 = fix$5002.$map;
t$5003 = (map$2882(v$1964));
t$5001 = [t$5003,v$2881,"]",0,"["];
stringtree$2874 = [0,t$5001];
tools$PrettyPrint$.outputTree$1071([function(s$2875){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$2875);
},stringtree$2874,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\ntypes:\n");
var stringtree$2888;
var t$5004;
var v$2895 = [0,","];
var t$5006;
var fix$5005 = {};
fix$5005.$map = function(v$2897){if (v$2897 == null) {return null;
} else {var v$2898 = v$2897;
var v$2899 = v$2898[0];
var v$2900 = v$2898[1];
return [compiler_objects$LambdaExp$$4.layoutType$2837(v$2899),fix$5005.$map(v$2900)];
};
};
var map$2896 = fix$5005.$map;
t$5006 = (map$2896(ts$1946));
t$5004 = [t$5006,v$2895,"]",0,"["];
stringtree$2888 = [0,t$5004];
tools$PrettyPrint$.outputTree$1071([function(s$2889){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$2889);
},stringtree$2888,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"application:\n");
var stringtree$2902 = compiler_objects$LambdaExp$$4.layoutLambdaExp$4422(lexp$1697);
tools$PrettyPrint$.outputTree$1071([function(s$2903){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$2903);
},stringtree$2902,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
return tools$Crash$.impossible$50("LambdaStatSem.APP");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.APP.argument type not arrow");
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.APP.argument type not arrow");
} };
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.APP.argument type not arrow");
} };
 break; }case 17: {var v$1925 = lexp$1697[1];
var v$1926 = v$1925[0];
var v$1927 = v$1925[1];
var v$1928 = v$1925[2];
switch (v$1927[0]) { case 0: {var v$1924 = v$1927[1];
valid_t$739(env$1694,v$1924);
 break; }default: {0;
} };
var t$5000 = fix$4957.$type_lexp;
var t$4999;
var v$2922 = env$1694[2];
var v$2923 = env$1694[0];
var v$2924 = env$1694[4];
var v$2925 = env$1694[3];
var v$2926 = env$1694[1];
var ftv$$2927;
switch (v$1927[0]) { case 0: {var v$2928 = v$1927[1];
ftv$$2927 = (tools$NatSet$.union$655(v$2922,ftv_Type$145(v$2928)));
 break; }default: {ftv$$2927 = v$2922;
} };
t$4999 = [v$2923,compiler_objects$Excon$$2.add$470(v$1926,v$1927,v$2926),ftv$$2927,v$2925,v$2924];
return t$5000(t$4999,v$1928);
 break; }case 9: {var v$1912 = lexp$1697[1];
var v$1913 = v$1912[0];
var v$1914 = v$1912[1];
var v$1900 = fix$4957.$type_lexp(env$1694,v$1913);
switch (v$1900[0]) { case 0: {var v$1902 = v$1900[1];
if (v$1902 == null) {return tools$Crash$.impossible$50("LambdaStatSem.RAISE.type not exn");
} else {var v$1904 = v$1902;
var v$1905 = v$1904[0];
switch (v$1905[0]) { case 2: {var v$1907 = v$1905[1];
return (v$1907[0] == null)?((v$1904[1] == null)?v$1914:(tools$Crash$.impossible$50("LambdaStatSem.RAISE.type not exn"))):(tools$Crash$.impossible$50("LambdaStatSem.RAISE.type not exn"));
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.RAISE.type not exn");
} };
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.RAISE.type not exn");
} };
 break; }case 13: {var v$1888 = lexp$1697[1];
var v$1889 = v$1888[0];
var v$1890 = v$1888[1];
var v$1863 = fix$4957.$type_lexp(env$1694,v$1890);
switch (v$1863[0]) { case 0: {var v$1865 = v$1863[1];
if (v$1865 == null) {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1867 = v$1865;
var v$1868 = v$1867[0];
switch (v$1868[0]) { case 3: {var v$1870 = v$1868[1];
var v$1871 = v$1870[0];
if (v$1871 == null) {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1873 = v$1871;
var v$1874 = v$1873[0];
switch (v$1874[0]) { case 2: {var v$1876 = v$1874[1];
if (v$1876[0] == null) {if (v$1873[1] == null) {if (v$1867[1] == null) {var v$1886 = v$1870[1];
var ts$1880;
var v$2949 = fix$4957.$type_lexp(env$1694,v$1889);
switch (v$2949[0]) { case 0: {ts$1880 = v$2949[1];
 break; }default: {ts$1880 = (tools$Crash$.impossible$50("LambdaStatSem.unTypeList.HANDLE"));
} };
return (compiler_objects$LambdaBasics$.eq_Types$2461(ts$1880,v$1886))?[0,v$1886]:(tools$Crash$.impossible$50("LambdaStatSem.HANDLE"));
} else {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.HANDLE.wrong handler type");
} };
 break; }case 4: {var v$1847 = lexp$1697[1];
var v$1848 = v$1847[1];
var v$1849 = v$1847[0];
var tn$1838;
switch (v$1849) { case 31: {tn$1838 = special_objects$TyName$$1.tyName_INT31$206;
 break; }case 32: {tn$1838 = special_objects$TyName$$1.tyName_INT32$210;
 break; }default: {var s$2982 = "SWITCH_I.precision = " + (basis$Int32$.toString$449(v$1849));
tn$1838 = (tools$Crash$.impossible$50("LambdaStatSem." + s$2982));
} };
return type_switch$989(function(v$4843){return fix$4957.$type_lexp(env$1694,v$4843);
},function(v$1846){return tn$1838;
},v$1848);
 break; }case 2: {var v$1834 = lexp$1697[1];
var v$1835 = v$1834[1];
var v$1836 = v$1834[0];
var tn$1825;
switch (v$1836) { case 31: {tn$1825 = special_objects$TyName$$1.tyName_WORD31$222;
 break; }case 32: {tn$1825 = special_objects$TyName$$1.tyName_WORD32$226;
 break; }default: {tn$1825 = (tools$Crash$.impossible$50("LambdaStatSem.SWITCH_I"));
} };
return type_switch$989(function(v$4845){return fix$4957.$type_lexp(env$1694,v$4845);
},function(v$1833){return tn$1825;
},v$1835);
 break; }case 3: {var v$1823 = lexp$1697[1];
return type_switch$989(function(v$4847){return fix$4957.$type_lexp(env$1694,v$4847);
},function(s$1822){return special_objects$TyName$$1.tyName_STRING$234;
},v$1823);
 break; }case 6: {var v$1818 = lexp$1697[1];
return type_switch$989(function(v$4849){return fix$4957.$type_lexp(env$1694,v$4849);
},function(v$1790){var v$1817 = v$1790[0];
var v$1801;
var v$2988 = env$1694[0];
var v$2990 = compiler_objects$Con$$2.lookup$490(v$2988,v$1817);
switch (v$2990[0]) { case 0: {v$1801 = v$2990[1];
 break; }default: {var s$2991 = "lookup_con.Cannot find " + v$1817[1];
v$1801 = (tools$Crash$.impossible$50("LambdaStatSem." + s$2991));
} };
var v$1802 = v$1801[1];
switch (v$1802[0]) { case 2: {return v$1802[1][1];
 break; }case 3: {var v$1804 = v$1802[1];
var v$1805 = v$1804[1];
if (v$1805 == null) {return tools$Crash$.impossible$50("LambdaStatSem.SWITCH_C.Wrong con type");
} else {var v$1807 = v$1805;
var v$1808 = v$1807[0];
switch (v$1808[0]) { case 2: {if (v$1807[1] == null) {return v$1808[1][1];
} else {return tools$Crash$.impossible$50("LambdaStatSem.SWITCH_C.Wrong con type");
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.SWITCH_C.Wrong con type");
} };
};
 break; }default: {return tools$Crash$.impossible$50("LambdaStatSem.SWITCH_C.Wrong con type");
} };
},v$1818);
 break; }case 5: {var v$1786 = lexp$1697[1];
return type_switch$989(function(v$4851){return fix$4957.$type_lexp(env$1694,v$4851);
},function(v$1782){var v$1785 = v$1782[0];
var v$3009 = env$1694[1];
var v$3011 = compiler_objects$Excon$$2.lookup$448(v$3009,v$1785);
switch (v$3011[0]) { case 0: {v$3011[1];
 break; }default: {var s$3012 = "lookup_excon.Cannot find " + v$1785[1];
tools$Crash$.impossible$50("LambdaStatSem." + s$3012);
} };
return special_objects$TyName$$1.tyName_EXN$270;
},v$1786);
 break; }case 10: {var v$1776 = lexp$1697[1];
var v$1777 = v$1776[0];
var v$1778 = v$1776[1];
return [0,fix$4957.$type_prim(env$1694,v$1777,v$1778)];
 break; }default: {var v$2158 = lexp$1697[1];
var v$2159 = v$2158[1];
var v$2160 = v$2158[0];
var t$5046;
var v$2156;
var fix$5045 = {};
fix$5045.$map = function(v$3032){if (v$3032 == null) {return null;
} else {var v$3033 = v$3032;
var v$3034 = v$3033[0];
var v$3035 = v$3033[1];
var t$5048;
var t$5047;
var v$4692 = v$3034[1];
var v$4693;
var v$4694 = env$1694[3];
var v$4695 = compiler_objects$Lvars$$2.lookup$553(v$4694,v$4692);
switch (v$4695[0]) { case 0: {v$4693 = v$4695[1];
 break; }default: {var s$4696 = "lookup_lvar.Cannot find " + (compiler_objects$Lvars$$1.pr_lvar$68(v$4692[0],v$4692[1],v$4692[2],v$4692[3],v$4692[4]));
v$4693 = (tools$Crash$.impossible$50("LambdaStatSem." + s$4696));
} };
t$5047 = [v$4693[1],v$4692,v$4693[0]];
t$5048 = [t$5047,fix$5045.$map(v$3035)];
return t$5048;
};
};
var map$3031 = fix$5045.$map;
v$2156 = (map$3031(v$2159));
var t$5050;
var fix$5049 = {};
fix$5049.$map = function(v$3049){if (v$3049 == null) {return null;
} else {var v$3050 = v$3049;
var v$3051 = v$3050[0];
var v$3052 = v$3050[1];
var t$5054;
var t$5051;
var v$4698 = v$3051[0];
var t$5053 = v$4698;
var t$5052;
var v$4699 = env$1694[1];
var v$4700 = compiler_objects$Excon$$2.lookup$448(v$4699,v$4698);
switch (v$4700[0]) { case 0: {t$5052 = v$4700[1];
 break; }default: {var s$4701 = "lookup_excon.Cannot find " + v$4698[1];
t$5052 = (tools$Crash$.impossible$50("LambdaStatSem." + s$4701));
} };
t$5051 = [t$5053,t$5052];
t$5054 = [t$5051,fix$5049.$map(v$3052)];
return t$5054;
};
};
var map$3048 = fix$5049.$map;
t$5050 = (map$3048(v$2160));
t$5046 = [t$5050,v$2156];
return [2,t$5046];
} };
} catch(v$4998) {return (function(v$2165){var t$5055 = v$2165;
if (t$5055[0] == en$AbortExp$1092) {throw exn$AbortExp$1092;
} else {var stringtree$3062 = compiler_objects$LambdaExp$$4.layoutLambdaExp$4422(lexp$1697);
tools$PrettyPrint$.outputTree$1071([function(s$3063){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3063);
},stringtree$3062,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
var stringtree$3064 = compiler0$LambdaStatSem$.layout_env$580(env$1694[0],env$1694[1],env$1694[2],env$1694[3],env$1694[4]);
tools$PrettyPrint$.outputTree$1071([function(s$3065){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3065);
},stringtree$3064,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
throw exn$AbortExp$1092;
};
})(v$4998);
};
};
var type_prim$1094 = fix$4957.$type_prim;
var type_lexp$1093 = fix$4957.$type_lexp;
compiler0$LambdaStatSem$.type_check$2256 = function(v$2274,v$4821,v$2275){var v$2276 = v$2275[1];
var v$2277 = v$2276[0];
var v$2278 = v$2276[1];
(letrec_polymorphism_only$54[0] = v$4821,0);
var env$$2266;
var v$3826 = v$2277[1];
var concat$3827;
var b$3829 = null;
concat$3827 = (function(c$3830){var fix$4958 = {};
fix$4958.$foldl = function(v$3832,v$3833){lab$foldl: while (true) {if (v$3833 == null) {return v$3832;
} else {var v$3834 = v$3833;
var v$3835 = v$3834[0];
var v$3836 = v$3834[1];
var t$4959 = basis$List$.s$n$645([v$3835,v$3832]);
var t$4960 = v$3836;
var v$3832 = t$4959;
var v$3833 = t$4960;
continue lab$foldl;
};
};
};
var foldl$3831 = fix$4958.$foldl;
return foldl$3831(b$3829,c$3830);
});
var c$3892 = concat$3827(v$3826);
var fix$4961 = {};
fix$4961.$foldl = function(v$3894,v$3895){if (v$3895 == null) {return v$3894;
} else {var v$3896 = v$3895;
var v$3897 = v$3896[0];
var v$3898 = v$3896[1];
var t$4988 = fix$4961.$foldl;
var t$4987;
var t$4986 = compiler0$LambdaStatSem$.plus$252;
var t$4985 = v$3894;
var t$4962;
var v$3902 = v$3897[0];
var v$3903 = v$3897[1];
var v$3904 = v$3897[2];
var env$3905;
var fix$4963 = {};
fix$4963.$foldl = function(v$3907,v$3908){if (v$3908 == null) {return v$3907;
} else {var v$3909 = v$3908;
var v$3910 = v$3909[0];
var v$3911 = v$3909[1];
var t$4983 = fix$4963.$foldl;
var t$4964;
var v$3914 = v$3910[0];
var v$3915 = v$3910[1];
var v$4591;
switch (v$3915[0]) { case 0: {var t$4974 = v$3902;
var t$4973;
var t$4972;
var t$4971 = [v$3915[1],null];
var t$4970;
var t$4969;
var t$4968;
var t$4967;
var t$4966;
var fix$4965 = {};
fix$4965.$map = function(v$3919){if (v$3919 == null) {return null;
} else {var v$3920 = v$3919;
var v$3921 = v$3920[0];
var v$3922 = v$3920[1];
return [[0,v$3921],fix$4965.$map(v$3922)];
};
};
var map$3918 = fix$4965.$map;
t$4966 = (map$3918(v$3902));
t$4967 = [t$4966,v$3903];
t$4968 = [2,t$4967];
t$4969 = [t$4968,null];
t$4970 = t$4969;
t$4972 = [t$4971,t$4970];
t$4973 = [3,t$4972];
v$4591 = [t$4974,t$4973];
 break; }default: {var t$4979 = v$3902;
var t$4978;
var t$4977;
var t$4976;
var fix$4975 = {};
fix$4975.$map = function(v$3924){if (v$3924 == null) {return null;
} else {var v$3925 = v$3924;
var v$3926 = v$3925[0];
var v$3927 = v$3925[1];
return [[0,v$3926],fix$4975.$map(v$3927)];
};
};
var map$3923 = fix$4975.$map;
t$4976 = (map$3923(v$3902));
t$4977 = [t$4976,v$3903];
t$4978 = [2,t$4977];
v$4591 = [t$4979,t$4978];
} };
var v$3931 = v$3907[2];
var v$3932 = v$3907[0];
var v$3933 = v$3907[4];
var v$3934 = v$3907[3];
var v$3935 = v$3907[1];
var v$3936;
var t$4982 = tools$NatSet$.union$655;
var t$4981 = v$3931;
var t$4980;
var v$3937 = v$4591[0];
var v$3938 = v$4591[1];
t$4980 = (tools$NatSet$.difference$641(ftv_Type$145(v$3938),tools$NatSet$.fromList$605(v$3937)));
v$3936 = (t$4982(t$4981,t$4980));
t$4964 = [compiler_objects$Con$$2.add$512(v$3914,v$4591,v$3932),v$3935,v$3936,v$3934,v$3933];
return t$4983(t$4964,v$3911);
};
};
var foldl$3906 = fix$4963.$foldl;
env$3905 = (foldl$3906(compiler0$LambdaStatSem$.empty$200,v$3904));
var v$4594;
var fix$4984 = {};
fix$4984.$map = function(v$3941){if (v$3941 == null) {return null;
} else {var v$3942 = v$3941;
var v$3943 = v$3942[0];
var v$3944 = v$3942[1];
return [v$3943[0],fix$4984.$map(v$3944)];
};
};
var map$3940 = fix$4984.$map;
v$4594 = (map$3940(v$3904));
var v$3948 = env$3905[2];
var v$3949 = env$3905[0];
var v$3950 = env$3905[4];
t$4962 = [v$3949,env$3905[1],v$3948,env$3905[3],special_objects$TyName$$2.add$1195(v$3903,v$4594,v$3950)];
t$4987 = (t$4986(t$4985,t$4962));
return t$4988(t$4987,v$3898);
};
};
var foldl$3893 = fix$4961.$foldl;
env$$2266 = (foldl$3893(compiler0$LambdaStatSem$.empty$200,c$3892));
var fr$2267;
try {fr$2267 = (type_lexp$1093(compiler0$LambdaStatSem$.plus$252(v$2274,env$$2266),v$2278));
} catch(v$4989) {fr$2267 = ((function(s$m$2270){var stringtree$3951 = compiler_objects$LambdaExp$$4.layoutLambdaExp$4422(v$2278);
tools$PrettyPrint$.outputTree$1071([function(s$3952){return basis$TextIO$.output$101(tools$Flags$$1.log$92[0],s$3952);
},stringtree$3951,tools$Flags$$1.colwidth$91[0]]);
basis$TextIO$.output$101(tools$Flags$$1.log$92[0],"\n\n");
throw s$m$2270;
})(v$4989));
};
var env$$$2273;
switch (fr$2267[0]) { case 2: {var v$3954 = fr$2267[1];
var v$3955 = v$3954[1];
var v$3956 = v$3954[0];
var env$$3957;
var fix$4990 = {};
fix$4990.$foldl = function(v$3968,v$3969){lab$foldl: while (true) {if (v$3969 == null) {return v$3968;
} else {var v$3970 = v$3969;
var v$3971 = v$3970[0];
var v$3972 = v$3970[1];
var t$4991;
var v$4002 = v$3971[1];
var v$4003 = v$3971[2];
var v$4004 = v$3971[0];
t$4991 = (add_lvar$328(v$4002,[v$4003,v$4004],v$3968));
var t$4992 = t$4991;
var t$4993 = v$3972;
var v$3968 = t$4992;
var v$3969 = t$4993;
continue lab$foldl;
};
};
};
var foldl$3967 = fix$4990.$foldl;
env$$3957 = (foldl$3967(compiler0$LambdaStatSem$.empty$200,v$3955));
var fix$4994 = {};
fix$4994.$foldl = function(v$3993,v$3994){lab$foldl: while (true) {if (v$3994 == null) {return v$3993;
} else {var v$3995 = v$3994;
var v$3996 = v$3995[0];
var v$3997 = v$3995[1];
var t$4995;
var v$4008 = v$3996[0];
var v$4009 = v$3996[1];
var v$4015 = v$3993[2];
var v$4016 = v$3993[0];
var v$4017 = v$3993[4];
var v$4018 = v$3993[3];
var v$4019 = v$3993[1];
var ftv$$4020;
switch (v$4009[0]) { case 0: {var v$4021 = v$4009[1];
ftv$$4020 = (tools$NatSet$.union$655(v$4015,ftv_Type$145(v$4021)));
 break; }default: {ftv$$4020 = v$4015;
} };
t$4995 = [v$4016,compiler_objects$Excon$$2.add$470(v$4008,v$4009,v$4019),ftv$$4020,v$4018,v$4017];
var t$4996 = t$4995;
var t$4997 = v$3997;
var v$3993 = t$4996;
var v$3994 = t$4997;
continue lab$foldl;
};
};
};
var foldl$3992 = fix$4994.$foldl;
env$$$2273 = (foldl$3992(env$$3957,v$3956));
 break; }default: {env$$$2273 = (tools$Crash$.impossible$50("LambdaStatSem.env_from_frame. No frame"));
} };
return compiler0$LambdaStatSem$.plus$252(env$$2266,env$$$2273);
};
return 0;
})();
